%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: GPRegression.pdf
%%Creator: Adobe Acrobat 8.0
%%For: shujliu
%%CreationDate: 2017/3/22, 16:51:41
%%BoundingBox: 0 0 351 216
%%HiResBoundingBox: 0 0 351 216
%%CropBox: 0 0 351 216
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	1 index dup/ID get exch/Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.30 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.30 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.30 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get ne dup
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
				if
				end
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} (% &end XMP packet& %) ReadBypdfmark_5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xap:ModifyDate="2017-03-22T16:51:32+08:00"
   xap:CreateDate="2017-03-22T16:50:03+08:00"
   xap:MetadataDate="2017-03-22T16:51:32+08:00"
   xap:CreatorTool="LaTeX with hyperref package"
   dc:format="application/pdf"
   xapMM:DocumentID="uuid:ce5cc7b7-574c-454a-b20b-db1e83ddd087"
   xapMM:InstanceID="uuid:ac9ae032-1a31-42c6-a074-3a6e3d89e6da"
   pdf:Producer="pdfeTeX-1.21a">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Gaussian Processes for Machine Learning</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Carl Edward Rasmussen and Christopher K. I. Williams</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
/0 {
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!!~>
exch 0 sub 255 0 sub 1 0 sub div mul 0 add
dup 255 gt{pop 255 }if cvi
1 mul 1 getinterval
0 get
1 0 sub 255 div mul 0 add
dup 0 lt{pop 0 }if
dup 1 gt{pop 1 }if

} bind /Procedure add_res
/1 {
<~J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#J:N0#
~>
exch 0 sub 255 0 sub 1 0 sub div mul 0 add
dup 255 gt{pop 255 }if cvi
1 mul 1 getinterval
0 get
1 -1 sub 255 div mul -1 add
dup -1 lt{pop -1 }if
dup 1 gt{pop 1 }if

} bind /Procedure add_res
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -216 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 216 li
351 216 li
351 0 li
cp
clp
[1 0 0 1 -72 0 ]ct
false sop
/0 
[/DeviceGray] /CSA add_res
0 gry
true set_gvm
%ADOBeginSubsetFont: FZLBAA+CMR10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /FZLBAA+CMR10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 38 /ampersand put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 71 /G put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 88 /X put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
def
/UniqueID 5000793 def
/FontBBox {-251 -250 1009 969} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 448 666 677] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
42 dict dup begin
/ampersand <1C60D8A8C9B08A946182837629000F595D5072C87B3413C2A360
E21C4DE585638324591D37D6282580336F0FC309FB5EB252BFE7A4E2EC044A25
6B80A8777A6191802DE0F48AA08D54BA6E50F365D0BD16FAC838EB99B38EE530
B7D1E93477D01A099288F65AC3D734BFC1FFD209D868C021E7EAF2515608BA01
4D59DCEFC4DE4FCD7B1FB727E3D85083CE704552BF7B0EDCEF011B8F27808270
5824D1878EDA461116560337D0E1F7F2BD5B6A13A08196C11C605173A42AECFD
ED4F1711C9A0EFE78A9630EBCDA469C09B17FAB44E36C2B09DBEC3725AA00CA3
10DCA25065C79429641A804DD9147DFE8C5C817903D6F82CDE1F21441595778B
35578B> |-
/comma <1C60D8A8C9B08A9570810981675918D0BCF1CD202F5F15202B7A7698
DF02C61BB3071F67A562DD96D0521F578EC9F57BF5A71BF023ACCD67B8727CFD
38538E62ACB3D55D0B01252803DA68060E5342CFD41A7D> |-
/period <1C60D8A8C9B08A9570810981675968F2C907C696DFE9BE69433F613
9DF6C45B8165ACC43B6E0B309859F778ABCF0> |-
/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C1
2484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D
1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42
892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18
232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
0728A740ED77D054B4743ECA5E3947520FEF6B23D548765D11> |-
/two <1C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EEB9B3F6A08293A
A33E44598842821CBFE74832C3A2FC51890F3A66AFDE8EA8269173784AF985B0
8CD4044AADA37EBF8296E8DBBCEABE3042A3995F6A3A8DE32D90D624CEDF4C1B
CFEECD943884DD6052923FAC92315AE2977DECA1B6F479ADBDA41B10FDF2F38D
2B74CBF99D8D6FF4> |-
/three <1C60D8A8C9B7A73D3B2B97DEB4C7BDB68E0D63865C8BF294429AD1BA
AE59A25299F9306A9E28AA5C0C0AF9F97F56096DB0FD0EC440ACCE834B0BA539
2FD94D026768A961AA5D1A88FAE30F2B2033E77AFAB55B0B9C8092CD226DD9EF
EEAAF5CD5AE79D6DDEC4C37DC43DE3B85DD2A2EC4DC0C9F349D5E8F9F615782E
DC8C53805553FD3C0007C1818BF3D99AB659A079ED36132BBDC613CA63D7A0FE
429706DBC6BA998CE56A89C002758EF37F90A390F83B3DFE49D312FA66FDF2F1
6212D1503559B35FC2DB8BD5A49535> |-
/five <1C60D8A8C9B7A73D3B2B97F19D54A2E00E7DDA8E72064220CB7581D13
CEDF071F346430E40993A6297E3A2A6D6093205222D977AC7F7B65CC82B221D9
B18ADEA5D4AF0261ABF060D3E283C7B3B5EB39FF499721FD51203AE59E3BEA25
7DFD3E472FEF67221488EC8D1F355E2FAD057CA44A8B4BAD6C6C719C164907CB
F9A6CC770DB0C7E58A37D2385E23F576BCFF94FFBFD8ADD4C5E6C32CD83ACEB7
7472D00FE1A4DC66393A99AC6BBD252B04C98B710149EA42B66ACE89D4FC4393
F3A09165DF477ABCB0E8A8DB21E4278CA219EBCC9B067F92619913BDBD1EF3C9
A> |-
/six <1C60D8A8C9B7A73D3B2B97FE394CF5175EFEC06CD8F59A375E41591273
E0C059123310EC79AE072F532A0C9DF11EDCF7D4B9D83F0A2FCBB058CCF95C0F
F8BAD8605C0C2E8D60E28BE3D0E0DD42D8AAC3094E7159CC3989179C22CC5AA3
B3825C4ED9C5A83B733BA4666CE2A2B0097F22D25C776953D494478010B9DD2B
957D6BF7D7A87CBAE6ACDB0F5D283FB8F9162F4638E98F510D9821787A5D0E83
5BEB255F8F8C0C281516F7A946A0E0B79E8072185D1B76EC3B7739FCD106> |-
/eight <1C60D8A8C9B7A73D3B2B97FFCAD0164E05E5D431E5753A04E6FF8EC1
000AA50C3017B6E7E9999AB6C275E1779B442C0B877DDFB2D44B7F4E9A13C0D3
1D45CB36A6CC41D13A4DBF4EBEA14D8D16B2BCB36E1F56BC84DA55341D0B9286
987CACCB201DA6A951DCA13BE347D0E4FB5789C143B7D2609F69022196D1BFEF
CE92B850D5FDA6E807120F5A95AEE617187289BA58C56B2077368525DE666A84
7A7B7580825D5A043E7D9FA68CB1F4> |-
/B <1C60D8A8C9B08A945A1AB9ADE1431F477760039895429B9BEADD61922CFC
184419BAEF0F9B56C23FC5661D652FB46838C6961959B988108B7BE7927DB7D1
13140FAE852560AD0321B29F8DDAF47C42DE855BFCE5E894359EC68F12B5A5EF
91D5C9A819F5353B8A7ECCA93AD7565B0CB87EA5B54A18A4872BB4B57604690E
4A511AD187CB4431D0387A106BD295650A020AB1BDC8890F221B49C542C90C76
C5207D49FCDC51B6E2E50707> |-
/C <1C60D8A8C9B08A9454CA4C75C5C983901A105955FD02AB95A1D9A8A1EF86
541AF97FFF68AEDD6EF3F9788853DEF093D0FBD78A3FC5DB04802F61AEF127B4
D274CEA5A0495BD438B2F75833238070F9A0DEDDCFDFABEF5BEDD017B6BBEB22
A7AE0ECB6D46586699459E2B529F0C643928AD0C60B989B7B119C20E74352A5B
2677AF404D34EE8C876EF19CEC> |-
/E <1C60D8A8C9B08A94478101EE5603CAF9EA65B0A05B8389D7C1CF5C51F1F7
4696C0CEF5645C7B6A40F500D79FE10E9FE662B3E9326A3808402CE1090D692C
4ED68EDB8B4431B5FCC4F04AE568DED0677392BD79B1264E9F3418193C5B917C
B34635B006E80D355A74C6CE78F0EF1B944BBA6609A53532C815AD3A66B5B7FC
E4313375B43F59207B03> |-
/G <1C60D8A8C9B08A947C9D95A245F89039778B2173C1A591D9FE30270E0480
C1E99B55DAE8B4C513847176229A7952AA796157257E7AC944F6B278AD8A2DA5
AC46FF1C6D6F110CDFB4BB3914A9408F9C2AFCFA4434A091705F2099CF49830C
283515B1505AE428BBF04FE983D31A3E7AD873D9507C8FC142F3EF9AFBA92745
F95FD70E4BD6793422BAB5B4084FD440EDBAC94D7F7359EBCE65824B100DE1CA
30069239B01791B073785F8D6AD778F75C7F30B8C1E9CA7CCDA3254888A48B0F
67AFFAD2D140> |-
/I <1C60D8A8C9B08A9591900960B3FA4612DFF926AB21A530E1912F33677612
AC06B324D812E42049FF4946BE5E0FFA24FA0C62F2839FF2110EEC7EE0A42476
46E6F699D4C8BECE1825B3A661611E4D55F40F2E64FACB836D4D0C9780F60650
FBF10E0D42> |-
/K <1C60D8A8C9B08A94618283762900F19A17FAE9FB75C4677F23E50929D1D7
A9320493EB2FE478E72191B54E2ADEA6534853E19022BBA063C53AEE000F6DA2
62A32FE0965383AC5A84EC813ACBA895888DB4440DA63048EEF49B4DDAD4A1FC
4420D8448D3A2F9E97FDC1B7E3A919E6D7B9D61FD69271BAF8F1C0B657ECA347
5839B3BB1668888E5F640557BC22B1565DEFA4AE7C9FF54B4E88AB65B6A1D533
F98AFE38BA256A2035CB2414012B5EE03765F889483AE895BE1283CC1B68D02C
DFE160B7957544CCA56FA1> |-
/L <1C60D8A8C9B66482C0AC2637AE818322843640782B4084B6BCB7EAC5B87B
B576EB951099027BB2082BCC7485557848EF03B40B2EB92530435BB00C45D615
C96475683CC7E08881B1B27444928202F03C5C87C466F5A1BE71B5B95971F09E
1717B5E5FD97DD51> |-
/M <1C60D8A8C9B08A94284A0D047609A407E661A852E250B140B4157477FB2A
AE2E22210B2D780B692B0718211E5BD86C3DCF8087849BEE2B9F6D1D8621E40C
8FBE892AC1B23002BF18819E26C6741335DF8DA8AC82506D7051C0505D48DDFA
17EE84A06E07C05EBAC6174D600BACE071866247BE6C83F4CF28F6D6EE6A6CF8
A788C4FFFDBDCA978C2B0B201753D21CB7AF0542C690ECE8E7EDBE1B1FB29939
734E35E0ECCA8BA7FAEB58AC205A8A82A94C960A65> |-
/N <1C60D8A8C9B6E3FA234780EB1A04772A480C0BA74E47A01736C3330B79F9
4973DD24567A876D5331B1C1E5BDF74D24451B47112EB46B9EF65275AA4A1B84
3B86074DE54D20B17279B8B61F620808991404B9C81BB570221FC9ADD03DB794
BF42287F0E41BBE081B607E124D3995DAA3B69C88F88634917B7C5B3ECB04ABA
359AB76EF6C57846C442789B4408741761D97ABFED4F6595> |-
/P <1C60D8A8C9B08A94478101EE5603CAF9EA65868978F157B7D9DB71254735
874610F70F596BC7EA511E082F259BF630E524E2D898114EE9783BC5437A45E2
DCBF23F073CBC654CBA1B1695A1209F3D1A70D804EBC0646354386ABD8A21B06
3C909BD0F3A31727CCDF6903D2914272124D314D44FE6AC748274E0D36D0B94F
A8771DFCE2> |-
/R <1C60D8A8C9B08A9451E2C198C46CF0D9EABFA9FD85792390C749BB6A88FA
7917DCB59892FD0C5009977DF79610519F2C9B4981160954D87B28067B64902F
CA672A1EA4467509C61E197E33F24FCA5EFBDFB729B55B5C4117ECDB5BECF27E
38689E84ACC3DB0FC92B91213DD4A7E85FA5734C4E13F3F79A0D32FDD8C93C62
AE6FCB0157C6098018B88A9792212F13C7D0A1033F2D5084E094BAD54582913E
E91D18A8548EFC0A88E1E44D93AF30413B31D6EB8A83F584066D1B1BAAEDC943
46D88042D1DFD12BF62633AA55A8138483062D74A9EFC7B33F2C50BB370D726B
76FB1D1FC63806D916CC235BF380> |-
/S <1C60D8A8C9B08A95C5897169EED99899F86A6DCF3CD291B001131D3BCB45
BF71748507542417352D5B30F63C60EB90DCF55005F88E95175B21D3219CD9E9
2E89E417B177D285600845553F66626D2225552D23A7697637BDCEEECAEA18AB
42A896E96FF5B3536CC368A5F7504B6C75D962A4B5F9534F79AC78DC99848461
42257A40DE257430C92806EBA73FF7D93DF0A6C207299E2D17F4071F9096D016
163F4D3EC1889ADA266D3682F2D99904573A5022A10E61069737F2D55F919F95
A33DB6DD2667321E4727855B58DBF4B1E5A294928E6CEABFBD34F296C1B758> |-
/T <1C60D8A8C9B08A9454CA4C75C5C97DCE7AB32777FAAECD12647866E7CB3F
CCDC541E37F2225E520DEDE695980D4012AD5B972BDABC7E7E5410E71AC63692
4E778B3131B6C4D1E76F8C4592AC311A2107F53DC1850538C9E487E6D5DBDFE8
027D7126BA9ED8B24E7379B57E474ACD298BF6B3700CC970D80111DD98EFC872
C24D0DA3C75DDDFD177C6D15> |-
/W <1C60D8A8C9B08A94DF93CFE877B47057C7AA7A39F5E120783EC688EC89C1
8D88E4CFACCAF32BE3FB943A3FA817A1C0529930AB0065CCAE1705346D415CAF
6F3BE8B28DBD2FE903E61186A32EDF38B838858E46745C2B7FA48B8E6E0D0986
BD7A8BA149207F3F0EA77A4EFE06A7122E8FC6C2B04A0B03DD31C256ACF417D3
9DB720EA63717B8AF030369F0ACE1BFC1BDA8084F86023424DB31D0A5F8EC215
16A92BBE98292BD36BE0960649A591F01066473D657A65D807C4E00EF2369AF8
93D97C00CCFC22CA894227F9117CFE788197C57F5A> |-
/X <1C60D8A8C9B6E3FA234780EB1A04777EE97AC072908A4C26FBF31AFD564A
70F486BD167B7C0C13700840A0DE48F9FE047A696FA322DDA20E61092B47190A
D33AACE97179EE3464FE06B81E3FC8AA37960E6298971304DFBF1A048332F260
77F5E9D9897E41BA2C6173A5EF6551B7FADDAAB76C21F2AF032948E65F5F51F8
589C3A380F75DEFC95D4340A35D69E4702D1268C0235B80AC4ED983775FDE86A
2B67CAB0B30FEB22666B5CC41655C2A2B21D5693688A890766E250AF670191B1
AE7CA8E5AD2D582FFBD3CBCEA0A4E511E94DB77CF8B8EAF6216D115225F66A> |-
/a <1C60D8A8C9B7A73DCB03313BCF7BA903D75A87DEC6EB34306A2C875A7B9D
6F03FA56EC184A666A965328412CD76CCEF3CAD69BC525A6A87F1F2D19F5D1B7
FD73AE7371FEED4E7F3CC2802C465D966135A2EE9CF8A0BF2840255B111E8037
10168818EEA9C2DFE9C99A20ABC767161183EAE437218D2E1239DA58B1500E1F
7F2D27496F0873D02EC47EEDEB84F4B0D78003FE0EDD73F083F9C52A46ED942D
3466EB983C6AA2296E8F2602B3A2BC810F850571C10A31EC74CF8C0EACAB287D
E5031078E0A963D32061> |-
/c <1C60D8A8C9B08A95B1F07368C45D8D2AF4BC563DEDE799FE18B66F38FD9D
86FB33EF8157737910C2A21CF1859082F165505E98A2D559D2B21F8D988656D0
8136253C2962AD8B7BF2A4CE3B3D77FFEE3AC8C805C2D68655124FEAC62FFFA4
B2E84874A6B6FEF5E31C416CAF5B3B1B491C61B5BE3DD5423D78BF> |-
/e <1C60D8A8C9B08A95B1F07368C45D8D2AF4BC97E4CB216B20786BB8409E5C
B08921F2042A459BE0DE80ADD86BD8D3FC85885973F3B8E71B750A7BBBCB2EC2
7654BABC4A421F19CAF38DA67236E15B4E8454D787305B09443F6B2507420195
7C1B86920E2C7CED0E614A34A438ED72C4B057D323DD16C0BE898DF1> |-
/f <1C60D8A8C9B08A956BA65798425CE9B0A78F07A04AF2F8524751F181F94C
EF756ACD6AB92BD091D7482415CDE9144C26B1697F8DF70FCF1DEFD4FA16FBE3
9206B1378E548C93AC587B3EF0B1ED3ACC74CAAD2CEA03512A889B4BA237C2E5
79B0E01D3D82622F69FB50659184006104BE20E13DAFC7793B241C1FD1A3880C
4AA41E91E3F86F715551> |-
/g <1C60D8A8C9B7A73DB58EA28807584EB19BC6EA1448A12312E623B90358A1
6C40D52FF50AB2BCF83396829D3E501BD0EAB8595D9693E632ABAF05A4D1FBD5
E9FB32E59BDDF670BD3805B1A8647E1D2641030D018FCD259301AC116F3DEE87
AA68CECE526FB7B8BC0206EAEFB580DA05969530F8D40CD15579447988D4CF07
5C24F15E32C0A9AC369D08351B0D49CAFF731E593F6C55EE74B16DE9D9A4B199
3D1CF0FF1D3A57A52A0C64F106D414FF112A5DA34DEE3AB850B6A4492C25D3F0
9EFC86EFE140D828B1F4BAE5664F14014926ED1A5AFBCC814A3428F143CF5FB2
88702BF23054721A3BAA8027EF0D34A7A361A40A12717277178C5820C35A1131
71DEF9DBB455B7A9D7BB98406120BD93C5B4D04664B09F3E37553C20D6> |-
/h <1C60D8A8C9B08A95C5897169EED9664BED359D179BDDBB0B44F78A354068
F1882593A360E640ED3246F83F38F17203BDBBCE194B9E0A6BE002DEEC6E590D
34E67EDA7804A1C1CA9840B3036AA2F9D110358C769BBBA6E4ABF35AA04B72BD
94DD37985D5F60B66C4561BE8C71200493330FB300D08910FDC33541EB4ED02B
C0E5DA36A3AFFA9C2A4E001E9049F0E519949606FF0894B2E73F51ED> |-
/i <1C60D8A8C9B08A9570810981675968AD25F24D2B3EAE33A4AEDADBE9B65D
A53E9F2E54B16133284CA9914BED3880C793207FBDC7926300AD07E6E54407B5
1EA082FB5EE3816A6A23A8296A947037E49B372BD5DFBDAE3E0626953F75EA84
BE757683B949F1DE2291C5796E30589D0B63B15E0D5680411C> |-
/l <1C60D8A8C9B08A9570810981675968AD25F317189905083B97CD6CD1B880
05B79B666989E13C0F8D0889AD0162C7E87274D188EBBD1A911FDD0B6E360AA1
C515725198B9106B157680FC> |-
/m <1C60D8A8C9B08A940B724A74A01E6B7E417A0EEA9CCF58837F16A4309279
D4C1CC08359D1FA7FD10E0AFA90B9132C47CDD4E6827D8017CAF4E5B65090CE2
B069620DC38FECF904BAC042B28FA35A5D6632CC2899B92571CA76E097477A12
37436144BDBB6157A5C5B473CDBDE040AFDE31D37159E83AC75CF12EA5793A01
76A3A422381930CC3B1A17BCD95B6EBD3104CC40253F80174C89524325EFE206
A7879C7C9E8C1F8E9C0ECBB2F9FBA1A090EF980204254E4E57D08097CBAA9E99
7A6E9DDAB21EC6126AA86AEA3B08AD43F991C523777A8E82724E5CA12D46D05C
7B51942202D1FD96F0> |-
/n <1C60D8A8C9B08A95C5897169EED9664BED359D179BD38846B55E34D4CAA6
E85E9CF3F20D5FF6B35F1C9AAE2A542B7B24E087B6004A4C7219997095CC0DD0
7A15DB83B5FEAD13F209441FFD364AD3DBF6E16129F3599BACA005A523490ABC
41E4DF320ACE384037EE1D352E3FAD8A9E2CECBD75A999F7B655F4FFBFAC6FFF
84029A8DF710DBB0D7CD4C1D20367E79BC4E312103DCC482005590EA2F1652EA
57C34D10CC78642AFD> |-
/o <1C60D8A8C9B7A73DCEB07E09D16841D605E4F67059E6B258F546B80703E4
CDAF20027B900118209D5372F965F2045D50C02A29110A048C891DEBA3210CDF
C5CDE2309C0CDE0E4855E9F6D8954C4C68826A14AD2E4C6227A036D85D304D6A
96FEAA92DEC3CD1B9F4AD57B5F1EBAB070FE911461A7D5B958F5> |-
/r <1C60D8A8C9B08A9584DCB847BA986212E50A1268FF1FD1FC6504D9F4D673
BD97E004E27192E1359AD741527FE014B82A8709E1D277CF1F73EB8831CADE61
1D9AD525BE07EEB6589229F52FE652CA10A278AC096BF0A2B010C8B215B1ACA0
BBB8EF8E3C77EF77F60B5CDD1035D115BEF1087A4AEB28A5F886037DA56DEC62
DBB1D4F1AE123A1AD0E8FD48681467> |-
/s <1C60D8A8C9B08A9586D4F7B21AA9B0967A13D9D7A42FE340F518B826828C
B1C2BB6756CD4C9284475BF78FAB574767246E1F9CBC21AACF1F3C97D1790131
F28F8DFADB3AAE0AA727045B30CDDB07BDF05EDA5C24C0AFE386D470551D7E8E
D902488F32C5E29D2F3E7F01605EE454D8B7A57FD0F16F8D3A10D6235D828477
DAAA15E6231D70C2BB9D9C0718FB249BC89490F9614317D9D2089D530687FFE9
B32E2EABFBD5A30223E1691D4FE59FFF3C416D75396DC2C2F68135236C16492B
80BA292D01981169C65CE545147B052951BDA4BD86> |-
/t <1C60D8A8C9B08A958B2129D6E9766AD6B3247B9CBDFB0724765D43ED23A7
B2BC7B24077C209594776C48799589E3DF7269407A6893D4C106057122D99E3F
649ACAFBE1812EEAA6C4DCDDD716BEB7694626BFFCAE715C15EF0FD8CE9F6FE4
E96B03> |-
/u <1C60D8A8C9B08A95C5897169EED96D33CB6A8CCD6F539BADC574F30FA019
2FAAA0351E8C93175F4B6BE4D2DCA8A13E4F01BEC5788441B5C71C1247369B6B
73137454B1C207EA4F43D533FE87512BAD8DD4F3DBBECD9A7A1CE3F33A4D3F31
6952FDB339B4B6A937009D6EC9821D8553981B7D8AABC3E750369071> |-
/y <1C60D8A8C9B08A95D222871B45C8674D920EF37C9F679699CE0B0FB82274
530CA6994E4FADB5C701717EBB278510CEF9D9EF1CB9FAAD7A4852BC3264781D
C6E288589EC6BAAB146DF34989FBC4BF92E31D5C616C1050CCC8D58166B328D1
E315EF5F39AF721DC6173775DFB26E6B6D40709A2BB053DECCFFF00649FC51FF
5F341744BBA1E71297E598A51054A43B9F951D7105485742D0A3BB595676EC69
1F5215F9D0DE2FC2C87BF5CCF8146FF6F88E> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFE+CMR10 /FZLBAA+CMR10 findfont ct_VMDictPut
/REKTFE+CMR10*1 
[38{/.notdef}rp /ampersand 5{/.notdef}rp /comma /.notdef /period /.notdef /zero 
/one /two /three /.notdef /five /six /.notdef /eight 
9{/.notdef}rp /B /C /.notdef /E /.notdef /G /.notdef 
/I /.notdef /K /L /M /N /.notdef /P 
/.notdef /R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp 
/a /.notdef /c /.notdef /e /f /g /h 
/i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r 
/s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]
REKTFE+CMR10 nf
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 -65.0815 mo
(C.E.Rasmussen&C.K.I.Williams,GaussianProcessesforMachineLearning,theMITPress,2006,)
[7.193 6.08714 6.78453 6.08714 7.33241 4.98129 3.9352 8.01982 5.53921 3.92524 3.9352 4.42339 
8.85675 11.0685 7.19299 6.08716 7.7509 6.08714 3.59644 6.08714 10.2415 2.76961 2.76959 2.76961 
2.75964 4.98129 8.30873 3.92525 6.08714 7.82068 4.98129 5.53922 3.92523 3.92523 2.76959 4.98132 
8.85675 6.78452 3.89536 5.26025 4.43335 4.4234 3.92523 3.93521 4.4234 7.25275 3.04855 4.98129 
7.22287 9.12582 4.98129 4.15439 5.53922 2.75964 5.53922 7.75089 6.22662 4.4234 4.98129 3.90533 
5.52924 2.76962 5.53918 4.98129 6.08716 3.87552 5.52927 7.75089 9.13577 3.59644 10.5106 6.78452 
3.90533 4.42337 3.93521 3.92523 6.08716 4.98129 4.98129 4.98126 4.98132 0 ]xsh
72 -55.1106 mo
(ISBN026218253X.)
[3.59642 5.53921 7.05344 10.7895 4.9813 4.98129 4.98131 4.9813 4.9813 4.98129 4.98131 4.98131 
4.98129 7.47195 0 ]xsh
165.176 -56.2612 mo
(c)sh
true set_gvm
%ADOBeginSubsetFont: NXMBAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /NXMBAA+CMSY10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 13 /circlecopyrt put
def
/UniqueID 5000820 def
/FontBBox {-29 -960 1116 775} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705] def
/OtherBlues [-124 -119] def
/BlueScale 0.04379 def
/StdHW [40] def
/StdVW [85] def
/StemSnapH [40 55] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/circlecopyrt <1C60D8A8C9B5EE31010EBE1CF4B412FE90677D9076137FA73
7282EAA324DA9106220E83533D44DE31524D774514365CEED2C868FD94F4E00E
CE108EB198F88732CE0C8B3619F691EF4A62259AD1AE6178DE7D1FD8FECA84BA
E40F4B15D4698D872F003983A1AA0109942E80D> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFF+CMSY10 /NXMBAA+CMSY10 findfont ct_VMDictPut
/REKTFF+CMSY10*1 
[13{/.notdef}rp /circlecopyrt 242{/.notdef}rp]
REKTFF+CMSY10 nf
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
162.408 -55.9609 mo
(\015)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
175.692 -55.1106 mo
(2006MassachusettsInstituteofTechnology.)
[4.98129 4.98131 4.98129 8.29886 9.13577 4.98129 3.92525 3.9352 4.98129 4.15442 5.25027 5.53922 
3.92523 4.43335 3.87553 3.87553 7.2428 3.59641 5.53922 3.92523 3.87552 2.76959 3.87552 5.53922 
3.86557 7.75092 4.98126 6.36612 6.36612 4.43335 4.14444 5.53922 5.52924 4.98129 2.76959 4.98129 
4.98132 4.43335 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: FFZAAA+CMTT10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /FFZAAA+CMTT10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 47 /slash put
dup 71 /G put
dup 80 /P put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 117 /u put
dup 119 /w put
def
/UniqueID 5000832 def
/FontBBox {-4 -235 731 800} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 611 622 431 440] def
/OtherBlues [-229 -222] def
/BlueScale 0.04796 def
/StdHW [61] def
/StdVW [69] def
/StemSnapH [61] def
/StemSnapV [69] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
19 dict dup begin
/period <1C60D8A8C9B78E059954B91DD6BBEE3FFAC4899E7241AD37B76CB92
A910164888C2C282BEE906495909BB5> |-
/slash <1C60D8A8C9B78E052A82CD5017F8F19B688F169B4CB59525512C57E4
E0723141AB92CFAE39A5CD046C6FC8F668F52BB2A00BAED99CC0DE86CAC89327
8CF2F5608049A5229A> |-
/G <1C60D8A8C9B78E0592363F0D6B65FFCA4C8CB28E33F197BA121763EEEDFC
F4BCE8F7F6923395327E13E3636D04EDDC115C38404D00CEC79750DC37EB1CC4
3E6EB4C18B2E9254BDD02CB6ECEF893C0AE1F02BA99671BFAFB56850188EC482
95FF282E8164A45370FBDCE891E2D0279C4E0287AC76AAE94C48CA71053DAAAA
5F5276FD2FF494B78255D21CADE03E08E1CE93F956347734FCC9CE9E> |-
/P <1C60D8A8C9B78E05996B357C1B4F39761A1FBD4D74466D5D79BE5DE6976C
93CF93CF77C7FF98B0869E052E20265C6FB0B9ED209564F3399EAF88EADEA64D
DB4F67015E3F91F19B9A030EA5420DD0409471AE6961D79AF9962161182BFA5A
FAA1225E022A8088058FF5E5002D7DFDE8> |-
/a <1C60D8A8C9B78E05996B357CFC3D6A68429CE44210300ADBF33D3BA65564
22DB30AA2C2DE7C9116C427A19DC90F7A98606BDBFB27DF4235F2AAAEBA26184
E5C8D38867C076F8FDD8600853EA72DC9D3F2800940687EC72A6F334200BA15B
ADC95674191868FBF18D675A9DF803EE70B50222D29881504A1059B3AFD24FEF
30B48C4F1746ADB09F7A9701B6D22B65D1EEEC5210E72A1090FCFC77ADC9FE9D
0DCBF3CF0D355063BE501BF4AD72162F8BF2> |-
/c <1C60D8A8C9B78E0597CED2992C40EF0933D2EB4E9751CE6D26C4230365A0
1A77D6560F9665D142AC6129BE55DB79B05CBF5497F12914BB4720E37487DE2D
C750A4E03E76022EAF5BAC6844F7A9B88979942D3D8CB528AD7DB48ACEAE040A
6F2C3348862BFCF3> |-
/e <1C60D8A8C9B78E0597CED296E4DF68F57D691EB40490BC0E3694A5AD16EF
8A4C42509F5EC82DED1ADE3F99EFB62E9AEDC7EDD5864ED4AD854BBBC30F02BB
3445BE2D343398E4E410DA907E4AF891E988EBF702755D737A3F1D7180EE892E
12328CBC80382D1CE834408AB8F4B8> |-
/g <1C60D8A8C9B78E05E95C9BB68C365D5EE5F2A501E8A3C0639ACE817E7678
3445DDF0A7B004D3C6BD5BB837E5166614ECC13D5921A09D73BB6DD34E83DE1B
2453736F6FBD255BB670255CF305C0FC1DC5320132AC7F5BCF83CE909D3E0421
D6120CA81BED29F616D0E3A97CDEF99541CA25403051723F6D5B70FC81935874
F8CFBA7353DBD9D849B38B557C2613C6068EF4194AB586736167506A03AC9149
644EDCFFAFBFA949C2A4C984690301B9460DA63FFDA91DA54D011FE98924800E
9AD57D76E45531EFFF5FEBF7636F3F5B3B3023047A10BD8CDFEBD53DBE980143
FD25CFE8D7C192824866DE36E61F0077A26CE06FA16110672EB390109A6D609B
B92B7775F6DFAEC48077AA8DCEF02AA40C90A54DF8> |-
/i <1C60D8A8C9B78E05996B3573566568C75479E22564A3834F3FF0CB347574
CC2A502F85F740F591300E69B039D730185D703A65E03A7AE8A5896360C52193
422D46DCA3858C85C7D3735F0189AE0EC4B26122B3CC5C6F5305A44DCAC7D12D
B652EFBBCAE7FA1BC7AD5F1A111355C1CBFB8911D5457DF2D53DF380C7> |-
/l <1C60D8A8C9B78E05996B3573EACCBDF587501E2E2A7DAB07F1EC7DA6B38D
A835EA10078B9E2B100F85897D223789968CA4EAC10C4518C8484F6D351A45C2
631D45E58DD2D017C08AC6FE6E789829FF> |-
/m <1C60D8A8C9B78E05D25A17E5A4A5A7AB9B248182E40ADAD3A5056924F15E
E3318FE5DD6B0DE35F3D77359CFA565CD5AF9FE6D4C00699E6A9502B038A8D31
AEFCBBCE1F0C13F3065647910063AA77618C3CE8B289E5A8461C67D6CB4AA452
4937BE04A9D613992D94DA0EEFEDCFE8DA27FF7B00D827E72C2A6683FA50AE59
FFD07DCBF91D6EB63382226508DB4BCFF556FF0656E76E4EB72BEA64F4C8968F
F0CAA1D648E1BA8E402023C43D9764C3AF0F12F90B412AE5F21C000DA5A011AE
492071E1F0B68AB7E18889> |-
/n <1C60D8A8C9B78E05996B3573566568D3BD7DBC88EC0DBB494335B1E5E2B7
545BF5C126FAD117D4185F678CBDBB86A3D5BF7A1FC96E952495142FC1403365
3DC2225A5B237F6F93C2AB3A660518B2D756CB3253126D6E9E75DC70BD3EABEF
FBE1F4DCC612E90D6C3F42A291FC34C6A59A26A0FAEA5C060CBCF99AA0FD3CFE
C907624115BA8AEF49BE1FD04968360B30D105FA904CA39A0D7F> |-
/o <1C60D8A8C9B78E0597CED2992C40EF191A4C45874D1ADBEC70B4332BD16F
C6E72E6C0814914F733B15187F2AE02ECDDAAD323B8CE54E5890D7A8B16ADA89
C162996B3F0E21E0F239A7E5BD13615A4D755DB24A> |-
/p <1C60D8A8C9B78E05E9579C8066B5A1A06B36B7FF66195215C79244992D77
B97EFBEA0A8D05A6CA95BB13E70354726AE8C05FABCDDE3F7B30CB6672B8B8A3
301542E48301FFDEAE69AFD0B49FEA49CBD0CA48EE7014446B9B4ED70741C91C
2C1D2C9254171ABA5A747575563C7A28538E954047A3BBAECB0D48226D3CC60A
10275408D602711ED86FED017A11D96C70DEF32508C2E3F127F50D> |-
/r <1C60D8A8C9B78E05996B35735C4B10F0A68C733837FFC46D15E711585D69
409D476B4E1B79D899A1EBE7F07D42FC0D7F3AF51B20EA4BE96332191606B9F9
30E6A59EE195CD4F0E430523A60FA98B36B2D8D170EE2CB19C9F94E68C957715
7726B0DF61D35FB969298349003E15248E2E23535954CBD18C62CEB28D8079F7> |-
/s <1C60D8A8C9B78E0597CED2992C40EF0E23ED992D0847EBD4D7A32405CA34
8BE21E2815FE9E3B4F6CE7DE8ED79CBFF6780D984520D4E47AFC689725072389
774DDC786F016BFD014DEFD2D215C8F3AE1E706DA78EBC69748F186A9961B36E
72753BE06922009C0C56DA25E5958E9D5F9FCB985581D87937C60A27317D1C79
3A386C4DBD7CAA3075189E1D814800E18C62454A70859C018D7795D755A68960
0B8BC77ED035A4776C85B9D6A70EB62E3E37E5723F2E6B9267> |-
/u <1C60D8A8C9B78E05996B3573566568D3BD7DBC88EC0DBB89FCFD20C3791D
F212FED324CF0777EBFD9186E58FF0242D94A5C47340E616982C4E54E74330E2
D68AC5B8663318B23E9917C91D84ED11D8A498E9037B93F4241D10D51D1297E5
7E43EDEE7D0AF019908BE05C261DC3127838D1B73624CB4D2C1E98CC74EE7207
939CD3B747887F5BCAE42C> |-
/w <1C60D8A8C9B78E0595CA656E950ED4CDC0A13C58FF0D941F94F6B78AE8A5
B0383DA8C81E40C30CEF391EACED34FF28716E01C96DF090D41AED571CFD9F74
9F7DBF260D681565180405D0F4ABECAC7964D5B5128FFF1FD66164172DD537FF
40587512A5B2D030903A094725E6391272C2EB5161B590F4028489B83561EE5E
5EEB8D8C1D8F70CDF21493C7F54B31ABE1EF87F98AB6F75FEB59D2078D8FC30B
7D4A0729D4D050C25B47CF33> |-
/.notdef <1C60D8A8C9B78E051C> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFG+CMTT10 /FFZAAA+CMTT10 findfont ct_VMDictPut
/REKTFG+CMTT10*1 
[46{/.notdef}rp /period /slash 23{/.notdef}rp /G 8{/.notdef}rp /P 16{/.notdef}rp 
/a /.notdef /c /.notdef /e /.notdef /g /.notdef 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /.notdef /u /.notdef /w 136{/.notdef}rp]
REKTFG+CMTT10 nf
REKTFG+CMTT10*1 [9.9626 0 0 -9.9626 0 0 ]msf
375.551 -55.1106 mo
(www.GaussianProcess.org/gpml)
[5.23032 5.23029 5.23032 5.23029 5.23032 5.23032 5.23029 5.23032 5.23029 5.23032 5.23032 5.23029 
5.23032 5.23032 5.23029 5.23032 5.23029 5.23032 5.23029 5.23032 5.23032 5.23029 5.23032 5.23032 
5.23029 5.23029 5.23035 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: OQOAAA+CMBX10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /OQOAAA+CMBX10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 53 /five put
dup 70 /F put
dup 86 /V put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
def
/UniqueID 5000768 def
/FontBBox {-301 -250 1164 946} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 686 697 444 453 655 676] def
/OtherBlues [-201 -194] def
/BlueScale 0.04379 def
/StdHW [47] def
/StdVW [114] def
/StemSnapH [40 47] def
/StemSnapV [114 142] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
19 dict dup begin
/hyphen <1C60D8A8C9B08A95899606B6B0605E0AF4DB2C5833AEE8D191D2DFF
D8DBE95588665141F> |-
/period <1C60D8A8C9B08A9560D4C2F3A74D92838E83B7DC14B89478B799496
0CFDC6D2144A34A20CA36052335682902BE7739DD> |-
/one <1C60D8A8C9B7FCB6AF8364FFDD07AFC90369AA09A92DA6A5FA1F27B147
3229121209969E0325A5375000F01DC5F64BC963E21B3BDF52473FC214BF8832
F90F8117074A5E7534B453F93CF3A66D18273E9726D0A516F1AEB2FB2E> |-
/two <1C60D8A8C9B7FCB6AFCECEBCE3C644D61BF80000A7C384C11F8205E5F4
EA22B1F87E7A5F44BD17A6CF109FE3AE9F709DB8358F13296E50DD9E329B12B6
2BE9C6512386E96E53EC60D92469DE71E7B48CB1868A87C7273B968AB345F370
A417DA2B11E60D38F3166D980E52D10C3DB1EB074C4E9FB27FFFD375F4B1AFB8
A82D569603EAE115AA23BDBA> |-
/five <1C60D8A8C9B7FCB6A4EC6CDC845AF08DBED09EA9C7F33182AFC703011
60666AEA164958808F9011F6FA9DB2F58BA8568ED7327DA5423B9D702A196C72
8AA107A4AB8C8EACBE3017CDF3A5211CECD1BE830110553F9F08F4EF9E634B24
219505B139C4E7F16310FDAE20ED23F1564E52FDBF0312361108AA486EDC0FD0
6827CA1BEFDBE2B56A02A9426FF43266AC2E214D839A31D77D0DB548899751FF
8FFFB115778B8280430E41E54537FDC801CD3CA21011131C53199DA913D184CD
2656A0A0911E6616EE78AC5CCCF1EF48CFA> |-
/F <1C60D8A8C9B08A94547D639F4887F5AEA78CEBE838B24BB5BCBC0A452652
13D32102F2479AF9ACB8798746F03747CB2EB844E0ABCAD1DFF4E74B2F464BF9
16257990A62F3B15D50B667C0DC1EA21A7E639D9CCAFA350EBD5763A287BCC20
F60C89CA5B58C1588650CEEB4436DF5528144BE40CFD8618628B16A4> |-
/V <1C60D8A8C9B08A941DDBC3AF1C1092A9E47F0478D55859E70E3C84DDF765
3E0D5690FA339362A26A2947B45D41FA9B757BDCF09BE7AF4D3EDE7FC5B3628C
F874AD7080E219BA342C297D25F10149DFBCD72D44D61C8AA85F43ED3F46114D
6EDCC30040D8C768996B1656F531906CCC6CC432B5C44532833B349E> |-
/a <1C60D8A8C9B08A95C60527548E754D765DB4EDA6BA0D2CC6D8A620394D95
5731400D0093175DD4FDCB6F936DAB2E93BD9C1B54BF99F619E92F88F8093B57
6575F38778E5971C238BB03705C8902A6FCFED1FF202619A2D8A4C3FD818942E
E7E0400EE37C1268C755A54355454E010823DC11303C9CDCFFF1370DF47DDE8E
0505D81ACB493683AAFD9A5B8B94F66FF9ECA66884B26F31C72D900D51753830
4DA83D95E97AC104F2FDC53254E575E01E9C7E8025E9> |-
/c <1C60D8A8C9B08A95DBED6976208F60F2310390AAF124EAA4581F4F487CED
CEE3CA14BFC3065A6FE6ABBFDC639458E8C312AA39693F6B3DAE87C446B0319C
D0923A24F435BD3539A2AFA41A509953E706070D67C20CD7BEC3EA013E9219DB
9A60F668737BED9FA131E6A23E2BFC2B1E7B0317C371B488EA74CA6E> |-
/e <1C60D8A8C9B08A95D1DE8AA71D3914AC9DDC5BFDDE55301EE17DAE184B08
E53C36FBF9A44FDF3309DBE08895DBFECCF103737D7326528346FD01CD1D9FC3
874638E8C50ADE3B494897353EB3188B512405DD1BA5DA59E8C179230F7C8D15
AFCEA2228DAC03C77D614B36A41126CE831B41CDF160A67B175BB36C52353A72
5460F4256C> |-
/i <1C60D8A8C9B08A9560D4C2F3A74D92CE39CCD31B31259F7AEFD031A58831
B571C841E0136D10024EE2DD1AD2E3360D2309F9F321AD6D54682C9AA0537A81
01D580386AD2DCA0A7052F8B37637F4FD33680FADEDC669BC7E5D9EBF1E1DD4C
25DB61CF6B56B045016A365FD6FAFA0816F527A8AB8877> |-
/n <1C60D8A8C9B08A95E5CBCB515510A1C1813129980C766D7758BDA61AAF12
7466B8915AC17ED9F37B234222FF104D43308A62C13D426D527F884E1FE1DA76
FD5028972B6C13A1F5190EEFB58E3391E64C5E1B265E3021F68EB56684CDFEB3
6628A2B9E80F598D1F34C041F11C140D8D046FF62264D944B83A9CF8B430173E
08A860642A812EDF430DDB48A42EC3FF64D7C92C> |-
/o <1C60D8A8C9B7FCB6A15C803B3B972EE31F5A721ABF9B8490D1BCABFAF507
3D6D0835AA64493F9EC5B8BAE86BFF5C8028599ED438B3807899BF98EB3DF2EE
9BBE5DC52FDB77ACA45EA052A40521B13F529CBBBB8B40F192297C658BE1CF97
9B5618AA4355B6A77C9FC09641> |-
/p <1C60D8A8C9B08A95E5CBCB515510D179DF8830C0FE0DAA36CAE496232DD9
320181C9A6995F2F56738BBF8E876E059181F7267BA24B17B3CA87D87E4B23BA
F64D83B8F1942D5A555716383D03D1E996EA761CCC3457E6DCE95A266BC026B1
61A395908CBA36068AEB0B46640F5357856F7C874758E5202A7EDF96B9238439
C4643262691DD589E117FD724FC17DA066E62232D0B4F0D60AE667A93AB94DCC
D6D6B167EE290F42F5EC6B83F3A4714E2D69E6> |-
/s <1C60D8A8C9B08A95AD02A60F56C9F20045DD480B06A02EE70DA0161AE8B6
CCADB7B811C8C4C6B3BA616AB3A0F1786DDAEA0A735FBB7FDC60DE25731C55F7
15C309995C9E50057A129D6BE1BA1874B5947C490157FFB70D4531AEC6FD31AC
BB81A0AEBBB115E29EBA5BAB5526F95B457672892E8F3BBFD2528A620F1D4FF4
51BA6D73E180279956A252BA25A642C0575706989E23F3651E112365A21699BC
D47799CBD3E17811910A1B5B186572218A0FAB55667392A6040739C53D742D3D
740FEE418C3EED6FB55A0B618AC42A> |-
/t <1C60D8A8C9B08A95B289C730516FE0D4538DFB1DC5F03AB2A5BEF8745C1E
35FCB76478399DDF840FECC5C8BC224E97E749A67D1075F82DCF09295ED81077
EA65279BE6F78FD796F07930E30317901988D07E2D4BCA052A3BE91AD76108> |-
/u <1C60D8A8C9B08A95E5CBCB515510AF055BEAA5A885DDAB81EBFFFCE14329
4E1BBFD5670B8388C50AC1CAB0C81124E37F366F454C400F382B92CCAF7F4525
99ADD355F754F39DD40E715E763BF3CAF9D37080D3EFFC3F0635D04D45C4121C
5E910B7FA9B692888395C347C99C7D24FA37D1D1FE460550A781D9E9186E41> |-
/w <1C60D8A8C9B08A940A467F623E292169F4F0F04C8A8400E0BB6640FF0671
46BC346128BEBE7F39126C58401B180A6E45B5E81791D4FAAE1CD37A970520E4
AC8027DB80B9BAA941DA82528EAE5AC7A9BBAAEFF4F8DE91665E4EEE0C6DAE4B
7634822A24DC2D1092BCC08894B082B758D237281E868A775A5ACE5551353A21
11305711BF6D803DC0E4D1A4CFA985757E2C73C8CADD2D18A8596E0A40C6B327
BD5EEE3D6D8EAB433AF1DEA7ABE943891F3FD0511DAF68ED438A20> |-
/.notdef <1C60D8A8C9B08A95899606B6B060A7> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFH+CMBX10 /OQOAAA+CMBX10 findfont ct_VMDictPut
/REKTFH+CMBX10*1 
[45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one /two 2{/.notdef}rp /five 
16{/.notdef}rp /F 15{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p 
2{/.notdef}rp /s /t /u /.notdef /w 136{/.notdef}rp]
REKTFH+CMBX10 nf
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 -22.6102 mo
(2.2Function-spaceView15)
[5.72846 3.17808 9.5541 6.2565 6.35622 6.36617 5.09091 4.4633 3.17807 5.72847 6.36617 3.81564 
4.52296 6.36618 5.56914 5.09091 9.0659 8.6675 3.17807 5.25021 324.751 5.72845 0 ]xsh
.3985 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
72 -18.8244 mo
522 -18.8244 li
@
gsave
77.9776 123.587 mo
237.017 123.587 li
237.017 -.548584 li
77.9776 -.548584 li
cp
clp
.151755 lw
1 lj
97.6805 107.375 mo
233.248 107.375 li
233.248 .488319 li
97.6805 .488319 li
cp
1 gry
@
97.6805 107.375 mo
233.248 107.375 li
0 gry
@
97.6805 .488525 mo
233.248 .488525 li
@
97.6805 107.375 mo
97.6805 .488525 li
@
233.248 107.375 mo
233.248 .488525 li
@
97.6805 107.375 mo
233.248 107.375 li
@
97.6805 107.375 mo
97.6805 .488525 li
@
97.6805 107.375 mo
97.6805 106.009 li
@
97.6805 .488525 mo
97.6805 1.82883 li
@
true set_gvm
%!PS-AdobeFont-1.0: AdobeSansMM 001.002%%CreationDate: Tue Jan 12 16:26:35 1999%%VMusage: 67223 8010622 dict begin/FontInfo 14 dict dup begin/version (001.002) readonly def/Notice (Copyright (c) 1993, 1994, 1999 Adobe Systems Incorporated.  All Rights Reserved.) readonly def/FullName (Adobe Sans MM) readonly def/FamilyName (Adobe Sans MM) readonly def/Weight (All) readonly def/isFixedPitch false def/ItalicAngle 0 def/UnderlinePosition -100 def/UnderlineThickness 50 def/BlendDesignPositions [ [0 0] [1 0] [0 1] [1 1] ] def/BlendDesignMap [[[50 0][1450 1]][[50 0][1450 1]]] def/BlendAxisTypes [/Weight /Width ] defend readonly def/FontName /AdobeSansMM def/Encoding StandardEncoding def/PaintType 0 def/FontType 1 def/DesignVector [470 820] def/NormDesignVector [0.29999 0.54999 ] def/WeightVector [0.31502 0.13499 0.38499 0.16499 ] def/$Blend {0.13 mul exch 0.38 mul add exch 0.16 mul add add } bind def/FontMatrix [0.001 0 0 0.001 0 0]  def/UniqueID 44278 def/XUID [1 44278 20645 8847 25231 10813] def/FontBBox{-187.92 -261.16 1151.21 862.04 }readonly def/Blend 3 dict dup begin/FontBBox{{-55 -112 -286 -275 }{-261 -261 -261 -262 }{424 1156 1389 1981 }{811 915 839 970 }}def/Private 14 dict defend def/shareddict where{ pop currentshared { setshared } true setshared shareddict }{ {} userdict } ifelse dup/makeblendedfont where {/makeblendedfont get dup type /operatortype eq {pop false} { 0 get dup type /integertype ne{pop false} {11 lt} ifelse} ifelse } {true}ifelse{/makeblendedfont {11 pop2 copy length exch /WeightVector get length eq{ dup 0 exch {add} forall 1 sub abs .001 gt }{ true } ifelse{ /makeblendedfont cvx errordict /rangecheck get exec } ifexch dup dup maxlength dict begin {false {/FID /UniqueID /XUID } { 3 index eq or } forall { pop pop } { def } ifelse} forall/XUID 2 copy known{get dup length 2 index length sub dup 0 gt{exch dup length array copyexch 2 index{65536 mul cvi 3 copy put pop 1 add}forall pop/XUID exch def}{pop pop}ifelse}{pop pop}ifelse{ /Private /FontInfo } {dup load dup maxlength dict begin {false { /UniqueID /XUID } { 3 index eq or } forall{ pop pop }{ def } ifelse } forall currentdict end def} foralldup /WeightVector exch defdup /$Blend exch [exch false exchdup length 1 sub -1 1 {1 index dup length 3 -1 roll sub getdup 0 eq {pop 1 index {/exch load 3 1 roll} if/pop load 3 1 roll} {dup 1 eq {pop}{2 index {/exch load 4 1 roll} if3 1 roll /mul load 3 1 roll } ifelse1 index {/add load 3 1 roll} ifexch pop true exch} ifelse} forpop { /add load } if] cvx def{2 copy length exch length ne {/makeblendedfont cvx errordict /typecheck get exec}if0 0 1 3 index length 1 sub {dup 4 index exch get exch 3 index exch get mul add} forexch pop exch pop}{{dup type dup dup /arraytype eq exch /packedarraytype eq or {  pop 1 index /ForceBold eq {  5 index 0 0 1 3 index length 1 sub {  dup 4 index exch get {2 index exch get add } {pop} ifelse  } for exch pop exch pop  2 index /ForceBoldThreshold get gt 3 copy} {{length 1 index length ne { pop false } {true exch { type dup /integertype eq exch /realtype eq exch or and } forall} ifelse }2 copy 8 index exch exec {pop 5 index 5 index exec}{exch dup length array 1 index xcheck { cvx } ifdup length 1 sub 0 exch 1 exch {dup 3 index exch get dup type dup /arraytype eq exch /packedarraytype eq or {dup 10 index 6 index exec {9 index exch 9 index exec} if } if 2 index 3 1 roll put} for exch pop exch pop} ifelse 3 copy1 index dup /StemSnapH eq exch /StemSnapV eq or {dup length 1 sub {dup 0 le { exit } ifdup dup 1 sub 3 index exch get exch 3 index exch get 2 copy eq {pop 2 index 2 index 0 put 0 } if le {1 sub}{dup dup 1 sub 3 index exch get exch 3 index exch get3 index exch 3 index 1 sub exch put3 copy put pop2 copy exch length 1 sub lt {1 add} if} ifelse} loop popdup 0 get 0 le {dup 0 exch {0 gt { exit } if 1 add} foralldup 2 index length exch sub getinterval} if } if } ifelse put }{/dicttype eq {6 copy 3 1 roll get exch 2 index exec}{/makeblendedfont cvx errordict /typecheck get exec} ifelse} ifelse pop pop } forall pop pop pop pop }currentdict Blend 2 index execcurrentdict end} bind put/$fbf {FontDirectory counttomark 3 add -1 roll known {cleartomark pop findfont}{] exch findfont exch makeblendedfontdup /Encoding currentfont /Encoding get put definefont} ifelse currentfont /ScaleMatrix get makefont setfont} bind put } { pop pop } ifelse exec/NormalizeDesignVector { exch 50 sub 1400 div exch 50 sub 1400 div} bind def/ConvertDesignVector { 1 index 1 2 index sub mul 3 1 roll  1 2 index sub 1 index mul 3 1 roll  1 index 1 index mul 3 1 roll  pop pop 0 1 1 3 {index add} for 1 exch sub 4 1 roll} bind def/$mmff_origfindfont where {  pop save { restore } { pop pop }} { {} { def } } ifelse/setshared where { pop true } { false } ifelsecurrentdict dup systemdict ne {end} if0 {currentdict systemdict eq { 1 add end} {exit} ifelse } loop/findfont where pop exch {systemdict begin} repeatexch dup systemdict eq {pop}{begin}ifelsedup systemdict eq {pop { currentshared {{}} { true setshared { false setshared } } ifelse shareddict} {{} userdict } ifelse begin} { begin { currentdict scheck } { false } ifelse {currentshared {{}} { true setshared { false setshared } } ifelse} { {} } ifelse } ifelse/$mmff_origfindfont /findfont load 3 index exec/findfont {dup FontDirectory exch known{ dup FontDirectory exch get /FontType get 3 ne}{ dup SharedFontDirectory exch known{ dup SharedFontDirectory exch get /FontType get 3 ne}{ false} ifelse} ifelse{$mmff_origfindfont} { dup dup length string cvs (_) search {cvn dup dup FontDirectory exch known exch SharedFontDirectory exch known or {true} {dup length 7 add string dup 0 (%font%) putintervaldup 2 index 6 exch dup length string cvs putinterval{ status } stopped { pop false } if {pop pop pop pop true} {false} ifelse} ifelse {$mmff_origfindfont begin pop[ exch { (_) search  { { cvr } stopped { pop pop } {exch pop exch } ifelse} { pop exit } ifelse } loop false /FontInfo where {pop FontInfo /BlendAxisTypes 2 copy known {get length counttomark 2 sub eq exch pop} { pop pop } ifelse } if {NormalizeDesignVectorConvertDesignVector] currentdict exch makeblendedfont2 copy exch /FontName exch putdefinefont} { cleartomark $mmff_origfindfont } ifelse end} { pop pop pop $mmff_origfindfont } ifelse} { pop $mmff_origfindfont } ifelse } ifelse} bind 3 index exec/SharedFontDirectory dup where { pop pop } { 0 dict 3 index exec } ifelseend exec pop execcurrentdict endcurrentfile eexec89581e4c0541bd49d94fccd5852349be2502794832333296a6bea43ef3078f59f08629dd9151c6310db9d873a66d7239eca8788e1db226a855ac868e7ed4b6648e95ec3319328f672c08364fa3fe5b1c3eb9122b624e8ac336d8555008268198509ab0bb98490919abf787944e71f26ff0026aea07f413e49454927c91354b
500ec0a0f3205dd6dad2d21ef387557c38927facf19639f130b94f5ccff2e42d964b02339a07ab13257496b9dfaab8475a181e740a7cdd9de33e634ba390f1fc83c8278adf76a6590b09e0b72edb89f86904b09e6ca6902410143c60da83734db006528b23c4499c91897d2435fbe6233289cafec9bc9c088b5e7118b6fc9a
a737fac14d110f6d8ce25b92f7a8324a4b220fcfbfeec940289da88d3297c967f62f86baaaf9f2b5822ac4aa9db9830966e14ac9f3f5c2c8d5499aaab6ae01e8d23e62c210fd3cf2bdecb2cf8f920c5fc695462949a66291981f4deb847d9bd23a95348411b26cb555bcddb3d7aabb51a7ddbd8053cfbb811e7f90012c36ae
ea22b436d1cf6778867d8b46568be3a3c8b465700467a2a4071bfb7c1f53e17eb1be6d609ea8f88181cb3b78f9ccc142ab848c2fbbd663c7774d510c5901c53192f8fd80ca92bd7506d29d4a40ea845abbe3cecc0f775817989f4d9d4c5b0e03131f2cafb291429c0c740530bff3896abdb0171fa7984c50e2ac20d46c17db
6f0d50e2d27c3ed148457f38beb4e27755f9d0b0ffed35b5ba4b9302b4c49d5638869efdc21205197486be19b6e59942cdb9dcb6a0c4758d6d19da6ed3d12ac660b13c863b92ddc3e93c8df8458fe620231276a92b0ff2853b712ccd9aa1b3ad87e573dd75c9fa7b1ef3e9942e98279e751b8d84f46915572d04970b8e4677
bfeda14b61d58ec304863fa7b44c2662ecb8379502c1a1d0c26d9e643244b76fc1f0c350e37e0aa04be9d18a22b372b407dcb0ecf6587c901fa633bc8a37e1331cfa1eaeac7ddcb40e4443ad8c268ce2c4b1793e6c002f2de178c538d6bd3ed5c8587ffed24abe6fe35f847dd20f15070967f7b131f642ce1b271c15ad784b
340ca3981d7811ed42bb03dd65ee6cbf0061c80fed735a7ac6a3e5946bd38cc33c3a3c9df6189b0a68542e06472bd4fa9228352449c7f4a3b19952117ae93e0fdce45809ffd1cb2a229f8718d1085746f4043e1a373bf57a5742e0343d2b757be083fda92438038728ff0e96a5f6151885fc4e1fb3d3129c2f48dbf9be88f7
6fc5f1c6bdca1755c62ddc3f2aab8e72ea502bf1e9f85fce1e73bcbed3f86c245682511b76439ed4f1dacae517a9b933b7a4ec11a9d96ae601f9cf3d761c56405b71245347be27b2747cfa285abbd79e2600c563863fd90496cbe5572cec57274ecde188d8411c7d1b1775b64f17fe96646f372f3842b720f52c48f0e5b4e7
9a2248454599aac182724586fee66a0448dc4b5eb0e7c9542bf327cd2d65a1545137ef6cd6bf3af92128bb0f351fe55c48a43c1e0ca2af460a4c82444189e1e73b293f471cb9591f3a8429d71e924143bc1b86453115872514ad21e1111122479dac59e5fe4a3bc320f6c9dbdd83853fffdbcc1ea0177ab247ead6039fe2c6
eaff095745c6a06f6e8b5eb6f9cd3e02570d32997f059101805c1dcd4c682071d590dd009abfac3525efdc97c2f47ce05d81930b6997ace043205c8d26ed4e251d6b084f55a2e50525c557688a864b3a5eba761395ce61372993069eb52204a85ade2cd0fad193f3c57ea366fd1437d844749aee83b708744f0ae12bca81ef
f99afcbb517ea4b3a1dee6e08f80e856919b150e17423897c07ef318bf031c8ca1b3ce17db42945dd2a83871776fdc5b03e349d3ad21840d448eca92234907a7fcabaa0d4af6ac8ce533f1fa905fd56385aa0532a54a29f6b5ff61bd7c6d2cca399df3b8c74adf99400529bab22719677414f2892641a8aed4f0d9bae69eda
a857da5e7bd8aa574913803329afd33b396368986627e4eb3e28aa4b132f80d69b1a9bcbb21d4a2461a8054c075d03fe815fecab97f9ab73f99a8459e9d6365e874816dadcb7b8a292e975c13fd3d3f49f6f3a776b6f274deb850a0edc2edcd04e582ecc33faa33e140b3de30861f3ece5d70879c91906a3500d5fd25db9f6
8ff8355164c434fae3aefacda08c2feb9fe5bbeee531d0b609895eb8069a59b25b3373109e38ed65b7c63a9a9886a145878bfbcdd60436235b219332f58afbe9ba8442756b78792723e4ca47e19b04643ff0ab357d0e812a479a4bf58d15dd9e3e41093cd3b63b7a8ca23b7eaf9d0d6ffde733036c55bcac0d8a75882eb622
b77660b5663d8faf7d7d157600192c99a6c6b25145646d4f5c78115961601f00b1e229b1d0cae45578b18325d4dce54759a96f4bd32f10e60a22f38e467c903581e703c417f4085a06ad58f68e299862ae6cbb7363f70a5bdf10f49d35b132916d02bf0c97615bce4ebf84ff3f87262980270a794ef8b81a6465f4aee746b6
053400d2efff949208a08626b84c59bd0285e2cdf095cf7cb9704a1f79eb4cd0bff3d1f3b66b3ae2997144aed4805dfc8894b8f067c00512a02f5ee9ccb57f6b4d88a4808f4f84799882d718bb096cf952104dba7c646de4db1dbc8512bb50e8bd3bd5cd0747352eab1af18d381814f991f8d8f829fa406a774acb84d4fb6b
02d85382143f2536ebdbe6b4ea2d1182f8d4a834965bc766b1188b45d063e94894ab8198b9a824299697b64ce2889d74b415ca8ff2737839bad9324d636fab8ab4d55ce01f8fa83cf9b21bf096c6b9de9e1652cff5ddabe788b3b0ed02f8985b1c6e24906d2c24bc698bdbc94418d964b2b029050c83583bfdabcdbe0b9dc8
d7840a32481524af62aa29f963091645c05040f6b83c4a6783690e94d43b348077139cf18c123c280313fccd9302078128e9ab8599fdab983965462875c7a69828dfe2f034e86374248314a08a60f64cb11fbda5baed5199988a8856a2e0feac1c33191909926de4e4fb397bdfdce101c80aaff864edae791a429181999662
f23b62343163bd2461d974dc68d9c0cce71dcd903e9aa0e8d599216336d2b0b73b2d547b5eaf4ebea0b704c4f2bbb5053a8f7849bacf11f85869b2b720af4d742957ce44699387dbc13c0b75e419d08bbef0c5a440f16820b4d911c30993de61b40eccfdb82ac436e95490915e15b7a313c8e7b001007604f76a8c9546a136
8066f1f0d5f3d24543bcd6fd6dc201eb476bad973f3fd360a5c6e75aa89709756aa8b5dcadfc6d380944c8ea2875d3ca12cfdb378052c02caeb930e9759d58876533f9738309503715ced1e1f88e38c8415321d2fd0168eeb55e743faa61d722e8bfc9cffbe037b384a5f1024956f0357603d4c84316a1b948ae247d5eb409
ebc3ffe7ea8a02367060be1082f637f990ddf1a9920ef2ac7760303452dfea0a7111aa41b7639ac90852ac2193ac1ca8cd8777236472b205a1eb2c2671786d111ff527c4e946942f887b0a4cf1c6305fb50849da803d8d3a190dc175b6789bee9f4607e9d70a91160418d1b67b2952d4164287582bb9cc46a0a27a9b31345f
740388d1329982d05fd168c05a58295daa56ffa575451defdc91271d10cc318b79f7b9e6d3b4e72d0e90d84901aa672af7587b69c5f50799e265d87e6bbef0425a39dea32d6a8f3b485c4e8ba1b65c3a042d573f786447d1dca9f4eba45204a60a1ee99f177cfa1c22d9a4d5042eaeb4a2d6e310f8ee02098b432c3ad9334a
3b2bd4f8d0441a6e2ab7b297df5bf90640950c72c48e475adbdb2d13a7fca4cc2802a0803c436a0ca3b062b986ea012fc613022d3b2357ebb48201897a62210bdb4a4bf4cfdc2b30a3acc23815aaf5b4b0e8772efd0f5b244b306a47c0f5a60ff02ea538f9e63c4a9356bf6e52a7291f6e6121a81cf095bc270e6bcab674b8
684aa0c7cdde4c7e361088943847ffd12d4b8ee59dfd312ea8ea5ab9e502e51113cc4e90763f3b986f5e7040a9de8b063f24f365edbee47f3d2ad006139891bdd055f9461428f07136f73d208108edb5c2f826927d9614a051680b99f6ad51c251dc4a2bee307b91c69c3e6c5bb2bddfe4880e8a7cd092721a25458983ad01
08bea47a5a08281fb3e695c848d6c9cc697a2b39cb6d2236e5c8b8a9ddbc6cca444e63d6625208f2797ee4693dd2bd892765697f7816fa4a53c99fabb855db1e2a89becd0dede27b2e349bc5507ed725da4d7eea376f634d0d23c6f4b5638578ce05317ddc631308a9f3e86149f70d768ff319299d112e8202e106d2b56189
a6ea3380f85e4f0f90ecea17f062be3f44b9e17093aa1b0285a50274c62c75ffa0b592b612730ff93b8a0d8da090637faaa554106a994a6d38ff0224cd9ffedee1b34bd93b6925d2f8c4c92a234bc804958c6069fef7f6c25430b78705c50ffaba5e684e9663aa61dbbbfecf318177570419dcf4b4efffcef6bf757049aa7b
8524cdc15db95e7dbe2457cbb1cb161daccb7afd4f05df953ba9325740bdae8c95271f5abf0d001f0acbb5d84ae594ecb2050e522b0658f39bb551a9e9aa0401c6e0f109e03b27a20d1af45d7b3eaf08962f16ad6380ad5c6dd65ec78832a3b30417a88e370885345c4b21af8f536a42777164335641264a4efa933e648e0c
7ae900d76b4c0149c134b0d9082bb700a24c60e32a5a51e6616bf9e9abda5e209187951ea5eb2b5afbc256f8f91ad22e2f9d7ca8679999a4834ae1445b3a0a94f708a0731eca9e459f01d3cd324f1f691a28d21c3ffa9091a9dcaaa2f1ab92575fea9b5cae240560ced408aaa501f2f8e7f34a7acd5820138d633a3b1410e2
152139b69000d57abbbc98d654dbba5abd28c534d63f193dfb77e65d2ab541d686572c8990bc703baa7e137723102a625c64399f53e6d8bf356bc20846d75c5cb89ddcebd3dc8b6cab45612cc46e07875e4d135f37f1ebd4b6e55c7fa55f5506e19ec436e044615dcfc7ec4db3f48809db1c7394db587d0d054b60ae0843d2
1e31944f9fafc1ae181087f07f7ed05217c67a18cc18862ded246977b2272a692e95016f8ed8d183b0cfab05fc99623ecd6534982992cdfbb3744fbe8041d1c229c6229b85f87310351ff9234a05396fb48b978df4fbc76b09f06e0fb43bdbb88d68d272051edcbb8256c02cd0e184b4c054932df39864bba8a623a29936f1
b58a3727c99c2435674785a6f1fbab08eb774bdc2df086005c4900cc064c5b6430edc0a58c232fb3cb821c2e00f19274d7d87b4b694df8baaab83c7bd5fa3cfe9a4721d360f2fccf06710f13386b563d500eaaab2ea312b692a1137ac702f538eb0b700341861e65d6d2e97acd0282737e0637538dd8c2bd750718a26ce0ae
7631b5e4b006e17104f491ab5716a6d63d246f454072399461c7d8cd51af3d0cfd1470aeb4732c928d8fa17d0f8734c4b77c736cf0e45fa816288a188b77af203d7810f079ab3a2702d1f6805cd558b181e3b86fc3f66f2a49c3fa752d8fec8f84a9af589308c21bc496c377b0d24e2cc3a0931689731bc9c8fdb0afaf717f
d166b30f73557649063b3e93655d21e1dbe66ffef3277c1daad42038328894e437b6510a837b8116fcc0dc38daba9c278b7c8bf3673674d1d4794a0495cb2cf6f643aabee72967be5b202b3e30bd8a173dad1a3e29c9891ffce1e27ac94750c6bf00af3a14b157050a0b0bb9f7f5ea589d608c2c9f45c3901ce5716359a816
cefe8c4a314354cd7a5e44e4c38c306de7b7211985d09a3bbce88f1c6ed7377c3274c464709b45d584c093b653bc19ce780846edc808ded0a21896df9e36464e3f6cc25fa70652f3c070439bd878c88460f444bad4339414ddfad673ad4eace9043855d42c7094694adce084c13d45f59d22296d9290b436fc95d8540b8733
ac5483e72c8c74f77c6d617246e2c5cb96314025ff34ed1353a46dc3beedd1598253fd80fa650eea39978f1d749606b30fef62558837965042cef9cd1d24728639f48914ba3cb40e87df79655f00ff194ea5da56ee8e9737c75282d7a1fedc6f3fde9dd276b2bb6d48eaf2da109cb859de50cbdf250e554f004b2cd99c2af2
ad0cae5c164b483f93831f1dafc452b971cf59da9fce3ff9f3eef6d1ce786fc16bdcdae2d76454f3c3c0794f21ad1af659291a239c1904789a377a5368a2766f0d522e6cefb74165a385960d6ee536eeedde59610fe11f5ae6caaa4f70cad13cf86a31612ca29be05639b7e1c26aa6b66521eb24cb772482920515bbcc594b
3357cd0ab2f41e0a3417df79f2a1428fb6a79b09cc7be600bb9dfcb57c5f991ee73e3af2abd644c86173d408e9e0e76f971a8af16473f203d31fe61d0835c9413ec544bd31f8a42e90bcc4e8f683b412575a7b6629673d76e7ad1ea6c710376176ad76f2d493ec4d2a9e8990416daf84effc06dfac19794637ed00e499a1b9
7687787e00aa35875f30ac881dcedbf488c303480a54f07119317531402361ad0c371a50f7c7db7a77e4fc0e664fa67b32b24662a432a2ceef370275a6cbec11f1555b362556e34ffef4c16975dddfc87433c5116182434ec4bbf1b448d182c8da6ca3cf8387e905b6bd9028759189c71eca40a5d375151ab9b78b71de6d96
21d7ec2f124b90a73a7e8fe4fbbd01fcf201d6840261f7a8aa22b22c57170f0ae1fb7183b8f626eedddae5d67cc551af82b2fa8506e942a652b54b54b075acf993185f08a5373c30b5e65ec2388038225ee6eddc4e84f021fe0d7a3d493ca51fab850dede41ebc7bed6082bd788a8426bcbf87ad7acd8cafdded92a4d9eaa1
82ddc17f20e3f5954805034c886967715ce0ee129f46b445656e284c821c5b793200b1fcd0280430c96a7bc136df36601975107bc3b34c8da36e59f2a0870498bcaea1546853790c4169a46dbcf8028d578a4ac04492430af1d53ce0f832fe1fc795c975ca91ca91048469bc4ccbda72dabdae805fb233ba6862654f019357
53b6ab7978eef6da27ec8a046f054e1f979a95ce14d6edee112e0b243299c47d43eeaad26ad4f7873fc414b7f2355ef3f59290230cb87205aa2a02faa80ab42812500b7a8f40f1f5b6b8f1a1faf494f360d76aefdbe92e62e12a99907080007227cbfcec9539faf7bf6364e5bcf3587198720347b478d647070fc79d8f320b
fab25b9e576c9dedc96e530289a3086b6ded4a0e75bdbdbaac95fb2de39170afa44bbfbde4316761f450324ac2d57200c983c92a1222965e2fa5a1af06e5aedbb46704217e7486921a5eef541626e5c143c32878026234d2a7f037fcfd1e6ea771b592c7f5af03297ddb15a7846f2f975e6f33e6a9cd3780b5f187fe8f4fa9
90f98cd6b18b81ee32894cbe63fe4fe65b0ff8f89b882d3e276c2d5dd93ddb6e2ee8d20b922da54dd82a49e953bdaf5c61fa8d11ff7c286d0418cda04678854109922685f6f451a1466edf094182cccd91e02d81ef5c2289e11499b5a571ab99a312c1bb5a05002d8d3f7dd02100e5072cb748516a6559e0d53c81386c119c
b44204bb3704f2c352c6f2f2ed7138656ac85a335351974576a594759cd99f61efc6dcc93b95a4d6bdb195a799c7dff8b4c1f501fd7c90d6910de2749919c8c8d158d36c9537343d072418951e0d1c13d02f8fb32cebd3178b93eb3e12a3ab7f0087cc46cc1c13b4d45b961cc02c2151d65c3274feaae9bfdae4150ba90bde
8db5f23f24158c2738e7a6b4d7793659757f95c194f43ca7fcc966473e793c63c6f4d1efef32fc01d1bf4c8318d75b2a73cbdeb4ed9c048cf8f98270ab9dcc411a60a74135695f52e078406bdde626f2ca66cf52ca3a201d96a53cf1fb7a469aeaebb4859729c36e63e861b914fc6fdeb414cc568ea6619326a7f032677afd
6bad58044d2b6cd48b538e325ee495a520a1b83d37d27acbe11aa7dc7551bda80f6d950676ef26bb9a83ea96025a6d06d28fccdc9845fbb9a244a0231d611c99073544eb6c09a17bf574899650ddadba375d769f9cf3e82b18222e452f024ae50fdd5098f412919a26a3f656b45b56f1d86dbb2f34ebb2acd2c809bf51e00f
7e7309815568df19f204eed09b48d1cd14a93cf385f0c84f80fb99e57d9d70669a9a79933e05333d7232786696b28c7ab131964d9f023736b54b254789662238fbde0b25c1b44fcb073f043e320bdd431f54ccba9eb2a058b6a330a4f8b34385284256e726d5306afe34938081b15ea32563eceab3d313e7a34fefa562a294
49a118370df51021dcf3235d564bffea4dbd71526cdcaced320cc256114f7dd1b15b09c17883d0211ce622ec8165b723f818fa83dc434f4a1ec99d07915ea0190cb4141676f5c27179e372d016041ac341838115ebfa66a04250df68092668eacc2bb4705db2346e7588b942d05668f54b284d328965c0dc480ce979996a19
a07d6de8faaa01753443df60f04a5c26318b04ce4d398b55651bb227de62e4d84432eadcb93049fe826d55bcf5dd3d41a04d6c13c208a830635dcba28cd7e943979be5796334882627f9eda6acc08d3ec3029fb91e2fcc89d575341e68a60549166027a2167dff5dce7b8df50a3d6f2f61bb69e778c62b86f8df4ca173dccd
cd465602f5ac0047e74d3c4c25756512775d4f7e2c4aabf03f514a7cabed39d485ff20d1139d4ff3dcdc88457935419f100213f4e40e842695ce800ac280012aa5e4e6634198314bf576aeb620ca958c4d285a4244bc35437f96adfbc108a564a872922eafd5bb1a13fec965c3779b2e17bdebeac608d2931320efa8c229db
e5cec33c53939a8049140e5ad6d9cc61d6e1c62cdab87fc02ba64ee1082d9718ce5009d60b2909d23ca7793f8cecb313426c16bc085a39f14152ae661b4332a7f2b63c8522590d1d30c8d1862e28e56f26766abc2e3517835369c8234f45bc561ab3a1f9e4cef1676fcaf2b4b8892ad6791d2270c25ac742e876d43fad79fc
5078a3370e72affc59761ae0766ccb7dec7df8d9af9b967018bdefefc1426adaca398203916a56fb61661aa96a918e6745de07b4bf8ab895c8ad4862e9afee06012f74d763bfceb4a1960863bdc69273e87c6e03120b71e9b364e7e1215dc4a02d159456a78f61a5425fc91b8f950cf9d17f0aa5a8cb79bc4772d2b1f9ae0d
1ad75cea7ef2815c219ed483abf1a189cfb16fef75ecebcd0031b12b526d8666b7214376a586d2a4fc45dffac65cdaac3c2c8befd9d5a0f9b830b0b87eaac543733d0efad93b462d7d472236d12c6c738fcb83fedfc05ebbc6d78d8ae3dc959daaed1acbafe5da440f8f4df03f4bbd696d8fa15063bcfb92fd8bbb0a60cb75
b5ebca5f44252b5c8af0ee7bb6aec7c279da080ba57b990e1bb2a9b027e19d50170750552bac62c0be094bee4b61560d88e12aa417331e4ad7b7fa01f0bf75c7aa6820fb31a0d8dfc9370c50542551520f42e8774af4073e6723cd93430c9db215d5990a2e0882ef078e1da204b0dc81966ba83689e9398115a26a5da486c2
766abfe9626e0438b892130479b43ed43a83ed3bee46abbad6ee737a810763cc9aec3ffae843723641ff986129fc6942a1286b3bd59ed0f9a24fc4e8911a4a7008f0aaaae825dbdcecf667576a6041cdb8c91f0f874f38ba2148b76a56ebeb41141b5fad9fae7a5b59530249397c274faae688d9cb7ef4b48c65ad12e54d0a
236459b55b0365b51e70da3ed5cb3894b62f1248f258842d02e3f66016c7035e280603415469ed713d848a57ace7e7ec02f6de685f8160f132e8a98d339b730a04b1bcefb27471a369bec18e2728f41c985bbc0d80a384de846b0774f5de52f77a416e9a78bfef90c974bcc28e0433592837feace974e42e1b595876799b93
18660a7d8e16606ddff42582f2107fb4c0587dac3a4a3fc57e0c9c41f6432ad54b2103b9b3891fe45dcb3e089e880e1eefe2218a8688a4ff913d3f49ffcfa08cc4aad6e9589ef94a975f8a7db2b53ae3a5f4ee0105cef3f889c7462ddc6723f1fcfdb3e47ad993e5663d3b4c98814c49b5ed6da37f3be391d591a4738528a8
daf476a00a90199719f182b9978937384579448bab5e8f6dae7d07a9f2cce1a0104a70cc2cc7edd8de936e063a86dcc667bbff3c38a896b991c1c19053345d239290925edce10321cfa3b456e77be5f4bbb7cdc062e17d9bb59b26cdc3a11fc7b556c5822207e80c472f22f5d240e068de6c9dc29d873d6248fd2fac1603a5
8a3c10446765b1024ca79b7efabc596a2675c1ff1b893529deaa6e489a1848f965510090dbb6b52bc9fbfdedc6531bca5d506f93bb710eb2d6c429a7d4ed66fa4574b3de21eabd42e80f298d66a13d951ee81bae2fcd6310c8c6b7b5b25c682d16bbad4d11ae874aa25ea2e31eae412f4f5629d5d1ef3acf6014474d60320f
a0f7bd55ec26202ae43890b5ac51ab36e30a01e39aee33948078ac15579406c0bd778a143da77e7abe6665172689a3d7ac97242a456a086fb36940412ecfb7970aafa046d9996310a10e61288311f4eea66e9efd3cbede28e5380d08628cfb3f7f10306767e286e36f8f2091491096e4fced87ea7387c6cd4d8458d6554a93
441324afbbcc2d0a8cdbfe4b671b7131a6f79690b74e56073f6ad21bae2d0621a980a012671590be466941f21f95ecf69bfe3d332788d7168c0e3dbb1d027811a3c76088e2dec97c615a81b19eeb3ffaa3e4e1ac0a8245266377713f20d988bd0c9fa8bcdcc3d498b69f61562bf84f1382bb018256afeedd67029f36158345
d284ef96c4f73807b202f3cd19e37d6ffebc89869c1677396e9f24b1130de879f745de8ced12739af242472c11d6e3c39a564955aa41b5868108e2980efe21078ee22a09c05a6fddbd103da920d1a1f5456164a334ec61c4859f02d3298735fd4b289ab8cf77e3f9f14e686ef735f23cdb0dd546c04390316a63977e4abaa4
901a31f5892679725fa671fea590b00d73cde905ff8fd5681fb0b203b2b0ce98e672daae55bb2c492a53418a4a2d377700ebd7d4350b04558def15e98735e2d841dc042395406e599e70fa9f86a7b12b399b55960377d5b9a81523242b95cb00b3e204cf2f99b69e01ed2a371b913b8752c4d1b0033c7cff035d8ac558746a
6f0c0d960075b6018b9d7ef2de35504389ccad901d8edc6cd0faf6cb12a064782f55e907d237ab1823103267672fa0916f63ca710a54feb59e53ca24a3aba87664f55eefae19581ac8d6bd5905d74fc015eba6e3bfa91113c54e2fbd19d95033372375ad6d546aa3f0c551e159a97915af1a97309f8258caff270457d24ec8
d3c178b8cd8ba1dfdfc053aeeeef4680601ef952c126d2ffc628580bc1a7e1f7bbd361bff612f5e4c9cc781e64f7cad35f23912234da3b43547b3de3ff0e034dc3d5353363c93262033ad251d77f39f3fc694de5ff771d014f6fe4087121ac14db3de5f6983253d0c102544f13bc39b6ebf04e2061ecd95e4741db234b2c3e
d358dba51227ea03313f2f747e162cb59186c0f8999fe63807f0d118b033c0362ec040c0ff85729004fafb364034259db3b30d92801778e95cc2e4242f18bbd98494a6a768ce62d1fc77b227a06bdc84abc8f799b38d88aa1aaf7361ac95d47a0c6efae69ce63a50e63fedb24200f6de585471574b4d0c422ea51cacf9595c
af39305ca69972e2a95756b249ad29281a26209b6cc3e9b9405bbc800ee62a9abb113ae9dc92776f83aff6d281c690bc6ce70f2a3a1e688b855704bdac6bfc8590319814f41627c99a0381c615fcb65fbae5a9242b9e87bedee2b8c718de04c5fded2c513697a513033fcba08cc9f7aac9f462f04139d6f1a9c77153787c36
202ff64653f3c6faf87dc516de0e1280b3746877771813bb3b7cd3762a83d7591506817b7e519f79f91ac41932a970b05793cb75b44341dbb1df97ba70fd2b460b990e9f628cbac644a87d0fd1c8478beea8a5c6be04b870d305b8f4147c3d056aa1472f0e49b7238aad61fc1615462203f588dbae694fde44f0d0f9dce465
e3cf39a570eb733e5e04155ba49453a3bf9d838d5c0ad59f2e28e6d5be00d20ecafd99da5eb1db3b7ee414019f1f84264f7fe18a79524c03e6a5cd6b240e211da6dcd8d7f2ff0bcee905bf873491e6b52c46ee6de2673e6660508bacf7bd18066f7624cac520683fd4015ceb70012eb26c875258d2d4ae907a7b7efcb938a6
3e4dab007c03d407dbf4e83f1423036feea849c1d94145d1e8fd50b15d47e1b3c2ad976d023d5f880ac074161081458482b0945241080e1e9f41fed063e54a3510f0ab10249cb47bee5106d834c3ed2d9acbeeaa9585d2209258f6082e7db9ab15262fdfe5b02b5fdd3b485d93bc5e1e0570213e2fca2eea7b46d619741664
22eafa59e2735ae16b5a9d7ce92781f2a944ad0fc5e5387c42310eb0871401cca0812f50dda0f398f57e43b7f17f13af0366d38558ba0fd881080447efd382d1dda6a94cccc5b13aea0ebcf391be9c9451e1957a2258fd3677fb7da6d832d9cf216d065be0e413927155a1fdb7d89ffcdc30f271b1aa92c5f10235cebab8dc
b87221b911bec5ac0d0a7cfd0799bfdc4fe871aa0b1299817fd949fff083d58023a2e8a0494fdbd9ea4ed3cddc490362f468aeba6a565942da8f89155529adb50bf031d12e5aff9856861cb2a33c6c8e5d641350a28f57413722e8496425e119a023c3ea9022a9bc64ef1d9c56bb3b946666b54526fbd30c683d70db77ffc0
f9d10dd57c1d38b3b97f6629c7b23bec100deb51521338d195a9d5ea79df4dc167eb0ac52669782346bea5540fc9d7616061e8610b1faaef203d092601afb44f1c65166230551ba6b515f06d7db854afae71688ba496416bf4c606e5b09c2dfb13413552d8710d6bc5902c53c12a92db24251fcacc3388bb55d98a775e0853
0238942285b37897a139fbab046ed03cf3b81fd7a4a6ef8b363b4270aae9f852698a3ca5dc87f0738a24991bb2cbbccfa4950e7ca4f5f45e4b8e50f99c2ece1b05804c3320a6efaf9f56fc326a5505359f71e5c162c5bdd1ca2011eb9643fc67224f3d5b042bdc9d74cf62b61e9f72b6249fa6c5aa928e37eb374d34190bbb
f7e926264715acc6bb6a5c97d627f6db6625389de1bf16eba32366fcd7bf955d6ba154609c0e18d19ec61e4123d69a90371ce23d6b02348ba424af0f398f55da545c9183f8b2a342cd61fe6fa0cc611089a67518a2d9caaba03d1b65a1669a86ae9db9a47b9114836dad4b6fa473756ef6e91f0dfcae4da8a36d04821ed667
fdaa35b59583bdf1d661bf3349a667df66b329d33ce636f467207a1aacb112181fac06e793c38ab4d96a3c3e6066060f4c8924fee82497acc9e5fe5c0daaf13a4013714f6a7162f896f4a1355eb7f5089936730383a601e4e25ce8d9e330455ff4403eba22b779578a5dcb57c2f01aa479852e1a80328cab9f1229e17b0c25
d419d64f6e5bf1ca1bf0346c4df4aa14adf66d5b8c6ebe37e9d777bab88474ffa7249e252e256b0add706e0163ba30d8b91a78133982c4272bd3746f9b4a0f7655067b0181e2cec01c0a809e238c1a4f9a555dea89ff83c523a8244f237df1a48aac0998cc7f97dbd7ff730e6f8d84143c553a1d803d77af0c12e5b7eeeb06
a398ba8f0a49495e83cae53b3363da62e91c0a93161ca60b867c64601c2eb9db8941c6d3d17bcc17f10284a19eb0cb70fef36e854621d245f6c6a43a318631ae03b5c4ac5dd36908adba1dee2193ce6015fe0b44267f4179d010df944ff1bda5c669f4deedad11f78e10d2f0f156e7b69e81d808c0c4b0f7bb9dd520230acf
755fadd86c485e41846b9eb240227481c3eff85dc4841dca91a03630f9e6825d88ee1110b0a0a6e8ae51ad52df7fb39076ca685382cfb20599c77c94a39ffcf7964d0929412925455577912be56d1380cbc18bd2450a4939b3d72f0608a3210d00d6911d3765c0994e9d163ef34f22ce9b8108c6255c193ca76121c643687b
332fee02b09280cab7ddac7f8ce2972e9061fd9fd62f6643dd096200347a8091b44124ff3513ebc9753f459a998c24481a9da92c84c7f000a00ab70412f196bf392774f95e920f3c3c3b89a22c3c22a4062d1d2ab4e59e26bc957c9c5ad00288e1a7588b535eabc2a293313b30587581c257539a87a0bfc67fd5bbc240fe5a
281684575c713f5ed3da3e08abea435dbca982ef34393ceec14dc9db4f2d0cc8722276c313cb7595b661f9d06fc9ae08c802c7d2a820a6d3f689e204bd310bb9d416717d0542b542f407b7a5341d972b8ad5e8af2788be118d2b8d28cf6276699d8212b9d91d8c950329b26bc2626fabf3914684e2fb00726c06d7c1559764
847d21f5a618e45f05c954e0d08116903bdfd3e0bb66b9569d78ef0c6aef488c56fa0e8d66fa1563b688d2ae6b1703870a21f17f5f179e4a6a503e12e5eba042a1946ed28df8cab401f8db9408ad84dea4b0bb64216fbf5f43fbeaf51fd01abec511db03d7a24810e71d0ab9e192eed9855fdbb86b474655ffa48e4bef5651
9464f135238a45ada61b25793fe9fca7b860d0b7b5be2e55f03218d9e02d34583a328130ad98bbbb1251bc4d0556b3320f05abb344cdfdadc40791ccb1e91b5ef61c6a68af896c0d5e21b556463d27dd803f0f9c2fec4f3d0fa4f64b6c48213ff633613db568217384f668c3b5a32a5e65804648aa221503318f79321560a9
6793fc95cca09c5b5a7aa8dec338eff9cd258f74a0594d12b6bd06dc20a25d48e71f1de17026701c0864fdd0553d33192ae066f2ac54cb19335592d134f36f14de63a0a29de7877f51dd5425bd557231856af061ae3579009003539643b4efdf85ca8841502c4eb4cd29b145295e0751a6cb6be9d8ad958e059889918bf33f
b94289e2a79b2789b6b07d6a6026e271358655416a31f7b76fb3782a9fe32fcfe32db334decc24ffc67f0688555993c1dceb18aad4693ff53b163d0804dd65bad7e1ddf43c3510e73a260d5ae36f8ad75bd2c26523ae38766cbbbd56fba3c93a0919b33ce80783a24cbf80940f7b268df0216a887574166412e143e47a7a3d
01e8e19fd1970ae5210978da174075f93e2d173c4007a233108248847a0a67c08244367f90382826228dab983a0358086758b4f738b3a3ccc021271ff41ab264f380841976c0d327064ec6e0174fc05dbc5c5c670ed7b607b8ccfd9038aff7ff5e7ed7f277116e83779624b695c0d50671ed2fa9cff4dd1df8f373a78a78ee
ae351533119302e89503fc4d5c87bfde0819eec8e8852b727773290bb1f6523cb231ada0d523e713c31b8b7f31f09d7e622ccc748a55daaf6ef9213f556b3e2618da31d0a13a3338ea9cfb4c3f9714e8259858f386b0913a5af5ec0985838989fc58b33871287c52aa2981cc5ef5d770229581b4318c951684617fbf64955a
99c647ed3e33d93fa4f8cc11c75528dd4730ab09391806341a7de0ecc47111a51bda4defe380d83e35e614e743ef9c5081de78b07a971220d2167f5503755b4e3a2cb9773fa01d152b7ebf18c769b1490b52977056da55ebabcbd4516e58651ed0f7b0526531e7f6739a1ebe7fd08e2098efe0b301563d6cd1eb65476db94e
58bbc493a3cf72238f49db7e03d7378b9f8c9e870d21b0f8585999d4c0e8b2f5ee6eaf692da6bf6b11ba31cb159c8858fa6bc52d824a3c48f562fc559f007ca0548dc584a59b5103dac1ba7bd576ac4fc8d72f63b931200b41db97b85c7bb944b7ef0c58e1440812e8ee38a314571c33ae4fefd89c8288f6d6150ceed6ef98
549d2639e3c4952d2e4db335ec4acd31549c216a27d16378d202b0af1cc264667190c2c52818d7319ac893a6700a955dfc806370034139fc4c589e379b4c63198004bf522b807179ff262b5877109494a0f043f08ffb7b878b3a1ca8e2a8ff77aff923708c005b0fb77118a600ce05ed2ed86d64b1e9c7868a0b04b038ace9
8c666a4d4a7c59530235a0194688c6c06ebca289437532f8f4d661d39c594536a6513f62b6eb745b89b8fc43f08e848886177df4e46f0c244651d2b2d434e58451e877c8439084d2228b5738dae03acdc4118b487cf44e3f6d428ee13620acac370ed58f8d1e2d296e5931d5745bc4d739827caaa519febd7abf029d54d25b
f5561d4dc9325c147820dbb40c5931a7566e76b39e4c7ffad69e538cf4a266b234984e853ec138f3a487eb141b58fe2789c83146346205c866b95b08697a6208e9faca85e7ce9a1745ca6a559bef0acf7da366abb9d34777d133cac64b6066f0811afa93dee6af04843a7b2feee4a01da381d5a0d8dfa8db0cd4aeab19e4ba
fd248b13af0ecae0ff47bb414ed7eda5d697e85b6355a83c44d021c5cc2883c7b78f18bfcca0e1464d1fcb78ed295bf9cdcd4a19c9a98f6f32f9e1fda50b3888bedea7a202bdaa2c97a79c2112c25e8f20f90532059fc8568814e30838d301e1c9ea1da6c336fe40c8f8a0383a80204bbf71079873a884e9172d195175fa90
1a63e882214eb354ca97ff944c6a498e3afeb8276f2776e59cb9cc97c6b07cfa6b54326ed8fdeb3b9e99ad9b8503420d99e778b717af309a303cebdee7f4dd01eb0ee2d2f1e29fd35a0404011d3d1c8b9cbab519328022408d54c7901690b9ed1afbd0a02be5cff01f1f83d1de2916fbf72e7aa665d4f037659363ea8e0fe9
4c6d7c079e8d93340e1e4768e471f265f1e5dcd85c0b000b8afbe6b26b8db992f474d34b9464cdebde3fb6edbf5d07a6cd0529950621001ae22b0d72f16e9e307f5b34c0502c35bd3c790a3a4f733996f09cf5d819541f9f9c66c8b71870aac5add21428b0e48e1b1df972d7bed2bc4b43320edad8cd3cb422f43dc78aeb27
9aa07500e9073000321d33f9009d6997192759f413c4c41111e4aec2d578ee6e550ea3c0c7858ce597acaf4c90f94ce517b51358eae4d5840961eb56af1884fa672f0bf84ea02340ec8ff8ac8239195bff90840821c3a958ec205c8f7e4792ec03aea38e50b05d048aedadcf5734bda65c0084b0c9ce872b79aa6da03b3ca9
a4f8c4d9f8b2fb7c18118a790138c3ad5785f8ef08a8b2e4f373ebde8abf0693668026a0a48fda3276704548db0b208ec71cfa49341fa1f59fa71a3d71fe13bf476b823b05f712fcf212979f1b3a816868d8feb3668723be40d3d6b27ad24b0e7cd316c09e4a8187b82e870cabf40ce1380861f398720cb4ac6a14f5732cb2
8adadcad40ef17eb6f3ac32687221e4c636d8d9a7a2364abf20439f999627997c4ad8a591d22300cade0206cf9a552fc2674a645512889a5b9268f5ee2319b04b8bb5ec203ee9edd00e6d39ed4fa058ca1902f491846115bac877a298559a1c50e1992dfcf3f850a599f68c1e543462806a6afc4df87108b709d5f32a5f31d
913b437048fbb5a29578ce3d61a191f00de796901e56ab6c2c2f1c11d3e26df12d3805d63958964a68ef4bf91afcbc32f0f4a4761a2fa2ac15ca29080939efc3523c2e3a86a8a296637c0a3d9f65b0fe1ee9a497e808e5daeb557c660558ec84dd2c89034c8562c34dd9b98323eb9cbe9934afbecbad02d09c5da61f484846
8ecc5eb3f69e305f78a799e94ce5ddcc418a0899cd299ca228bed667264873eed011f150a9465be575100a40218448238f8b61203598446739318e89f765eab55f93d9e27433e5a559757b5ce7e55d45ee62df482952ab68aedf43f5c48c7870fbf22a869c17b2f5032d58b977ac3f82e1b9e5274f4954d1cb70683149e08d
86333e64b2ec4ce940572b2cc5b45543e2acdd53b0c518b17e14f876cbd4df2893f607988695bfb47de381f911baf268e361cce6474a56ad5db07c1ffa8a2702c2a7f06df4f598397585e39b019a41139b2eecbd756017f4a35d5c78e9882ae4522a3b567a77051bd690b362bcc58b38cd3c0071721f42c453305507cbd187
d1515ba63c69f0a2719bca54d91872d69258d06203243bae9f2a89d5dd2870cfe7c583343e7c3152f3235bd81d50487df3455005ea5d2d14cab545f17019a0d1ba83cf6679f4b30dd80d643884711cf901f29ea58cc3fcf95daaf585f784159cf7c8a66642768d219c9b497705d1c6a9615c105365a3787df3826f9ff7e882
102eb59044960aae21321d92079d912a1a9084ca9aa2acba12b425dacecefdba0b4403ef15bd1de2b830765584b7bfd900f9bb6d904d7094dd568610b410952d7f7fe926f0ca8ec1de1e33515c29ce69cc972b605995902e2bbec04a82c94303252c946bf633e74f8209483e758d9d494d4279c901cda70093d9688519bdba
ed157d66dcb1a0fa119d498cda52d0eadacb2caaa9aec75598377f17818c4927accb9fd63e9ce5ed32a988e697fddaad58cf3e9c7dad79bba1feb46984ff7283ba41d6a496790dab46e339f032ecaf42e3f0e3ffec9448f746d6a91961c1ffe4657910173dcafab92aa184a94e7ec5de95b2623aa425d899fbc27631ef2b37
520e40c6a2e5f56c87ad4a8874d42d5ecbad1e993050b38c9ce186dc25a05df2b1968d8ab064ed68fc0e19810b3d023ed703b052a085211bf1fa7a910509ad014074f8bfed15e8874b613160bb5bc84b7646c22534eb34f4684c25fcdd02a7d63ab7d23ffcc5cff84ca98b8f887f5afde158d569c08d537491a93ba922e7bb
357343b8edc73aec138bdfe05dedbda46c84d4cc6412ab34ffdfdfcd9cb737126a837b7316dc374a5a0f88cb071c300e2df49c2c6cf4080b297fa21ff6be891c50909874a38e2de5a0c9058e5118a00dba4214d12e5e6dffac34cd6c83d471a167353ff24c80f373a5599b6309c74644e66c9bf70d1ec1375946bfd71f4a8c
4d523eb441d2744824a2ed29d4c4a28c72d56402cff1361c05a6aa8f2a09e23bd2b7f345d2069406b0b1255c71d033ed6894908ec6e329b542b2353bf876bf734bb9c3bc6e60619e43eab3653301377bdc866400c9fa4f127e9c4fd26125c5139a2b163554087c31b24127752d7d79e945a0edb3d6308f612858de4710ee95
8f30ed81cc0cd358477c1f6116b22b7b06709c44f011d58868673737144dcc270d855aa11714ee830e90a11f3c2975f5db62610c1d2e7da7d84c54c341d999abff0c26ee575868d4e7f49bd02312bf3aead930cd84c1beff230fe17c86a077ad16221a968be6d54d32232d05a5a38d3f963c81c9b973efe59e2fe2f07fea19
26eee060da6b88be7837e2330c03ed32d78bbe476af7100c621d141800454918a5ad373ecbf658eccd46aa28818c97181d7f46d85ae9c70ddce47f774959324f7ec1f5ab6d111a8409d8d071f255f0604bd1e3f41779bc69790deff50bb78e9c250510ec86d82a970256c81f762bf762f62015f5dc3ac6f8c642e71ba879ef
2312e1ac33916516c3b552c986d27a58643d5f07773107d43f86b373557bb2caec93731bd85adb3d59f4fb688a23b435ebe869cf3b0af9b53425d4deaa8d3c98bea9e796cdda97eef1dcb456bf618976ab41d50491295036f6ac4cbaacfd8f2f847f80fc440d4c1404c5a665b50d071c28a06025eaf1f4ecc2b216fc69cabc
d5ab2e340eac4842d3a17d023ce99c9e604583d53e7f0721b09f5f75edc06eca90274827cc08043d06f3c600b487567cad8fb4b8722595c8527239d86fb81dfef9f7b314ade6324046a4a04f5a419827481df895b3d4f2d9a04500e8e9e50b65e0521c66d89011be8b9a319d3d581a0fc965099145c885c1aa9263eba3ade8
aab8cc653e77666c0ac5481a958a105811b081c4b66dbf0e149afe2df3ead298ef8e363d2693194740ef2612835e7de7785d5dd6d4adb581103341bb4942e0b4d6c497bcbd7a90bc5d7dd06dd10b4b1e71d2188e870bf1a9f989feefe11e8be515ed27323c2323aa33eda270e71617a43a76884e53e90374d167b7d6baf05b
222b37af85ae28c71f73816b1968e6f4d69a6908420c9525f1082798e566424a6466f1841fa455f54af107f07124520ace4cd18cb01ee268e870c64df3f7727edc21b5d2f2bbe1b9bb7ebd387cf9d6fce5d9f5423b0b88402160a1b065e75ad8d16b715b76b62689fff5ab4f9dc18e6d87cb62d37bb84d015a8dfede0ecd2d
c0224b0fb0f7dd554a5ee72f252529d414531db34f7af6261cf340b7d63f2c20fbe3149ba2ba94c4942d43d2d4e208137f2da6c2160f95579e1e2ef1232fe0280dc681bcb6ccb8905ac011c6dc9fb9a785d4bd438f14d39678777bf0acd45d401b97a97abb878ac4be52d08456aa06be768a4f9894b6bf13f7a9c46b53b6c8
33963f3d9efb992b404e35733b331e8aaa9a518c04e266140e086cce02f5eda252f0c02d7aba858dfe505f258832d1810cb19c3c0fd3e524ae6cb9d5b8ad070af9542ca1ca4114f85eabf5bf5f0ca32815781e9215421a04eb7ac36d351fa6d393ee24f637a353d5ae5429402e369014b53410df1e59d9b39eaef630d63fbb
2cd781bca8c95afaf236f2447a6dd9072f6ef740940b86cff1d58b478960a8d4bb37fc2d57c40d4635e75c0702bdc00d56b85df65ec3a0bd65c4ac546647263388d1370410c62e91625e2eaf331baaf2e949c6ef454be9b1e75c93e4d6244108c7290bfd96eca5afd90071ec2e3ee44cc0ad5eb1f31b8f3944ea5adff0ac98
fb5260d7f8cb69f124b47ab77fbc23584ae232bad1c5e650844d5258ebe6be5e5bf45430efbf42440d81c64c56f64bdb33c48821ec7b3e912fea05a9dd0035e4d67cb38dc6495ff51c1d06a6ebcce548fab0c8d1c07af881dd4dcec8962912db1df85c0e6ebdc005979274580e6ea31c12817df7bf84aec87fd37779e86cda
96a6a727fa829f6b2e91c88b3489fb086fddfa9d4531ae3a7eba43bc1bdc23c1401ce0691c57c0852567107cd6abf842d3697cc5e1d1e4b23ab08f3c63c7e69af2cda14c36a50a833f19615f04a8052333c915a9b0db5033904d62e52f4b02a5c1a4a7c9403e87b6a6efb8336e203ad3d33e1769c4d388167af099b591aba0
eb0ebe3b6ec3cd5a572f0d5a122dc46736b3d0f2c4a4c4a89a81dcf1ecdb1ec374b5a70c3c474f65f73e50bbe2d4d70ef1f5adaedc5c9b51e4b4b65b73cc2619a5ad49ccbe30982ad2afdb9b1c2030256b54ffbe81d64fba5e57e65b6b9859c2f93556a21a88d55141637148b751c55c51dc13fa43051ba86ce61f110e48b8
d4a3acf251c0317437135c5b56feebf2a96bf5af352cd410164cc317046f1c2c47d12849cf4fdf07472c48160470c9ac4647d1ccd39cbab85afd58dd3dca8a18e3201d302887a74eb43265417e827038b68321df2e5ecb64bf49819154751683f71b981be1ab0fc229362adbe644fea6f717ae3cdb52df97ecad3011a3efde
aa96508776b2475fe3688d69ba0f664f19c1ffd3dcf73f21a79dc986011403494a4d5c070bff97b3a65934f3716118920f6ed27ed55e899a17231def5c7303cf449f2c3182e1347e467701d366722506389b54d70e7345d908610dec162d6d9dac525bc1503db946c84ca0a40c03a348d2f230abc1dcd0bfc20461685d40ea
1a2247aa4b5f0edf742da39c38bcd022db4408bfb7697284f9d6bcd183132fea596b551a9e42cc914330fc27d725578a379da7463f15c2b6802bc9ab487dc7b5c743e0b5611d0e47d922a7644befa97e5e29b19967760a1fda935443229ee447f7b9255783e4b84707556f105bcb1bcf6b30b3bdc8454a8476f4fea72d9ec6
dd847dddcf0349ebbde84ad45ebdfd65304ffd1c3710b6765fcc19e1512074e956feed30dc1664bc635d4c03c2a71d72362b6070bc43bbaa152778b749aa95e230982586e916242d0e623e509cef9900091e326ecc382e4a542480fe78899ce46b900ef46c7b9a592df3998935ee3b17c7e1386a239f420db0d207cf1e33b2
7c0700a738ea0df8f0d6f30afb1df8d1347818f5adbd68be0b5cb4338cd458c787ba162e10c4edeb5db2b4b3bf0c2cd8e91e03db44d53626da1f542169442a739257280170514efa034d0580446e303d308b3d13a9236a3c2ce91ad707263e00965102c12b5dea2547d6dd96023fe3dba89450972f8c421894b99f46756694
45a71fc40fc52c734d417ce3773004d026fb51fc646d18104ac6ff3c0c3a4604aca8924a0777a0cd0c8a44f8b0982f830e862525d80a120dc59a85699af4baf446fca5e3fb1f54474c2a984cc893f52c1a6442ea5332ffbeba0ef2e1419d748b77c91881793a4b15a48b8b5cf69b10c52c0cad096c0d0598392deaa3cb24db
da4e85283394cf7250332df3e1c45f8e0a1a2b2c47b760ab833a04547297af5a3e1c9cb647edc07f7dc27c1d6ee5e7a705cd4e9e3b34a6b5782a38e48e053898b4156cb1ce9830ea7a9c88fbf6a127aa8a9ca683c6badebdfb21924325c3d722ed30bb3adf55f4c8a7a021d267b749c529b7c66c02922e4100728c56b5d409
b0f353bfd5079bf0ef858fabba03d099f97012eae54de80bebef203783c739145837fb44ce935860bf94f60687d374a2db73ccef8564e0604c9d004a01d26b47ac688daf827585d66e23a2eb8935909cce9f0bdb555fdf748b7311f390f15830c121f5855301771eb3b326007a86b22368ead953a0413cfe71b92d91699590
fd6037aa44dc4024c6d06f0e6c7cbbbb0c42b6072e65efa79197e466b9302909f99579e7f91dde798ad51b7b307cd67b824b0e2d3a7e8fce632e8e5c9b387ca1de015102d8b3feff25673a11dc54eec2a498e2076ae014a998b8443f9713f86136d62ab89621781b346c30ce67e213e7ddc521f1d294d440d4051837745141
4c93a2d8251a9f45da00f5478bbe55a526813afce22cdde6b2b61f652ccdaa157238b95484e72f2d4b201cc5503cee449f92216d57b6feff635629fb1ce5ec69f978f121fb10e038e5a95e32ec6663a70bc57d6e3a7ce9ac2fc52ade2162837c4bbdfa70075a922faaefb1c2654822963f74873bb2cccfd2a52bbcd063ebde
2dc8a65b6cf29345e40f75acf399315192a8b700fb0f8219ddbafb10d0f2b9741e51862b5f5e0781526a45535e1a9f2013f4525be7b4bd40b5e72f5be5cb48f6e2b45d105ed98398c17444e9d5e0a66d5184b07177589d77acea2da3fed671f7c74a350376b5e35496bb13e7b05e86fc4290ae55b8e2a3f3535bf33e75668b
b324fc18370052c9c37cd351c7991b300213f18fa2642fb359501c66cbeedc5e948ee06679010facc06f765ced331f4d20d2b3e9321075d71d6a1d17b273fa00f583235bc408c517dbec8bbc3fc78acbfb414d1c7a30b1780608999899642be4923177c384ec9d033f8f54c677f3690f794d4d2f7525e8c7c0a4626225f3cb
d78df1311e31c412eaea15a71db7700b82c5c36ae382808efb39a3c54b630fbfe4f0dd19c4a4aaf369090ece5fb2ffa65d77c33a8c8fbe9dfe0c66f2bfda44dfbfbcda61ef0e5f3149977a73fa833e5f2de9cb1fd6920c02089a21b4ee670600824374fd4d87697d37d5cc21013c0af85df33b8f3a032f55b154fbe3ce7f2f
f4b2478f3456340b762cf02a50781e2962b0ea200dd37520876f200e6fa2ee0555571eca16ad533f071929b9ee714cd75bacb52d333f4a54f5e376e099c7a71498638b36bc0af72c82aededac53d82bc3a9ef22e81db3b978801f132d6c112fe74827f481e8fec23e7cef742294a4d1ca3b496250a0b645b44b01974ffd909
810e9f2021e4dbf3b2a74db0a7a2c446c0bd15a804df23404fee83fd79623c9483ecccd97620f6e7f77c5750396e40fc4f1b7550f9106f2ba294e1520adefdde12f1cfa9a98e1465b50f9d8b2a53a3c9c9ebf198f8f5454f8d7ec11b79c4b490ce2edf556cc35eb8777a6a9c8f2b224c820b2c9c548e3a3d960a562faadac4
b2502bdab8291c2e37089b0358eee0ac8cf58f9f2ca6baa0c28b2065de68b89b464754ca9d13ee5f7c9e127f92d3cc36a51f15a3860aec3ba15ea39fde4f293bacccee6c463f78d9d8ef140d9023c53f2e817b044e53a511e25ac0b17b492d938389e9cf0e540b6acf5d6890a195c325a5522da629bb838e22ef4bc06eda72
e896322f05a3aed8f3206195973a90f8eff4f0ab0f5bfb0898597326a8cce81763ce8373170be2fa765da5e4779023dfe260e2f82537036d4b002cda373cc4f0343b38b82e6b9f063e57014210583707791ed429e1d50faa761a7ef0140f6f9063d1854a4aaa0e8a5b6ca20237ddedf089cb5a9c3139d83c44f3705d51bc9a
0314904b40af1c88587cb8d9d758d9a6466426ec0e62a280f195dcd9b3c55949ce5f0b233096dc8727b3f81b098b02e56205470887fdd6bff065f904dbbd3072d2b4c6d47b45692a4ad8ce367598640a94d0b0896381aceb6491854f14a911823569e74070726463d0df5e44be09dad6286b4120fe855a9e9ddc0ec532460d
1d0ca07edb35ab078877874e602b031cd62fcfdd8e48575769478c801257919cdec5c682ad8f8bc406d1b1fbf3859563bd04122177e85bb0d00fac4e1efa649244aebc6d37f608d28e16860db1822efd26f43997268d2515a9559b52ada0585ffb4f9e56c8a1d33f4dfcbc4effafa35bbbbd92802b2a2baf5e2817464c01ba
18f7006742bca2d35ee8a078582b2b3f9e3dc40386fd630bd9f377ee22bcfaeea77215b2368d888572d7d0ac6c297c469f14ee44a7dd4253471379356e8ad53e599d48dd2379badbceaf699711b4d25108d7876f6c4fef88c5dcd54d8aebb1317763ccfe784331859f79936fe1e7247fb8e4346036f6f3cc90416ac8e636e3
1090dd38aa281dbe2706b97f06cdc8fe14367711a723c6d77328016f629e183cd8152bb94dd95fb7a6933d4a63dc7c75508e911e6fde6a82d58807033cd7f1bb9ada651034d0459069bf7938e956f584599d07ffe76874132ba3aafc2746b4223de77f0a092b8c25782324890587d1322430c302b15b5d331ac388dd9d6c61
6c1058ce31d4996d5ae7c7fb7e06a7987a0d65fbe4b1c6a44ac4f0758ad21a2b9252313ff71a0215ea61be3de488a23396bf06d727503e0cf603c5bf6f1f0800b9ec8b367c99e7573c247b753bc51ddbd760de6f5ed5a36ccfbf71cf18367301d25ad7b426c33e984b0487da4e849d4d652c4bdabe840bd2987027650a5d41
6a3635bb8adcf33cf244afa12ea6f5e86e027e8d6168cce5a85ee4c4229954c056a1ddd3940b32700cb0d7ca947dcb686453c961769093aac14fa301e3fee130673abe05a21e4bb7841f4bcb06425eb547ee296e1fc600bb3c4c625f209832a1a80e5c4284fd5e9a7e4db053a08e49810a2656919a3f2c69e8636586d6a99d
dbe59ec82cff4f924684e6cb5c33c38e71534af3a3e9fc35ae2b9603de6062ef2d928f607f155f43354dd3dab670ad7ceab85ba4a8279ef0afd6a86dd884c2d6751da21bf88535564298581b5d753847df8f3d4df9472d142e9871cb105e9a15642c3852b6ee77bb79d0031acf3a82a5241f35eea08b168aa3daad30374b5f
344ae5ae6c6dbfe570d77024cbae8ad8361c73b8769188d4e7c2e01871b6c77499849499150e2d717232ee47c810e78e668bb10e0aa7646d773a2d790b962d346c24b101823462207ecc1257a890cc7fbd040c2b29370cc5f9caa1c49acb078368109c9fb6ee7c12bdbf6282882c32a764ae6fa0169f47be2806d7e26ec23f
2b6ccd4ad01288f560ff0c690e537356cad657df7141c0088515d0bf279eff25c8a5ee3189c8be92f8c911b60fe697605263239203b080e8be3e79404a40a585804a8a7fb3c49011f8ed8cb7e58d74f618d7bedda08ae020bfd6422d2e55fb236e6047bf6689b51c1f262df434ac6af155fbdd378fbd639e4728853d86c493
6739131aac938fc20c08476b0c6ab40b8a96c72ccd040597d9678a314a7f04af0f9467ea6d9e25c0e83efd7407e2ff56014215f4f24d82d914785f6bf742a05f9cce6545daeff05a7ffb524c29800e59218d7b8dbcb4f8823e309dadd3359844df817bdf43f16dddcc548d16f82244bcadc75326f1f624e5b804aecfa3fc10
643dc20d305949e3a411c69b049144de21ef19bc3197b4e4478331103c04ed96232ab2133535085bf69bfef7ca8ddf149bbc1ab76f3f041b36bbf2307f7d1e885073cc95f1f3bfa3a683959e432d8c0f80c98113c32080e54740cac43284b55508867792ccaa161b057b4f13c298aadf63d712b74b03b0e5c5875a3b85b12c
2ed127cc42d6a9aeffa5befdd3535f42867086d926891b0d0fe0d672bc5b55e8185abe92aeeea477c320f115ef518b481fd4146602a48cf9e9d19aa91516d5705cb1d41b3fa9c4f77cda4033b94591e8d8838c6d4e30a8accf629f659d2b2d202e905d4d7a7136d3c0b3f5542c6b0f4963c67c51475fdca1f2e18138f42131
be8a451e4488d2d91f3da8e55680960cfe4c782c5598a0d9f130554976ae6d0e46cd397bc156e65677adf6254925f5e2520f564e8ff997575f980dbdad65c5572ed6ea8b0576070632e87b9599501c0a1d8e033583c3a27bd7997113d2ed5b2a13a2855b58cc732fecd6eade0d90cab9af06fa7170bbbc3f1b4162f7ea7735
a9f5d76f4904d837c2d169c2366bd18f0999dce466b6e9b74baeef221279e918276d580c871ead3c921a6b813c3b752f9b7693e14b9497864d9aa31e0f8635936573222cb8a2f8761428c08d26c02156eb1e26c7484e4eef32b1908044779cfebf6513233b57070f6cb0bcf4100c74a435fad30afc4d8cc1b2ff823b707ac4
56afc4e5cf66be6442bfe0c0b9338117213ebbbc0e6c836e062e56991bf91f1612a52093ab4f737d2d3e23ba8ad5ee75b0964173d66c5279f5099d6fd87249588c81e470a1be3f24e487449a91166245a8e40f1d619f0bfd90dde1ef549d108ba1fab138959aaaa06209d9539dcd9fcc0f7e1917d57e2818d95c01020e747f
bde9ec8fcf9ce6f65419d9f90d4516807c49fac672d50a7e5bb71719ddf1a176190db283aca59e1188b7eaa887d5b49cbfe551c9f9cc0bb3a72af53dd4999f48acf3f8c76929bf56986c08937ca434a06055d61f9d5b8baba82b256ab62abc1cfef20a117289a413d594219f5b8177a051b31ed45652578c97fe53a09abaf5
50a70713ae197ed123695021668d709b543f4086213196da1901ba7df5aea3a8edee6924e8c490cee77207e56e71c10b1a1fbe29afad335bacdbd95bc459aa8077114ec9821bdd2c32c1e3d4d341274daaa9649af179fe2d37048791eb2dc189ceaf1beaeaa1a8ee57db1fb5089f9bed5e5702183491c40f4c9044b3ebb6a9
ee7b61a7e1a6834cc5f815bdce2f30433b0f84281bf325064e8c9610afdcc3ef9d5a1d50c4cb31d0820a18cdcaf0951493899cf58acf4cc6dfc4ec83865083e1f81fd8b2e304a7caa1585bb1822f40101dc3c68663444db00aabfd4f89738498ed0d47e54f1cb3842d64c66b8af4f7d6a64cdcc70b15b6fcce554c218f5dc6
4bb4552eda3e0e65a06495fd2f4ffb8d1220620d03180fd6dc1ced6402040ea1d58837943b2bbf75626598eb67e8b08c5928daf83b1849d7f24b36a0c162ea73f54a9c01458dc21ff5e51792389ba8287c7d4f8bc1c83d7eab8c2478e2fcbed4a6df2fe83163ad9fefdf2c960468100bc31435ee67f5aad53e0b9340602075
397e02d624ac0586e958d123d53968802d9cd7fee136b3ba762370cdab8aac408d996133fbdbd0c1d2e82859b22efebcb7443114c222c462c92bc756ea6f2f539f231ac4b31d07e1729457d3a1e27b48b28ac56d6de146aaeb41eb6066d5c05682769443817ac91d675ef499a1816061126af78f1607f4a1fe732569b9ee89
4d6dac6cfa30fa1dce8b5778c23321a6cf43490296a1de350a9531fee23f98e0ec746a96429838c27d6612e7f331cbf3900393ab375a2368546cd9c0d6de7d83908cef133e22f690b09cebb398f8278d67b059041256c2554d3e85f89706bc42e18a5d81251ad87a397b788393f687180fceb1ac576c06d060ac81ee2f9cb1
200cf79a837be4cadc141b665cfc379b9602dc021b08d9918b3ee2b87190de965f277bddcfed4da27a40429dcf459a4f8f7cf065a1fda744f77c6c541fd52e79ce798840e234ea7a387753bcbc4f4d8543159d3baa56b6cd0fea0d2e1b36de2de6f5355ad310dbad4eb391563263f646d058d875d50b29109156396b7a6942
0a8c0f26eb265ab1b30e1eb6d424ebd1a7b34ce31d8a8b4dfc3f6867b49a64ab31d709012c76ab035ca899c04b5c1247928df289fcb7b67962fc505262acaa578e016599ea38f74af56b95337d8e1fe5fb2388410a9feb84d290f325ef65366cee60c548eba8af2e8ac58d29953b2798f8a2bbe9e49a5e56ed1d42b45b3d9f
2d7311cd4bcd0e048ee6de3c96f078b8dd2c65de38c2ae69c4de711bfcb2afb8873004a0ac0a96b2722960ff6cf9375fe0f1ea9a3a80eb4d1cc2276a1e33b41476b5291ff52cd08ff243eb6b5c19d5cd543e77741b1ed2695373d5eada8267dfaf246db1674f3c6ac1129d8798896c0d365ab01d5e50b4602dd2504a446f2a
745cba365b9be6d85f058e524b026146aa109b8dfc60645119f4e1ce7aefb6be0400c9112da4353102e9f476c4d29b5482a9a4b997b2e7c52878670adbecf6e5cfca03f3de0bc537fa8fd92f8c8055811c708af0d343fa805930f18177cb80b06a9ba99ece564204e831c24311537928903671203aed18155df304a54d7fe0
1941eac4fc57110ada6a7a0dc83397e8e10af0bbae9121da305812330d6a3480dc6fcf45f29c61d19d37be7c805097259901cde97013f3b37a529c12eca1cfc521cbd74bb7bf257eb9eeaeac570e47c61abb15a6df9b6a86d4c7397f90b9fef49f96b14f8b3ae4ad27ffbf964a24202963cd731da08a3d755816e09624fc45
4619d3b6f77f6208b84482bb6c7652afc43b51f3312fe9bc93054041bb77fa0a292c8cd959c979243f9cbad0cc2d20f6ad95a5ee8d4e755796dbd372c8e1b8f2a695c7ce0a57a03e818c73ee605e3efc98be12de275e7d33b3811e933efe0346d62a84afe6f30043b702b65649f1dae02adb74ef11c404892d7a944880ec8f
a718d977f90e44b9e7ac311b913b8752c4d1b0faa0ed5246c73dcddcde4a6668c717778944972d4787a5245ef2d3e9b2319ffce63ea61889ba4867863f4410e60680840c8fa5e356ab1c655407b78794ea3058a84c3e22555c164bb3aec53bdb2bcec389e38795e9c353429e80a3b645b44d9c3a00e4197763e9bc56d17437
f81b039a02caef1bea2675775a139b5e8329bb9bba0ad0201180e3c52172530915b90d171fb0713f9a898b651d7f42175b0de03dc1733170283e314a737d8e38eeba2769ef786f011b88a55af14e0d7705858309f1508bbfd7dbf11307e009010a344e3945878b61c69a9937d2945f155d5e86c1dd727dc89ec802c9e2c117
943dd010b179337f9244d56a3754b0d666b28c91b6b39951a3475597a7c796d7ffb0fe9f50f8acf7adf23d64dd1182bb0562bd79ac042540d5a3c380d2185d0b10a11c1aaa1d1a8b22c119bca79069a75568cc03df089e2764e6eb59b50e396369dd7b5a1e65bbd335bbeac1f56f06910e8d49fd0e5273f4ee40c12bb11da7
cd15659b544bb8990c40479859c174372ed031831edbc2cca61b796f68e6ab52f85768c0da3d13080cd745ff663f82e178aa6a6fcf0cf86f0c980a63a0a0166aadb2104cadb75668e1a9cf6bdf91ff18d311aaa3d711608b61cc9ba9fa1063ebffed2f5728d8c25908cf3c58c4c5a7caeb0a1dd8a7c061d51a02e16ece56b5
3a399d9562356cb623732440ca1418fdc5d6b13f6deccbea7cda8a31890bf5ff5089ba9faa3b4586ab31afeb1829836cfc122720ddae09fce2559068f464718df5bd9581f43d1bd63f4c7c516a08d047d16b5b84991b106fe9b3d6ea12df8a62f13fa26d513b673923a7b357fc7721beeb1b8253649087a89a80f8733a39f4
e6347518ec89c955cda8bc6ad19359e3c09f562042ae6237bbb1fb410503ada08aa153e57832405b669b9740a3f3c17e1cb4af9e8d257dc138f76b054a6b5822267779125751e91c890c918294c909b6cf444f7482e590e758330dd33c6f8efa916e1cd338df6c2ecdb0696f97a37eadcc61a7bb92ee841ea0b85b811f7a00
374dd4ad46d321b7143d384d8f98d38a089cc849e55e661e230ecfb5915e3f962b3b7a69483b2170c88e4d667c7656e6c1a630699424416d121162bd8be3cb17163a284fbba7e06c768c73f2962b19bc6e05d2d31c49aeb3244f504b4d32e865aa8ce67127b8b01fc8f2c091b1ae051fb97855c7d6880c6631d06ecc4fa27f
e3c9ce56624fc94b813e30cb03e88112f5c888cd64e3e0c77a0ca382aabbff7303467066e5293a605a58d7718fb6f03cfbcca1aa8d0454edf96b50b872eb231f037ddbb2f2962078745be4fa6c673357d47ec39e0b928d18b1dd073a1908c957304aa7a092e20190716dcb80eeb766a7818d2773d2f27aa72f958613364965
8457eb73e1159483382257e7c57e4c0f523e2d4690b89b3d91670a9ddb82b85760ef772fb67dcf70205432ceba21a99c4ca4fa199d07aef09974f34e4a4281e0b4f7d3a43e4db4da9bfaefd6148a1c850acfb9eb837e955b8b1225068d5e9d8d172a7e8ea1e4a73b251daa0eb0369299f8824e5073d779b165c2c163cd6eca
f6c9e54585b9ec010bd42cb6e2ad0e62561cae7bd454982943c3aad484f6e5cb2c4f4228bb9e556b6f07d62231b95949eb25a8ece54093a8f8df44e652298d549c3e8dc0aaf3156a28b4ab95dbcd1ac653b1a03eef3837812b0d4e9b47ea1a6c94d84aacfb636008b48dbf6235cae851f0f9eca75cc97b26a5d02469fe8521
f6c7405ecac0b1c9549dcedcb219d4d2df0ee9eff5cd7de3cf8765f3170670d4fa3356d764b10b5f14f2a9dc5755cf8bd3c456b41b2a07a685b78621df3ded4bf952925bfd1dea6c32ebf5b34850a0ca1a996d29b4a70e861b027f3d297cba6cfd0b3c9d2ace6417fad5e40d7251356dd36b84308427d1a1021bb43c38e61e
040e957ca34a2b54056d1de6d59c4a08870f2e23a9f43343a514fae4001c192ded6dc273d4a0184651e251969fc8a55f6ef84e3ee9ec252ed2561167b0dd3e7dfbb54766a0aa1e2ca957953e15c5e1b3c64c0cc38ac8513121f4456efe2d2cf4c0af9264c237228e0eeaacada28b212a54b08bc2c7d73063ed7f2e8dcb7442
ebce77b1fdc77deecef8b0f4e980246691269060fd9a57927b5c1f93e8e77b17095b97c0bad3b482dd8784f8a9fa00899239c567f370ff6d6d9443cad5b1aae9d77fe6e528d4e5fad48952e046518e521e018555d0359a0da610984b5a3e4967cb429884f99d3f45f5d182260c650325b1b888469df34acb8b61a334bcc6e4
ecc1c782febd20742f90b7860536df9d5347bebd60bfc9b79572afa01e9ab81b1778caeeb699f3997f896695d2ad8da0fa660c1af53073e0d172926771326f815c96adbb2890274a6cecba6ee10e9b27ad7e72197503b7c2f08acab8d5050489175fc90dd91dcf04f21808a226b42848eff2042b974cdf3a2440ae930683a4
d824c9b26f3d0386a790353e460861b59c426fba5b34f89f2fbc96c6ee6a165c214819d500914827d2978b96ea13cebdf0d7efed8f244f5f87fcd0c96c727b53e067e88f2f0267f73594c34c447f138f35bb441b0d36a11f84a52f68baddb0b62c8d29a82883fa63aeb7ac31450265ba65c7ce60f21f423ef8119d7381002f
bf494a8666ebc0a8cee448f79ccaf3f4b2be684b749a1ca449808e06564be6f69777fc840213d496f5950f052e92e57c87a68dcac3e2a3dcf013b4d0f6ef055a3d9e01ce12ca8e803f41d8e4703e9a97e8279e0ec606501b0fc532e0f99df10aeec848b61ac411d5c81734810c90c0252a1785c2b4c573fabd74dcab6b65be
acd8d6c6254c7dba23da9ad0f05b39adc26a81fd5438e5f85829fb5b35a9023677d99c3c22f50d3b5a1a1f8df9e1c1ac840d4ea994c1d701a4dba21641f3a9a4b4f365378bba2bc710e7c2bd0a311adf677d716aafc480be37cf5d928109fc42c71bdcaee89258448518b0f82b86ff3817b9a01f055999a888023a4e33376f
249bcaac5acab343a9c09aa8b91fe35b2e58a1cabeb9224d80394702c4a2f3a7af900cf541185d76fb27b5bfc009fc4af0fade33044298e2d376d09581e6015e69de3b8593db2b5277937bf5dfb7f899b5849f2209766d44d49576684207e99d426f29496f6220a978bd1fbecf26dc6285c9ed95d1d74cdb4eeb7362cac5f8
b14b952499590ae7d96ea33c8b409be57fe2fcf99d3a9154e3efb734f94d7c1cc675a8b584cf9f1b904b6f5dfc7121372d8c218e7aaef40f7154b71e5f021315fbe99e8e432f9c30774711ac1db0590b97cf145a46901f979bdb0b6e261fc520ea64f87c8729046437f4f92489e43a2fc9ea0ce9a82bfdb41d84726998ecc2
18b4f74e88e1fe0b8cae76fdc3567bd39c22a960cecc9669c28737fd02c5e3abcdfd96bd1c8a29a097f016df00fbd9905d5bff72b0cb2704a2fbeee8126841c5482a5392442cbc9a70f4e07cafee55e20ed9bd2c978bf15cd34648942007168a142dfc2a52b6946503ced9bdbb3a11af854c8ed908200238475cee63553069
68767d910922e87ac98688277055749afbf01a5a5784d34c16a852f5dbf6c9712e5a5ce70ee2b16e58129dc9a331cbbd981fe5f101a350a7d807447fdf912985939491b2e979e1ac57d5c62d2bd27930ccf0faab49bcfc31bfb68b0e530e83dc4f5b78fcc2651698a3fe217aff92f6c588c7bcb385981fbe05f72a501520fb
ea53bd6c940c84aafe4db3b94ed55cc848912fc674986763b9eb78d43dab1d2e6f12eb0a4de004306b486cadd0888bd218d800d304a8f9442bec8dce2bf23691589d57533a588337d76f6b4e0847827e69db89ed62f45d8bca3373a0d3a177cf346f516d94291d6f458d089d0a5c5f3519ff471b9565af04f071fa9fffce1f
3898ceb5db9512e957d0fe7cf1634e5a7cd1f71a462632bef62c4100723919cafdf4e200b12c8bd733ce7a8929b68aac369f4c2d3a41e73178cd487aea894543ca781ad3eb9c5c029a99787b68987ff18924f05cdc71bbe09bc5336bb05892cf65295af0e746e25a77c113c0dfe90d3ba1adbe74aa63a5a22b723ba337b50d
28473b6bdb59b4c0292b5dd7ab9aca5835b87202b22cedd8a2792dd3c6e4ac416a74bfedcafd9a6561389f5bddfde7a6c159404d50718bf151f3318198de7140f1759210c9d50812cb433995dc46649bb4dae8d832300be45d1a2d4dc62f90ae4e48a437b6a13422921ed616a2e8fff2c8a7479aee8cf97ec9574de6ccf4c4
0395cdc06b11288ca45e4cb3fb8feafc539314c552f25422a907ff356ea5bb5d0b23dc6c9d483d1825bb3358f70429c7123935d3c041c3bfd862ace1adcb28a971586e1d603d5b0f070afec7c861ba76df2735b96c96bb673dd04d5957dcce3cb7a6d883473a88ddec3eacb6257c8c00db2ef3cf13cc524ecd2fd5a61d6b13
fc0fd4e69e5fd963767755f01dedbad5baea1950d7bfd5f17846dbe6a9e2086587b77d9f9f18b0ca2722b25ee0d61ca21757cc74261dd14c51ab8561e2bf7bc6a82219095dd25dcfb033c0fe392f2bd1b319c68fe0ce42f7f5b6542ff15866af7c75588f002c42378ad170dac446fa064bcc901618935770ec2c34fb726ffa
f870aafd7b37810c55e02e758091ae8b861dd4a79f8ae49b0ec998a14659a4bf85510e4937e50978da2edfe0998d17bc390492384cc5ec53c61117d5045c7148240486ded601bdaaf788cd88c4a9ee8ae279ef6a36d4553a0b18960370553f0aaaad0cc0399957983f0461f4b8a62d1fa9209049653586c397d2eb75ab6859
e3418492ba751ad5bec0656a157103991398b9454589673f228e1cd89366e250752e640226ef2b15f3599a882ac34169c4b746853c8a444cdf69c1133216e9796f63fdb01726916ec93a532997b7a8afaf71710a94e914aae000a58228412765487b49679395a6de543a7f4cc4aed932623a90976fb5af5739e2d53f056b0f
b33b9404a5a54f5b51a024bed7e9235b5e10c67b99e63672de7f04cdadd2422c8175dd51be40a9d4f13ae24a614298c5741e8756b148135a5716fcb11affefe29d3698ba863c2a857fe997b61301fc968e03396ace530563d18227cc9e4c56de2bfb0c0e808e6040749e35dd9e9d5ab5c38fe31a25bb3478176f7f2618a021
58c235eeab92b2403a34ebe6e855f4c8e875d081dd32db091adcc7856af14545e63115aa3951c839e78280f098e942e81dc0ca98871457589b1afaee807ccc01e47de758d1e6e5236c47d6a5234f9c4da00913eb34beba933cc6d32b24a76c3908aaf672a16e1c8ac6df6ed1739d42a6c0f061874f560cdf7704e07bd8c2e8
66ab455266e743954a0b322c0d41e8314e2cbfbe31f28b9aa6468a32478f07605457808c277eedd159c792908e00cc4b3234ffebb51d3bf4026647631159b185d28640b7bddb16fe3c5c72001c93751fae0530f0f391c1a8094b93dd35a6b424a9994c922e5723d6d0ad3c6dfc93afb36f8ffe219a204eb4721eb9fa92d037
7e16612abae4c69b3c17fd03a2288bed634ea4464dddb8f1d1df418b9c13129ef24ec4de467a62f721cf82b1b1ccef2ac4ddc475f109fcd84df60d77f025f0f7de6bc0b4c777eef41ac8db07255d58903962122c8fb6d3e4514d70abd7996fa2fd638dfa4f801365c1073cc232763b5f51c9f8970a0812784e37810362e67a
65385b39378005362d1460012ed4799107db7f75be7e0ee573d97fcf499739ce4f940e6632ac5848cd388b944422b1f48018e962723707b248227bd1a630ce5f5e1f08a8bc1341d8959618d891430d1cc9ca93345b5c81602406062c44cbb9fe21576af1df030630d03f4ea9f43b1c3a59ce33dcd0b0effc2861748f281cb3
c6e36c89a12011c05bce4c791670b5bea27cc1d992af2583c971ebaf0591fec081e71d30ff6752488bba9ee7a6f2d93fd5ea5d1a44aaaa8c148e5298123e6219799e414da7d11c747358ed9f6a3f1f73d0d36a00cf36befd072292a9761c52b67bd873af9db1363ea5a864f2be64dd191f467312a6de3878addd37a4ad7e5b
40f30ba6a614c02f2e0973a1cf70d0c81ba7cbbb1eb24872d445fe194e550c585b6a515c188ad2fb676c5861cd02f7b0c18f933b85b9c4daa50c16179749f7957bc08e6318632403e18dab6c9b04322f2c71a633b22f35e0019668b4c4c72756bc8e1e07f6bb666e371ad98d773fa5b6918793400999c21db007516d556cac
8137401e6bfba2649b54f008d56fa51c3b1d77f2a89d24cdf9376602d4deda4d230cbb56bdb3c4b00ee428265d3a9895d9bbc1d125c74d390d7adb6a50275e77da3540cf9092249a80c6064d4210b549da765a9e4baad8daa59c4daf2ee54972fe09c95c82ee7f218766406da9c6acd4e5c805a3a5013851a57ec85ec229a5
f0d44ecc8070397567a77f1c5f5e5f4733ed228b9b37635f1dc0f2f630bd1cc4de8170b2400c4e534bb48d5ec3f1479ebbaed911d9f61f184202563d5d9bf8a7c363b9ea8b2de0136e97b7c4f1dfb4abfd8c62261706c94592ce23ec9ea4fc83288a142dc6b2137993cc4f71ecd03508511a81a11a9a0c178dc1550993feb8
e8dadde553e2dab1059b946e686c324bb7b1b5951468a6f3ac2cde2a343366838e54d6a46cba5a9da94386b7c28b595d7c88c2e2c0f1a2072fb8b1ea5c08f7b28fb5eccb62cbace10f5af5d59a8df9fa6de990e6cd6dfa64f106c01b3e193249868595c4a8304a675cf5bbf0d84fa3ee256017a65f3bc8cd45ed36c6a26e9c
a5b1b46e38a86ab98bef9347ac89cbdf90cc51a03b2521ce12c721e2711b66f608b7586b1bf42815c7ae89d0eb82533b90a633f83f34c71ec553f5f9e72f676002c94d91d0cd5442f72275faa5a46049b794439ac12bcb8ecb075e01ec796a7cdf8dc220a359799a9ce58dc72f7bf65e8b59365fdbd9516345aa9050fed01a
dd0e04edb84b7ab2792e5b16fb1a52441d197dc44e2a7719067bbf5d64c2e1bc9e39c6da8b5a393b4658c1e9f4fa8d6b33673ef9a4d7e3466681fa75ad7e7c8ca8923a57beccc9c312a92ed07c210f400722ec247734277ed8833879efa7297ec8db245695253207bd17566ad23d9aeebeb485609079d0c78ce9a0cd0639dd
b16bc3cae8eacb8010743e7cd854e577b53d16a344b1adc0c42c1e57194c9521f60b72a6a3919a4063c1e8066d9b24419781a21625e85543a364a467fec528fa60794446dddac177b6f5336ab1a9fabfaaf37f07cd20fd66ecd5903edf40f10d3e0842b680b2fa36d3061e0ac4b40d249896d1562cf118614dc81f2c0d0a8e
87b2ce2e5846a155806946be52040fea2ebb2d8bd206ef4d05e453ecdf872cfb43619b60ca020e287ac3547d37e86fa9bfe55968e074953c9fafcb2268f65370b1296896933f032a155538ce1d93507d1dc72d924b74c424dba63af09a118c69622f3d087db87fd28204a2d8a7b3a2c9bec3db87c8a3e22df14fa452d398cc
22d88d93bb98fb6b1da7707522cb9dd7c5919274082d125ac05329d961c074d19696971d70e7e2671c442550b5c027c6e6826194ffc7a4a9d2e575c43e128fac8b6d21de71c6502587257a0d76d9ec5ef064052cf90e90328df898dafa18656e9b35464588f7d612db3778d5ebab2eb93a85362904ee6a6a5f3c5a226cd071
ffa983c580020b6f974ce11ce3cea6ebd707a3b24be734ad9d0aa05cbbfb7e1d1143914f4d4dcc6674b4d30b9a90755795648161c32322fc7b323257b8c5e4fd70b9fa822485039540bdb771d5dd1c633924b8cc4dab1950706590567efb2f1411530b7b535018af2f2cf76705d2e5c5224a75ebddfc502ac6a226eae2716f
2da1908c0d27fb4c5addf7fa9794fb2df0f17058b09f372e6a373db8d2df76c0548943080fd3342e8441f4472eae890e09301170300723564eff22e175cf84285c37b8e955fa5cd146930dc33d0f1a74b1b77df3d71eda4abd7b2fa4a7578b5453b72da4aa2a74b3a123d5dd2adc7d7e1cd321f13b445ca230f065f5c14684
d7bb1006ed489070a8623bc97a3886529b53e542b4f38285f694cd683aff997ae4c568f81a145a0f94a5014181de8c9ac61dd88c50d38b0730f79f63f35789edc0e565c3d82eb45785d88cc1b4ce3468e06489834a2467d0c06d8acaafb3f2b325466c26e8c38c7fcdd86610e991feacece7a9d75b04a4d16b5ffde8be84e3
b9250a00d56c1633a53839f73c444b2dc3a7a82766deeda9ce5999a0d4001e3fae310050592751b2548b2439d3314a2b67f44ccae9f56a322c04869474cd74e3c52fe8e615170c4a543b60a8db759795aed2143bcb19273889145ad801838686b8b8d34b3c23b61bce571628de05e9d5ebc3174171e55035389d8cc1b0a509
3b31f730ef6f0fe6c95eb4c44f905fde0c99bf929dface79d0e063b58242a50638c3b1b199531f687e5509f987587cfa2324eace7946e65cdaa11fc2d1d4d7ab58f8d1045704849b631a4dc50cab695de7ae697b7581c271ac3a8d0f09e15fcb4f66d5eed1786b78cda9839a94d7e53e6ffaf913eb4c86f7ed7d32755820a2
425498e545eff3b575651cd1e31d58fb0732ba730fb75716005ed18a49ad9e548d61d2ffc446f2a6c24ad4622fff4dae53a0e6d9ca1212e719b9c409c9b36d3ddacbe1086b19310c5422b1e13572740c5011e1fb7dcf86a56804d5f3e132cc4d0f5acb1f9f338ccd9f689f2295da33f91f3ae9fc9ca6f1aafe4ca50a153403
33bfbe65ef909037457eaa2c0a801768d2242f4530fa832cd9005584890cf48fd8e00faf7099dedb7d11fb0d68c51ba6a25a8e51400924f2bd4ac79f3c3dcb39ac8405d230c678840f034a8bac7c5a2fa2d21b9ac6b2c3ccef29d681a0aea5b0fef1b7d629b0fb5be072a8d8fdd09801ca39d673aa7606183ab3dbd6f2322c
d23e1b299e37c59704359d4b8eea9683cbd3196f0e10a4f1ff6c4721eecf0979a9769c52be11cfabfa1904586542595aafe5a75297abc0fdaa15dea3fc9378238826a7e8c0e253e24f49e66aaa2626e837a3d4e6d0744785f89c88956b1f0c51a2d4335e3eadcf0a0aed3f6f18d7cba3c9e79ea28701332a9791873c19b9bc
d66b2b7ecb7cc886068d5f6d185735c4df8745c63cfac513c5291d76695bb2b7ce23f0d96c66e9cf11e1c1cb0ce66bd54f44003f7c7b66213043e55393dd23a8e022453c793458fe1b8212b6711773916b02860585bb2a8b41a0036d42e6f21dd89880a70cd0495cfcc6eb9dca4b99ee55a1313a9efb24fa3242bc710965e5
fb7a0ad28d7ca427339ee783e5047a798f5f127f172db9ca6c27b97c02512f65e0a9acc1fcf0ebc8a5374085ada185e3b3fec97cea54d91793fa247ece36ad2634c64ac1f859dce7488fe9e472349014736feedecce5975e2f7ef795858a64d1bb2fb448d9aa107002f511f9057e91e31807b37530b94b0c1b506dd01736c8
bac1e22f55e33eade8ffc53a28b009b762dc921062907c2ee607d82387b6ce1d8fdd716e349f08677419f5948f966456e5c38e6f228bbc33fa10fa59c43c78ffa91f268cc1f085cc7d6bc69e7c9980bc287d0f7ed5c660ca67eaa1e9ec1c7728e8ad619bde371a7920060cac7b62b7ebd425f6f4aaa8f121ec87608503b914
2187b24bbe2f36f1cc810492406b4c5948fa5ddef952b7b1ae58012df9f2dfbf5d7be2dfcfc3e959a68ceec254975e4f5ba68dbd37e770f9ede1c4456126d676ecda410320c7cf5ef9168ba5bbac6e642ee583f1dfe190a4af8879062f6fbe3874a95bffcc37011352ffa2b058735394152b0e83d366c320a07a6fa9175f6a
548b21ffd80fa55200067df0cb8ccf70b8dfa5ca711e81f75cd32ef6e8deea66d4367cb0b9f6637799823d817508f3268f7b01367debfe76ae0384ef990b71d6731bfe67754d2a6ad04deed8ce8d7dbeb4f2d5c9b6d06115fde1fb383c136aaeaca59811495029de136e4eb30e051b6fd3faecd6bf40bc5277fec3bdf90511
e92a35af6212fcf13c2d477eac74426e3d50aea49ceb1f9ca7ee3331da285e28d35be83defffbf6de7cef5b25afe973153b1d600029ab6cfed7303c0c9a416978f580cf6a2cb044e2a3e1674e3b82b0b18f84d4353ea31f70003c7b640ad2572178453e6f67dcbdcb1251a6afdf506fbad4838bbac3175ffdd011d7180346a
67904ab44e47306fcff2ff6a81ed7feb4ba7420f227735ea2a01b34fcf51efbb16f087d83a8e17b0cd8b2e91384187eefe74f5f12b77e9d881151a50f9b69b9ed216a8afafd14665659f460f1347da95857c0421a8eabe1fcee86394b76a9d1107bc158267fcba2ef696b888bdb072f12ff56b69a63a20ff95ee2e4275122d
c0e256ded46c3ef95005f59b5cc441d4cfa36a457131e4ca929795ecc75405186d3738f9828a36e9d8bf4b890c7c214ca50b6b933a9e1f32e0ad72f7608b861fc55d0effe6bf1b472c67957f5eb75f8d3ddb2cce3f8968a99f65e30d6cca82b80b2ad2144f2b22cfc498b9a169752add2c27638f321f984118145ccf550389
64caef60ba54cc9ef86e21be136e056f50121567c1d741759dd97664e60fe604aa6e5098f4f2eb527617f4675bf62f5cbc0a938401960274c0ab1f9201ec95995b9a00f7d0efa3f5bbe450dfccc850adc5a168477ca0b6d814152cd2e60b82f35a6f9c7d661d4537194a68277dd752c4ff7dd69f35b7afd32222bcaea5c0f3
e553690568aa722575780be32cca25fdaa227faefd8e5ce4ef86ce11126e9b7efab2315eab2051a3932f40abf255f470af2da2c2003e8e143a2be9942152d337c58c393b4cef48d48d04754a569659f57701166da018c599226a0bee7f5dfe210b4f7607c356aa39ff055da1786bdfe997f2f80b554784295cf250ffe30801
66a5779c14bf1b6dd20244c8051e9c3242ab6182a62c28c367fd3e25ab0f065989fe7933aeb0c02fca683809b3e33d293ffe434ad0dd193d0efb29a22d214799ed0b65af0b0ad6ef79f02d6787bc5f386e45f383a0dcc1db14da4aec314a7bf130990fba952bfad1b6ebf6cdde8039cddc20e70178f39dfae46dc333d88eea
290a9e5459adfe0d74a43762aa0656d1100493cfb32f4da32aff388f5910b9726ea964c5668c72faf1eaca7bddaf496282778f0dfde8f335a2708d04c905bf81f11158163d773c2ae9eb07f761e9005bd5e86514887a0bae90fb37bd44c61494f9e52aa1c1d82bb2842b23d98238956216043782a3e7c60c330fcaaf1644cf
8c37ea2eacdac564822bc2db960193c73192c2cf13a4475438d1acb14021c1f17687adb43ff9ecf5d896a4f5c0d03acbce8344748f0ab4c4438aeff8b33cff7071d4e64886480e7335fa0723a8258b4b9d1e998ac7815d87e9914c92ba29406edf4328578e1cc9dd9c1d1a3873767b6a57dc1c3591262ab502f4364601e46c
5462dc92675c74d0417d2128e7f7b5e81a145b3740d5664de236b31982aa188fe8b3dd92601df98f44cc4fd6fcf0bf3b79be979e9db8500a80f47ba4e997e3d522e88d21f8b0ccea2bd26da4903fc212b7e6a4496ab5f43eb9b99439b2d1f3a2197e97edf21284d07bdd79273435994f940089069ec5793091828085bbee9d
c94ff9deaafcf851c1bfe8a13dbaa844398f418697844256c889619ce96ff2354bc437d3c34d7ad2128c0266ce396e07297a0cc43a9e00c49abd436424bc9b7291a14df8ce5d522278400b3b169a8e48a62293a3fd374380d18a33f6738bd046f976efa64182dcb399a3bc08c6dbb342df070b5c9d0e3a400b8a016cd419fe
cdb47f735f0198993b95813644e4a599096f48e60b46bec93ec09d9b9223a6152adea2d12e7e20b8d705aae5f1f005b72f65c72bb7ec363a8717fe4e2d0aa57088bd23012286f909208824edfed263a4c30f590ea0d5d9d2fc740aac7bd79d8257ff6f13dce3d27a8699f0918c71d12d56479527f64a0a05f2ff6e8a4e8941
543a6edefcbe3d1924a5c49159239b05bd831d5dd8d3ef8829f73f1b6b685332e761d7463b0539094f0c7387a6320645ad2129b5b1fc767db345e8baf62587a82364215cf005ed78c02478a252071d476c0a5f05a99b960be7418a0ff7ac7310cca1bf71b83e77eba12b5bd32886686071c4db398e87a341730daaeadb8297
538e7d662eee99606d7ab0da8520b001dd19016dcfc9d3c527a2c646f6d61764341a0738e6c0936d69f6fc087c625c8cdb4b95ba59bd89cd650d073114526bd0962482a08a1edbd5cb199637ede2296243f753427b9427c2096145c3a8c5aef651bd6031c246e17dc7bd5a0047262a370b778557cfe877560f4f589872743f
032a13ccf839ecc49911fa77b4eee8cecca374e618ee5cf0292f38a81cb8e39f13254823672a2c4efd0406238af85afcaea60adbf6304be5479d5bcb318c14681693bd2b823609da40089735164a8e8dd37635f0d3c66a06a831d016b9a4c4493d06ba2b64882e2a31246b91098abb64b11b67969d8bf317e7ba439056e030
1f36a1e38bcf6d3fc6cf21b05699b0de7096347dac285bed8a21f17245b9c8f637754547db4454de6480acfeb958306c0124f310f2450cccb4e50510e5d2d1f56d22afa76950ccad3241a19339341e3cfabfb7000ea8a615a1d2bbe1008c2a7f3a780a3c286ecdc42f111c04ea31503372ae59478473ead49590454eb5cf51
d51ff9c4f0a39ddc03fa69c727d4ec7678a892fbfc967904d5ecc5b9fa166a38623a85200d41907a68e9dd0060f29683b0e15848eb7c7bb54479b355f198aced1426d81f96b6fa5564a2d9043b5f5e197ad7a2bda91089c250bbc0da325a2f6490a098fe57d1337ba526c98875e11f37d278b5810172c23b3a3d8c3e7b0fe1
79052c5c30031b7c40edfcf6a9c0bfa98e25b33a1270121ef8063eaa91c8a472b9f254cf01465b0b06d3d3e2028be6d0e877339cddb7c93cc3cc75dc14e75e5f1422546f01975bf87b82b7b5e10e3f8cfed8f4a2c707cab0e06b5931c21474c12e0e576a4238ef280c2d4daef300b6381b625c311e347058b87cb79e34a2ee
54d5529a0f703e691d8d751b5ed7d3fad699f0dab319e8ac5614d792280b0ee31ed23662e5544a6002dd3fe7376577c6e9aa887c917001d24e06261fce89d8d0cbf56f621c2a1c8240c889ed1fdb45ea246620344d83c5b956f2a01f51597b20d7fcc9adff1de1c420f7b7ce06dfaf411f01c3c0449c6b59ebadc61b28c732
aff91bd59eee61ec9662904363d0538d280eae9f32b57f1ba3e79a9ce7be392c11498e1c4ac842738f6314490d3960c24b3895f727c5f354acb59c0d67762dbba226e7e19b86d728e3aa7bce4609d30717c4daaa93019efe55415cab2f4b571361c873461e6b68d2ea88234106dcb2eb5f8e6aa3b58e893af1bfe760fe62e0
e41fb42f8665e50f359378562fe00fa38acdf226f451ca8f8712e306a9154212818065df13eab0f144c417ea51f624c0526e17e22898e2956cef11979c107c4112a3eed5cd9efffb89f8e64b477228e79bee01aaa0e6a9a2f81b5400a19341f3c51f63cb457b9f135276db37996fdaf747263f71b1353a2d74657269b6a5ab
34b676e41804fef853c25418c163ad220de84be9598da206d3e9c44d0df1d5b18940444c7e656750778359545f3d4cc08eb6ed02786704421af1d02bfb9be8b7487361954d04c35ba375242a3e550b00dbef02d6066a0d16d543aa658b9f68d5bd71709ec3de556a9754ebcc7ec1ecc2395bb70bb60be7f9d01db0eda3c887
15822915d3552c9a4a9754968adc94f881407cb05997a32a3b25df6554913b09b48f14d56457ad763875a25417822056be3cb6dd8482803ec7161fa3e39331399ec4783f3d8dbc78cf8a4950f2003f27f275d733811f5743ae85a56b1e4a7cbfd8e36e42c8910c940230d39efcf7469fe032a201aa9aab8581484507a96b8b
aff5d83107d373b28b53b14a0666c22ec8286c3423068f147dadae9f9ada45f4f8d49add6833a8ee9f122ca3d351b4c4bc97989134bc9d9b4981864fc7c07d41d7d159f9939946ed77bb3b8fc58daee90b6d18be0d15d2e2e901ce86e11709d5546299ead66d6f0902907fdee16b8675fcf29c8c518b713ccb7755614a14d4
08315192b94971f50f8aa48793579e07fa273a9eff872b1bd9232d994727253226c2f50f2d61da9e616537bf50abc9da17c197c8fa05d39eb756a240129bba71f4c16146e7094cfe1fd86ec46fd890d2cdf5a272d9f93fbd2f963180ef06d4abbfcf79c65a67381da2122a9632a80a0a34bdf19d9014d985757feab9889bf5
0b6408fd557ab40ecd000513bd860fec69369cf576f1cdfd67f0cdd8f749c26b2a0fb0463650c1568089147d2aff26282ea6726892a1b7b238914bc9ec4e386d29eecfce20ff094219e313b3601ade556fc7708bb26a655a1c0e0c76656222c48313bf50349db5df98210147d1474e5eef1beeb06081e898fa973a76392d7d
4b6aa2e28ca31f22b713ac85ebd76858e2be2a53267c15fe788437bc008e175ae115641a1a69c99591fb7cbdc1b6299ee767008635b332f9a62052e90c9adc53c58b5847e681e5c12c594b928c764e12eb67bb026e14850b0e15e8cdd2018dfdc6f5b29edfbc61e2a97bb948f13f0feae02d8eac9a4d9eff357386bccc2526
ac08e46ff9931af931c51b17fa2283a7ef7cb3a371ca08bf9d8918d081824d116833ef1904182712cb81977f649c4c866a3fb38b8793feb4517b857d1af7d08bb560df795670b4f51af1df3dd4371876bae51a5692c3240d668031914ec04c91b9d0f9d1e7f0e29ac7719b1a3805272d97c3fa7a43c13667a14f115561955a
800f59f53d281eb90ada1be5772c704a7987a124950882a6498d077befcdff7bed5a5df412b4c0e6cd93f35a48c46f9db065100734f0247e5410c116eb05507fca8353d1b88211cbd05b8a734bce008658ccb603bbdd166da90efedd8a5aedec63ccac2af939c03d4356116d21ffc3f11c14efb697578de21b166490879cd1
10542b8dba1c8d49340e4349b8f01e729edeb04c4d0c5c3eac0e900976978fe2e65c4704e5def49c40160b4a32ca188866071b74c0003f22fcfa2a26425852d3fee54cbbcb80e0570e15aa60bc0887e33b6ba22b169a5d578fb33dbb4e0bd811e5ab98337f46ac80c4df782f82edcef0c4fc6786dc0112a495b2757b8b24fd
b4eb83b4c2031fdc37ee65d4afa54c5e58749549c70485309fe787be964d5641fae3a01ae0b046c624416c30ef6a6e0b13669a3c3f83ae5f715d7818cd12777e106177748559c92b7baf2ada66f72979d794984e068bf99f5593a9aae96dd470d50ce0df9cc62ac4117c76ca0f0563296f57f520b081d179dcc2a4b40ade71
218c317a75e49f5e4b9877a2c8cbc796b00f64f215686215bb1eb3f98d11f0e10e090f09929d66767bc90989506e837dcb76a292a02506aae99441d2f56e10805e1e1cc50cb858e69244dcbdd452d17cd22d746c13e768c7f6d9b052db4ce1ead8d3db519d0cde75b00403133df437570c04a5856091b6a709d6c2a94715e3
64a6822fa78f3c255016c32a0f274bb3d35311c32843acad50175755e27cfb63d2262e63af9479d0a673be429170bc1f7f514d0545bc4e4d6a2b7b9a01a16f5f66cc29da6690960258a52c03e7a8ed511bcd78f9b4ceb9139f699bc1c331076ea32facb78583283ea095dee9a7f7ad51f392d0ecf18131e0a248934fea8340
ea71250d8c61c1f7d204b6d1a513292ac88f277c176d757ff8be1cc76206d229b9965b88047a1971bfdddf2401169856a0181185a3bc6c0dac4714960808ffc504290a2b06e1ea8189b6a0130c13c735f4bfe8ec71b843f37c1b85fc1911de5fc54380bb3df78f22b86053946296ed16671fc99a31b7786f0e3307e6fe49e2
ad27f23f8709cab3a3af267fdbe26406ca0217f1d302d1c877211b4ca55fee95ec66a9b37cae9253b4b2adad7398f724a1ca6e0107ec0ee05de28135a703ac3efc811b0601d4d08093b22a135fed56666a0652b25000ba8382309e6eedd35ffd33577568b5bb43583540dff2f3b73c64495b9584bafff3c61d71e0a48589d5
00e544d65d0aa816c842d8838b6068a0cbd35418c015480f887b879254f2a024c50a84c0c97a04e5794fd8d298bf209c006ad27ce45877d0968b70c17a180bf843b3c582280c9da6817b115fa432429524aa1bd7805d8d42dfa57e23198328521ea52542af7be19c559bd8577f04372e6e1f9aad7e77bb6e1cd820588f4500
3bc48ba9ffd7100bf4652e1ec9fc077d8330db779271ef45cece6f5bbb8859c03e688385e8e882bb49290eb891dc04220cc4aabb536ed91e0d2a2ac46084813e978b278b498fc69421a6502de0897b68a0ab94b9b5dee2a677ff761bb04b36a4f1fa4434df6d1752181345ab0cce27ea35402fb763f3e26aac3299648a1ac4
7d7fc0c4e41842fb5636baa4a9b101d8d99c398615166dcf8582f60e8be9895185b8017be2c075515d36eaac29b268c381ee38d4bbd87f45d10dbdc354e5e79710f45acef4f7cbe859f52a51ff5d76fd2277a4dc69ca8b0fa1e3495cf961d2e6b0cfa0ed74ccd82efe3d6e46f44da6f14b4d07ef64076b51ad1059111a8c21
a872216f8baf02eaf29971dc1a7ee21f02ad3fbecfff7df4ad45082722130dc95a9bd8abfbf035135b4d51d2057062bda61342b7089bafb5e485ac5d50b3163f858b17ae68905ab26d91c9c9e6b099349574ed5f71ffe51238ace76d8b93c5a8507a310e77bf43033e5527cd171b22dd13ade205550eeb3fd0099efe372357
8f65aad50b69f1f26e187d6e64dfc422490fd06446267e53d8d06f24d58c0c582feedb61b2735659ed7ec4aa685d40cbf18657eef01322959a30d422f9291c23153d65ff7a98c2329e9c80dd96b65e1bc556bee9eeb11e2918bea2f540ab265cb64278e24d1d4e0772c3840f263d1190dff4394ab286b986b547e4a46a1875
d3ce997f7e8cca250268cb86ebb453529c0a0c59c711e541e7ee07e35be46f5a4a7612b55bfebbd891e24e4edce68b877046236cf3df82c0d8ae8a7d6dee0f2f5a6a587e9357f34791f62f64098ac61f606a7bc45513131e34b56450fa2ad30837ce5e82534e08eabfdcdbbc9cebf5c60cafc54edda31a781510e2c47f4fdb
26815b724d45803cc316a337e5d26620cd13759fcf8601f9e6c0ed1e420839cd8a0eac47bcad1076b1f0c4b4224b8bbc400d42611043cfe2e559e6a7fde4b3ad777bc261ae557b5ff171d32535252274adcd64defabf3f48f2716ff70e200b56bff616103a1fe58f07b4164246e1fadb7b7984853471a589b7878a42d23136
beafdf1dfd946ec915abacf28a80194641f3a682f9171ae03fbc3d7974925d5bc335bae9d1cc5a320c525333d485d888b50061e7d9a8fd3ec33e19bfbbcf143f18c9f7a1c1e88efbd03b41d0e108faf5e7d5945ccb9ef64e15246d7a1a2dba8594c02c57c2ed5b50034cf893942d756aae672fd44cd8021c299fa7ac9ef88b
8ac7695a3881e95d53d2d2108956b69377f808f4e1eccfe3d4104af7956eaf9cbb18f0389f9371206870830f774f94e2d3006d399e2f479c6080ce626ebfa1cdf85b7b1ce1d3526d92f09815334da8effcda3f838c433b04b38eebc3dc93d940ac076ff24bd774f228f8bb72f950ebc8e55232b99bc8b9d85528a71dc1cd0b
c5eba7cb7b60c6b5ac54dedef3a0dc0b542477a3d519857043268c3f7762b55680aa6bcb5829a4315d0d1665372da4c496f53b32ccbe17e04a53722e0a35ff2cfbc7d69fb1885d15bd298b587d0e90a678997105ed7e41be93b05d0b5f7fb2fd9623491a76e68e518d7b536ffadc50571eb363039bc518d8308d9be642b396
a1286a50abbb7eb598890af30e4c8e9a10735a5f779efece91215952af2454966e9514bca4d677f88984e88cb17f4622214a7ff0302b486fdf2e505219224955d4201007050f4e531e82acb7a641577c5b2eeb3f51b064979cb6ac9c3a562ff56b5771f60a2739972f9d99347f9ff259cdb1bd2763cc62bda24b575d65b390
45a0b754e97b873d696fc3dc19e0a62469a97a0e77bdc3b669ee58a8cff65f18c0fc2e4b7aca6bc1b73799c92c703716fd7dc626da4293189085b732d55211a6db9a9b9450f4f1dd7065ca2cddfe92a4de927895f5b71dd7d9a2c9ef33d7b964d6b8c02b203b3d7be541bc966de7c8083c264775fb2ed8504f41fb66732e86
c1321470942774a2ceace18b57338c9c5aac0d386ef27991d442e3c583e9224c7b758477c97ca63905ed32c34e729db86df10f67e6aba3c1db05c2571966daf915900283162bf84af2757a24a418a22f54730a0e90e71aee9c70b2c4f5b124a06a99fddd7e204def97137088b0d510c495a95b47b654d2f650ed9718013933
642ea86ff3d3b58b82756e82b1b5be77cabdde7f4ec4f49f1100aeb67661ededfd3ab1153c99ed549ba11d59cc59a85122ec0d0573a1acc62f8992605277fb11635692af761f73b8efe971a299ff3a54be203a82d1c3712abd494c88025d599119e44359396783c07fe75d6229e744029725c11ea46a895a9778308ace0e4b
9dc048e744cda2ec21420d01a9436a157de91414d3c957cf4d3ef73d16347ac008b14f25a8794b8e457a31c0d040aa70f26bfd6c9cb86c64db5dbca9fc5c1517dde641c9b0246ee9a7815d806a0917739604533445a484ba5563856c791051d390781267ac55bcad9a4e09a45b4ca51679b2a99974dc2e1b783dde29451d9e
837bc7fa069150aad313450f76a26f0b32753958a368be5d84a886e684d5d71374ccd9623e886678586f54a15d95a32a5573aa9568605167cad65f9c4e3b01d25130fbe9521a0711113b06b12fefaf92032b2f1bb69960af5d7457658436e0865fdc1f3c686e1d7c53bfc9d7c2b1690ace3412756803644c9c806d29e1da42
88461b545cea6563be051d32e438d39f3ff2d2f209fd3a0bd02e6f8e4e3cb32ad22deb169dbc666694d77c195c7889cbc6eac675d2cfbd3657a62a1d5aa5b1913af5ff0396fed52b5b86766608339e0b4e1e7a0a01dd7d083d770522e013c419d08fa325572fd4e7227160c6c2fc87634570d7bd0d079a2125a58b1f2e0e90
e332c21962d76fd084548ecf40bd7e7c4db26a929a31c29b12bd474da6ac1ba70af90bc93b2a8dac353d6d81eaa285f727c82f2544dae8889ac3ccc7f1ce1cb666701d814e257b8927bfce937d9c45dad34eddfd89ee3263c4a3304f62ff41997fb426fe670ee38cc79da21a16b801971c50e73ca0f7bce12abc6e349ad654
b128954499d76bb4d7cc043b9ebe4505b4209fffebcb945e1fd2dac6bdeb478ec89170b3cc7ec9318ea4291b429c66d4360c58b82c4a8fdbfc369192b773b4b013f60130dcea55747b86ce411e5b31c119f407fc35f380a897ecdc75b9d39b7cb4fb3bc0d6414e7f32a412bffe650ae397eec52cf0cfb10a6d231be26cd554
92a91c2e5472eb5b8d5d24ffa41dd8fe4ed3541c5eba20dde2a5caebb0c19d1ce1dbd519af33cceb9f4ece6a61a739d7a6684819a928ee6776e816aadd28f83a07eb8afd9c5002ded938f8fcfce2e47a926d07f8cf4fa707c6950ace19a0228e95dd214e3e2dbd51601289e8965c5c8840625a7d9decb98636aecf0272bce8
a1c9bbdf54a897296105f221da80676df5b5daf04f71df5a05ea14bb1dd9e0034f7d47400cef18f78b9d9d35ad9a637eb9bf3d97c23bc6cf0b5c733b869e05f0c6c0f01a56626bd79d5ae0e1af74d5aad35fa6a6a5dd70f23c69978f2b06694cc09f785e546abb5411e7d57c8d1529a9a786f9e7e384cc01602c4a2c45f782
d00f217d071c66d5e8d3c0268bf71d1320064a1a7f1bf09b356d2f3e9d0b1086912937b4db494c7c08941caf28b1805a2002998d28419145f99b15b4295c8be8d1b594947a02417d4a54a1b3e1e0f088cfb8571d56162eee56af69780828df1747f9e8d9228f13d22c8beb2e4d1b275f8e1417c0998bb706ec5baebd144af5
6cf6ea3b9859975e7beb0bb488d5b5d6b1b3cd6238fdd3bdbe9a23100bb690f7c8ed4707853de0f5926b9d5eda7f63969157f3049f766dee3518dc72061b311cd39e78bb782875d4e77908083f0bd13fc2c0efb419321b41d1a5d42dae3d0538a3efbabd2a3634b6af435275c0b07ba6708aa838075036ae5542a0e2ac923d
4d50c2ba01506cb995823ccf657ae1fcee9d4bf4ff35a572f09eb8ca3e554ba14ec248099c01c0ca3c2d0dd72ff872d329e02f53046e96cf803aec4e23e344d73d260811a4ceafca8550e98b06a44c8e9652954c795622a1bd097f32265b4a24db2098be1a2720717ee67174b7c5f0f484dd6f76ae13b86662d12850cafe92
980b550a176e52f2582c96f1a24b398c89cb32223e9e2732c51033748c2039e86d0eeb3558449cd0a57512cc1ffd7547c7d89bd7e56235724fd03834b9bf290a879fc68a48c30a5ca4db4d90b62ac40366574a49ae60505bf84a19b57e76741c8c65b11b939cb20a36b501582074f1491b414b64e58beca93f235971d0a653
cf0b7102575b47cdd92b6b570d9a1603b12beb59caa7c6b9c211bd1d9b64f4efa7e85013788c202c8d8c06d889d6115358bdab90aa0f50464b342a6a5f5980a8aea51562f24c73a77cb62fa2eba3cd5968dd9862badd504692eed2e6898c24db8ccd1f63a0cae6fa4d1d3f36f29227f1b70837e9fa4e89f5010aa0e57e1106
0d7589971481af5817394667360ab608d2798dfd25f0af69ef45cf94cdd36f1eb936bb57b18988574a772c888b987be1c7d01781dc296b451873a195d5be421885ec2d7e38b0d828f0d9f14071bd58911bd9bd44f2a2a2859dd1dfb9de0635fe3a38325b7602d1ac8fa6e1101928cd97428dacacf1d120eb7f2b63cad71854
db660a2dc64bdee3576d541aac80421c39c34a4dcb26c5e25a607e8b8ae66909570e87a4e523e1c5180586c5dfa1934426b0aea25061c7c1c1b3c2db2c8c9adb89a5e6c8f73ef5a158a02c11bb561895c7a7d53745dc9ecceda9b2faeb2ecc7633308b6373876315f3418ea8ea0f53b7c3e7bb8d70410dd66197d2614f6742
f628e9121566af420e1c96b575d39acd96550669fdded160a2b5ed2e617ed514657a49cf0776d1f45cc77a6db636a0c3361680e6ea006bffd74ed5f26bd8381436025e396aec88d42f240d77dba6830bae6e167bd1c86390f498b115337821a39c7880c808523d7efd4fb025b8dd2789780240b135aae9429ff6a255bc53d5
205a0bb6ec42a977839fa79f17d71b876bb2bd6662a7ec4354cb439c609406cc0a5c90650aa85a4f0a19f5e309d2f9b5dcc776c5129a1c35df11c84de1147b54bd9db6dbab22cfe33ecee9a815e1cc37a963277178993bff13608067ddb67d798ee6ef00f59b50d8f0d01cb2053f0d1a38081aa44220097aef1a7f3d0cad32
194c45ef28ea52963a9d28cf35669025404bfe677bd91b033284fd09b4012ee504407aeb22caca7847b3ecc6512fee9e338c0c4e899ac0b27e1a22e6f0e24cc1dd67061d5e6a95cab3cd7c4477e360a83a518ee92010511ed12bd90cfadbdb009618b360748d39ec1f0034149152aca7f6b6574ce56bf9a45bf0fc6853a9dc
e41a2ba0d942abc8c8994ee16c1718664121ab8602c66908b96ec586ad2b638b783a465a1fb15a58d41431da7e249827dcb0f3486d8bdaee691027d0e33e3ce3027cd00d85c22db5807ed114837055b4372fa63852bea9bb0d343305138c06f28479cd098111e045b3fa0a7ff3493d97e17e432137cf05e0b7677440f91066
26c30224f8fae4a9655c28c42f732c560a2f8c88cfaf5accf40760f4e65c23161771bc836c0432858d8aa0a775af91506346761506d57e7b01c5b9a5e302133bb6fd69cd201fcff8b42c0324f44d3c98103d6ac65b20223ae0af3ef10434664b2da4d96a7893a55e88512e30179fefab481651182618dc143c84f2e0597416
2eb2f04acb98e57b363bf96d7461867d8b367900cf357a6c2979b2a87afb6cd0207b1b7ed9ca049e0fa8ce0eedfe46bf33b987f3d04c0358f98e3da53dd551bd092fa94099bc2d7eab1a8925708d6e95dab4a5abcf969687f2d5501b6dda748f732c976767f980ec47550425b3ec349b220355baa227fbc817ac887462b64b
073ed7ca973cf5afce9b54c1d5be6fc7ce106ca95b8c4a2e629d4807b47be7e4472bdb4366b181d099f6f2f222bde25bf8d9a4e4e0573a0c0eb08bbe524d2ca091658821ef5cce68cac8c744a2bf9571de853bee8711f9ce2847d7359f5fc726b9fb671806efac0603c0fe4d75753ca2b498814eb46794affadfa884f33997
cd5fc0ab15e1b7e4c0843eec17ec835069279672c7d4eee24873ccfc4a732fdf56c56704c9c4a12779a401543e717f623fe42f74e8b2dd173b53a36400cf12b5169dd91e686352928205384ed086d1e6b6e905bb30d8a2e0394f8e14f372be0b58f5348494b0c45c7958614da00db83c5b96c42d72f1943214c86603c467fa
b39dcff50fc8f7eca5bb067dd42b1002d8ea872da82129987a3639fa4313df2914bbd9f09ce6d9e6af6ead35c05c5fb49f06d93f1f8f94d8e78d65dd51bbce40bc93a0a24ea629c9766b5580b84572458ee95773aed760b757c52bbbbfa8f20e624c098a206a530f8272cd4773586dd6e43c511066fb61627616c9721f7e3d
a010c6554af1123adb9bddd9e5b1da92e9a0b47aae63421ed5af30dc2bbdd122854ea3df6a304fcc9cb4bf1b203d822a168fd92989d2945958f14173cf4634c4adf5742641987bfb798c7f00df6e4cfe0bbdb5c99f8529afd4474efbaf0bcdb3ac6dfd697c2e85b4aa519d796ed3a91af7dedc16c174e74ecb057f0a4a17e4
c241c280edd8955cbf608e06b2baac0c097eb3381230b90af58bbcf7208dabd383d0b311142abf5231f2a1be8b62b2d5be12cca3514466391b99ad5e45b2fcb7acbd95f2948a487a7c47c27284164a3ff2ce1260e79ea67d4bcc75996c4319534e3ab1d2d60d232bf9965a2d49aecb6eeb3a685f8f1a6d1152fc316383e4d3
fbfb08b8dbeb0ebac8abadee63f2bde810a57031a2bad74b1fd75c9b59273a549ad43742e3f07873913855374ea66dbeb45c4479b2810c72c87902e1733575c8f2af9575e77c0c840a9ab874e3ab0367b7505bb7d0f642c2850d16e5e6001a2621d6c1661ff9abcecca77557a9920bd3d56f69df9fe6af8e59bf4874f39799
6c43cba872e353840609b63409ae298fe8a48ca0d457eb5c5d86739d54cc787466ba5f636c00f5ecfdcb0ce7b61bb1a46e8615900a35b2e6da666fba78f4c4fd0320dc727c186ed9338a41cb0c8c320dcf89d39215e80dda016f48d16ba4a385cbc77d6d1a05b3350c59fb2b10601dcc936cc522478b916b00bb1fca0e2e9e
7f385eeb475eaa7733959e96d9c43f32c7c448fd8241b2b4e08ee74d8a75b200f8c3743bf229487ed291dc892979e5b6c3f9cdc2c71eeec168974bda3c3ccac6c6e2997c7179d67031d72b4d7d84dca5939256838b6518a10db7245bc24b50a3e3b76db655248c769b085f1a8afbb2ecb1376335837a633a8acb70114c29cd
7901cdf8f46a620334d9bd35b9d06a24aeb3d020f386071c14805d3f754b40651f85dd406b916dfffa65372d0b6317cf098963a77f47f660f6c2c0c83d7993bfe4de7146cb92df805f5743b43cc1d1cac7c977e07c950a27e4a0025b066a6b4933144a247f4b56c71570303c42aef6885f57e21068c826d3829cb97161016b
c509f3e94337982c2a224b62aec2ddeecd7578321ef5835de1b07adb19a4a74b61972644a8b6573a8a86f6c5c462ecc9d1494f2beb4f142df18edebb5ee44879f94143ef9257304504608d5c4da39dd74f7a1c266a090ac3b3e4bbf69afe7293b492710265069ec0e53f5c8c2984ecd9fdfa2f52d97020a35d27263ad660b1
852710fbfd27958a0c506e1068e1aa22c3a7a797d1e39ae0fcf476ab14c759d573986a5f51d3872147c56a8b2b7419f1fa1c1f15ee4380bfd6cc120e316064bdfc32817f910f620a37b59a5f466f43653ebe7a2be0e12cc8db15afba7abbe4d309b3db06c8288e5d630389f611e896af7e446cc4cbc5712642af4467924253
445e0d782de9c16739f51f09c37dce94eae87c864a1fbbd0c4bdad323b0a52ebc3f343cea26135f3d0e056b201d8c494772111cb1ce33a66e82780d1eb3b3a284134019fd0139307a8f596dabf04c6d8393b8406796bb99a505da3e6f9717a755a00612cbbdb5c595844a66e1c0ef3bf9c655e141b2c8ac65d92851c2837d1
10427100e551ee29d535c5c4a18df73a05519b9c574f33e1b8228a0955742da0da66c238f2ac1cad8f3c2d5ca6956aa8856d07e7ef6e29ce65f6b0826c81c466e06996abfcc26993131b693b17ff8c95b6463224d5a0ffe93ca4d3a4385f4bdb3ab55b5fbb130aecae8ff45980c64913ad1800160dc5df31313b8032bc2840
00866532928e5dbebe5a4693961d1d42e6d16a689828c59839ad81be29da2de514d28f946224114304084cc7f83f059f1a0474e05c9b79ab7e77261dae69d532f3ec86c211a19fe80bd66f9db9a999cc5aba262370b5ff90657f141a83f61da3191aa729132a20893748b212bca68be723682fb58efd2b82019987d8e46589
2e641d58a4d54c3bd20b2b5710b933edaea9d88c5728e65f4fc5220ad03868d4cd71e5f4b3a135e5140f47e1c36b8d3e05ea2d140aa86b86aa40f57f4fd3d646448a20a99ef4c1206f3fc648592da53f7ae2644c6dfd0b02d22cd31056a77174ec0d056ae988ef49589ce20f77a5faba252038817d24d9448444870d57bd55
3cc7ea80fc30351666a5566b96cb89632ca5e52ae2ee0690b39ac0c62b6957f9691e22fd3d5683b406a699b4a0b9e6a0a13e4f8cb5254a2b9fad1c8bffe353bec1af0092619d0409047cf99bc9fe4bfd7d998437ed3cf5e45caab47bfd53d68981653efdf85759bf97ec6c3078d1b5c630da87b4be16c783fede3227682a1b
804ad1399aa572b93512dea70d6259cbcff84669286ecb026f5356db6435e38351be97c53486fde0f6db03a6c64f9cf36019eaafa3c346b491133300a7d2876d7a468434fb99e02dbaa04414cfd9e1e2950987a0f7c859951173d4b3338ee70ff5aa605f8b0007d3c16f16adc47ed7fac89b635bbc2e9e4f86a757ea3fc621
c520b7536f534d4b6e306dfdc57394ff933e0202992faf48ca7742fc5cf56e2b5bb6149fd2d5883243b068d6a420fb0576ced52e2b75adc8a48ed834f3a69270c5dedb38ef67f92e938c26a90c7aa562d6f659bc73f4f734ee22a197e36af546a12a2013956a217d5b44e3e5eaa0dc7f9c8c68c9d7faa90e7a1af8b62aeca5
75ba4f06563baf29e0dc62d73cb6529296be837ab2b1610f4eee692dfc6970b915c301aa5ec9bb8626112fa0f73a96187d823e0b8fd6241e873e5179cea9f8032c5a7583df84d73fbdcb3611be0dc5deaf2467ad13d1adf92f88292c958a55d7c38a39efaaf8e2098bf47ace5ca14c17884344f551f3477f56dc8376b848ce
c12f2098c290d5ff6ae4f92cc8074ac6c0090c661c758ec1a2a4dfaf59c0144145b6f7afcdaed8336c711114805955295eb7db22ca98b0c718ea21f8425e8d3b665027b449309b1bcfc616fbfcec63567bfa035b671951a433dfc074791b6b3930f27baf5a967e90b4e3db6034bbe6c4c6cd62ed8baa70a65ccfd9f297efa9
ceb6f6b036f5cc9953b000143c4b1e748e0d64bcfad95727edd9aaee1ff13c1a959479284f4b798c0225cb81b5a77b67e4ec06588404ab1251ef2415e975a379b05b8c830322adf86763552e7b737fb380dfd7b4b5a7a87ab99e7a43806bd278040b797edcc858ef0e9fd0d991875ff646d8d91b90f4473ad9f54da3c2b3d9
1435f9f4f2585286d13b233dd972d80b282c75dfd9e3eb1c388406fff45340be5485752f17de5bded44d9692d995355e0695fba5448e0948cbabe9022c2c0ab1b5e646816c49f4771a5f01879c32a0b8bc0dfe43a98e39d3a07890044228798cedbd88f7c6e322c0b1ae8c3807af648a6e99190d38f9a40dca8d7caa35d4dd
ddd3e0b0a691adec145b061b96bc4e0c5381f8972e41620d61b393ca750cb55a21cd9939f923270e6f85e56533527c84f8d1fd35712bdc21687767029f242d806540c6494059faaa246d31584a53e355d33aba04b2598e8cda5df17f0d7e70b68289eb40e7b06093280bbc314839171482fd5e6aa9798a0edf1a327401e2f4
3ae2b5ac3d7b0114ecf183b922625752fe53728584290630438119470cf52ca9f2806a50471107cfece341912e64953330bbdf1ee8e628a94e27662914f9593bf027b90648999e92bb02e0e3360c7d88daeab6211c8950e0736dbf2988b061afe835d2157a43228f520a6e150eed006475e1a1bd918411ed439fd6f26fcbd4
4807cab5c1d6aa8a2ce9ac6475ca068fd3b872b765845198d3aa755bd5b2c94657c556449a4687a69f25b30ba7f3bb91ba506f831c17ffc7226df2aa0b78910cd4e6de7b1904d0714e7e6a39137c186f23c4556673132966189dbc79dd080510454ecf32a593dd9d152368f2f497599a605a2639aea11c013566e4f33143da
0799a2f23622f7ddf4f880156f2cea68b75b29ba4d0f376a8a97caeecbede8576725a907d6d66fa50db7867b7052146dab8f56d139f41f907e82f5477b5df0932e4978eec0867213f801c56a6df50ce368ecba27654f6f264f004f30136f109810a8d7ecadb892231ce834a0afe2a54ef7fe525b092c72f06a97b281b8c820
71c236c021b529cc91a9a9fae5e8ad5d8a01096b9cefe2376d33b60997c33b758c55771820f9f42f54ac19a5a3d6e2ca8134fe36f2fd490cf8fc326b3f7b33b0fdf02ca7dafc69cd8964a6c02ce99b46657902e561d82fbff4a9071f51318a07495e0953e3e786e27d820a4def1e2b29981fd96dac4781d8df3377d79778b2
773d21b607e78ffba66a5a539ff0aa38a60cac89f5622aad8c688daf557a7d6c2ed1dfd9f92bead504460179e7afd0c4be28e84aaec068a3b1c2750e57982f0b3128226651c49033998a8cd2b5064f063c4253f4150280d8b05bb645cd26c17d01daceadca4efff6f7f5897a8d53baf843a34609f17b04b566ac735ce32b5f
39587d7fc4fb68f421b38fd84c86841c7d5ac8eb040cb3bb7e52fb6bc743007a9de65777130020e518fa58dbf849fbb8e6edda9b20155ced138646b4e675afb19d1e712940b5ac2df5ada544518236249e486e1d5b9c0525cb7a78ea1c71133ce47637d310f07d381aa72167d5fee00f6b86585602bdd7dd82576a24d6780e
215ee80ddd5df2281db001556e74c6a7ab759227e41e41b096bc7f0bd3748ce95baaf3a4817e5cbd670f6eaa02fd65365349cf7709164bceaf01e977f4450c5c016ea094ccf937ae4887513dfac4701927712344e5e4207f3d6190e5e2a0a33863ab324d0b156fa036ea31af776c6851b46b8cc8b13a82166706fa5dbe9d32
efe9d3be6ba31a92696d0a260d19770408ad6910a65828e2a291edb8b6d5cb3a442428dd7c483124a28ab579d685b1211497ac4d82afb5b2b586b97b7d79a1b4e052d21d3223ceb067a38bfec4a843e114e3e997ed114cf1c1df940b739e16d70cb00559bcff404be60c5df3819d0a13f8e246f8b031dc3a6c15d4bd35253b
3ed5a9e2281e021c504d45f2892e005c6a11885074715b68200eff40953d717fe4d3a2dc578fb5f444f46a96340dead562c6bff9b4622205855aa3cd76bad7b3396c226c97acadcf5d945f5639b9e35684553eb54d107e76d15902b28ed13e3a3450889aaa979838240ae14a7f97ae8b313ec9fd3f632a2c60eba6ec2007d9
8991970af0e96713ef3a012b1a90b89de9e575113dd585b048fa3e71c42fdda944328f62e108a4d26d148faf192e20aed318e9c8fcbeb70a513131689e75a144170efc950616828cf24831bd357fb1931f35069fa807742f0416b7aab0a745d4664508dab3a423f5a9025818516b26a6b7344d7018245e4816ad41904f0cd6
bd22c77e335cf7c1f3bc0984540c6d7d3e13eb114be13616683166a053bb2e4c54a8dbdd8e5af273dcc01e31fb11650fdea1f16b15eb334efb8ffd24c2503ae9b8a4f2f29b7f619648fbede61647a78976d540d9c8310926cc39730096c01953605946383b7310dcf4c0376edf37c12284fa0179afa7b29d2dbffc1c1996a7
c5d04f3aa4ba1aa0180953ccca9990168e0fd18d457d3eb9a1d0499aa5cb07d26e65c687155452874c81dbe0d737800f4f7d5ad6b61894068da37689c9062a937a6831e745ecbf91a2d0c89e6c85c01a9ed5cc095eb5f305c98e26942b55a3b12d72ce5de4f9901bac61cff2308cf53e50b637f39612c621bac1bcf83c0e6f
108812b4d2ce55c45e7042020577aacebc14d9912adb74ac2212f69a12a186850b7d17684ecc82152bd23945538d894418a88e971b271b5be4583990a3bdfaba9465d05fe66551dbeb18527f077a343427bbad0cd3c4003ad0bd7297696d82ffd40fd6f1d697e5b4a98ecb2681f9578311ac11b0f9a67aec41c3f7dbb06f73
990303c171a2617a36661d7d241d85e7eabd5a8f9a9b670e2cad307a749c1911fa8157e672123aab48b5c8f190c58a9e4c2a3482b72f68ecd40503fbb0fa9f486043465c102a0f423f4f21c0765bea9991e3eb8f686a7e001fd7e080d41cb3ed8e7e6bbe44e493fb24b68468eed9a9b0abbdd70a26c5b6e9337fdeb9b23980
6b2c8f356170bfca622229c7138a315681678854f70488ae6826ceb4cb82a6a3d9e3321b82603d7cbfe3680bfe83521218fb3ed098860afc06ea207f848311d2b2ac9fac666f65160c7e4200fa925e6243ade28bb3b85345b63ee53ff07f96a56fe0af0cde774b87f43c2cbbff6cd86554632cc7debe9024a0e442f2debd53
8dd044dfa5f0649c0427a80bfb747b8f7a141409a895ab9e14c1ee9685ffb5d9a7a77021e8bbc416e91a81d30988634feb7d8762259a618fd40f584f69b736ce978d263aefdc95e3942ad903fc5a97cc6a8c472a3990c43e36f6c76e72b0dadcc5b10ded06fecbecb99b5a875a704298218585f582c45ceb2aa7299fa56c2e
96f2e33f07b0bab1badb89a96be766a9806e822e631d8598f22b07f95ebf6015da86c7df6797e2624d68f2fe60a586d2d27ddbc8668fdf1278d5a1693cb28f441f6bf597b7a0fdfcbb861832cadc7ccd29e95eef803944107eccecb457db74adee209ef00c80235edcd2e39fb1a5a1e7d9100dcb7b9cabc4c36c51d2cfe7c4
187f69e5cb6954b902098eda7fee5a427c857689dd16e8a2afed49a8b55ec660ac1fea5f00ebd9d9e9bc811f06dcc60dbaca577c74bf11801ed666f36ec9416b7670c2435e610473dea932f3d250119c7d4b08883dcf802e4ec5c57baa9a826e1107228ee0486be7986d5780aa2d355f7fec8e8b4de59aa5dee34c632f3fec
8e5359ab556bf0e1ad390fe01a2fb4b4e9dc8b1e70b718f3c41685342ff3e71183e7ff218e49acd1c2dcd5eddc1aa1c6191a8adda86427be41ac88e72ad41f9048d182b51281514ae1dfc67a01b836a429825b6a6e094669067931490e72ffb42cc1783586fd69186bb560e4a037b5251ac04e8812bf9c69a151b8d3dc8fcc
5c39f046efcb1f0b3dd2c689dde5dfde45944581251bcc3a3e4abf4b30c618602bb20404a0e37b8e5b978031772ef6357dc61d2913595151c5d75889006fbb7d31ddb3480388fc50e7af7d532ad6b24600f58700045eca43d98c7a5207a0a8f5a04df3737143fdbd8b4d0bf5f8dde99a9f2f7dc5214d4b9b393e4a1af75b6b
49aa127e7871ee77afea50b9f4b2d5d932eb595ef52c4d0b3923c87f9c187b1c02ea1b2412e069c3c726c09ed3883ab493c987b2d3f3903a18ff118ab3a937ccc3fd09f7bb9a381791dc9d5f5832095fd03863292cc1f92b527af4ded5d7ea00a8bc1e91f0331da96d2219a1930c268b344cf7287d353651afd98e2e7f593a
19a0fb711c59112198c1c887caeaed9bc89bf60a9af455775e22dc9c1792838d61b80eb39329f906b1ffd62cf613c3b7885abe34118093c154ec1632466665f305d7e0b9236e2e8a4babe73ce76281dc149afc67a452e090087f0aa9dc8ac9d166c0f1847c3ce9bf2faf751a9b641d7272cfa35fd82f5450c4806a1c4870e5
4c4eb1732e7a049e78dbffd73944e986fdf02e5f6de28a314075c0a4950c7b0c7f008816564185fbe25bc01529c0a68c7f3422372ebd116687279c9a8d0e32cc5ba74f0ace19e0d1bffe14cae186d4a7354d1a72f3f9908b8572a3e0158d1830acf9dd1bf27c387758008c4b241327348d3a777f2af756484c518328958047
4a9d32af1cb145d80aec9f596628b23e459209d9c05110f1f810e71eb3583cd42ea16dc2f912750a4aa7733149e29728ea702f2660ab3590332480eb019ef9626905c54aa486e67074c173f39211219318cf14537c500a85a12cf3066656bc5a543afa852b80f72e0e797380559dc0f58906a7acf208563d2b505a8284b89a
18eed4559be99eeaf8469986b9192006081aca8642604ad0d9306803c4443c47c96bceb0fe3e9371a791957a04384c173b68a6eb279430be88c7459ad5cab91715bb46e28e1c1bd206de26b7beb384697711079c781679a834a9275b83a019dbe53d13da1372ff3ba6a68ef658e31f91444935a4633a7e6fb4cbd369454e7f
5051f961a7329e6e6fa064d2877cb40fdedd8fcb0da143d6cc6256d9ead2c46b70f9a3ebecb123fda928175f1b6733ab53f34b7cc06adc1d13f415ae5c267ec70ff89de48db8a4f5e74fd7504d21366bfd4c8cab9ccf100578cdf9188172e88bc8acf2eddc9764b5f8ca701d4a52c9b8fc1e5331b0e13a0809ed2888b03afc
58e2cc32a73217a845ba722f2856739edc8b251c4a0352211e4d8378a0000c9e3a5fc3edd289b4bac0a23673305cb18b68d7af8a2cbac14be39a8da15c784345d868a6d9565c3208c5ecd0311d1a0d4e97f1cb6c23e86bc6564738f342780457366942bc5d2a9d57ddb27f69eefcdc2a3e33cfd6313bbfed2c69d9821b0a09
e9eaffce62dbb5998db171527bf7d5cb3ce355a38e033b96d8129517ad205959f37db15f7775437379064366ce35b439cb72abd57717cc85d788277514f8a664e54c17e09aba5bdb2436e7a0b36c0f5498dca4d1400486e9ff73f089c87769c4f3322f3e7f359f1400d3b812fe89c49076cf9ffd2d9a921c6d6c42a9f34bc2
69b8d1a1ab77373fe556a1ff262db22be697d40bda3e25c85298ec176566e6473451aacae424594192cefe6cc2d011b34e5ae8969c17c853ba3a91caf743b1e7102d9667e38f8694406ae7e68f3d77744072473a85f10de6a3e67b5311c529ad4fe1a5f45f1e5950bcd7bf42d4f78115ebde7df79e5405b1d281fcf768ed15
f21d257979afbdcdca2733f329b818a8fce0d36c32fa97107c113f2b956a9c90eee90b3e62b3fb30bbf9b7d6e11a686296ed57b35ee58f0169f290923f05a2bf197575311b636a983c19bbb5c99bd5c75244e6cbd5da737a0df450c5fa84d89079330549b137ee4441ba9a6016a969f938b72863ae4a7be4655bfcae864940
0c2ca92476d0406538b88e1dfac60732e534afaf5713c53813d13005d30199cc2c13a584883471037ee7f7542eeee1fcb966aea03d131b44a8ee504afe74e605ab98288e244ec190266dd6ece4132a11647a45f95c07ffa43508da8bd4a23943511fea828f81b82387799fe3421e9a521c8fd85d1c385f68b60d143f8cfd78
474226f9adfa30981d3cee7885f6bd06174a32a0f556243f0afe4310a2edfab4feaf8b857ea0ebe5d28de9beee600b7e39e97251afaa157191e90d44d1b7c1eb5e97fe5020a37d5dace21fea8be7ee2c800f4d435224d3a2fb79f5903157ff1a68031ecbe36962830ecff751f68e7e7ca0b6ccfb316c9af3dc0ae1767c6a7b
2cb7a60eeb92dab9ded3b66a8c4358351596d1526e94225eb9d9b02f9191a398b4171090185b5af0e0fda8051a6088300e79a1ded01d9105c46bba9224b77852a1147fb39a199cc3e767590acb54ecd7d6449c2da9efa36fa7a459b93d311e9a7f44688104a970321e42ddbe2d8b02103503bbc1b58262abe02b2d5ac20a45
7ae215bec5db9d1babb4e349d679eccb333028fd45855d0c004d7a1e5fc57efb1d5b6365613666b2ede092812b2ea3aa267f40168e3b7520b80905f943561921eaea619f06f578206b93ef39bda9ffbacf35cb45c8b6ba30213741a5fbfc5a97c16aee581ca004df934d72471f65ce6eda33acdb2fbcced9dd61c25602c17b
2c0f2cde06a8064dc77d8b0309e75db5a0b8cea8c85a24bdd6442d15f825328af92112d1f70f1590a5f66745d3b7b2a0bee14abdd95f300a09f8f4163c3cdd10a201b3269882b5ed0ceaf45347bdc3373acba694b10991b185c1e6f930c493144cf30051dfad413bf8337ba363b44546c05a812d95e08cf3e1dc54bcea1949
57e701d04425ae515a0fd0f646e2ba24ad31982f742faecd3b5621045ce3bebeabf442361e45f87d53a7f27bf1aeac45e4ab2c69c0765a3925d8ee2e3e25c9ff909dd95ed7592b33bef906a47bf35812248fbc5d4c35ee0f4a0ff3cf97fcc99f29c63405239408df595e197bfcb369612715f6f8f43211eefade5371bf5e36
f9bf5b653b9681ed884683ead123bf70366448db7f67987c21dc15450efd069660ff165af58dcd29f2445f2ef44e4873501d2bf3d0177556e836da64c40672db8eaf4fcc83cfe025cfc349b2e67180c5ef33308998bec60522747ba9e1ce4ce30fd8cf7f78e25094294e7f44c7965eaec757b2190573a5a52a9b753c4b13de
0c228961f52f4d4e66c9c1a845cdc2983a320a8e998af595f905b7c9ab37d1ca793827d21656501cb0fc30d11dba1013578f87fed15d2c6b3fe1e7ceb66753231040cdebc5157cb0b9e77881e016cddb436bccd89af227851a73bae99d9210f847a39b4a1ec1356c70746cd6024545f0a28facbdc2377d8e43ab660217bb07
39417f3b19703b145711d4b18df9322cc6961bb21406280210b1954d85f7f6524200fc442227920f9ee5e706d5cdf3d80ef73ea82e80d57902b4f4ff08b9d7aa8d9fd8e39c9ea35b158b59ff865a65759092e96c7c0d9b458be1ada75e8ad0c37aa611a8bc335444a1b68ba6c6d17b5288cfc1fc25c666445208e2f021cbd9
30c9cd4454582a7ef68ff3a020c1d579220361c2b44f9f160eb65e41d368b60ccb7592ef558d8a2ddb1cc4e93ad14db3e333fe9a297630f37f73dfe7495391b2d47b6fc0748aed657a5edad7d62516d1165245f2a7cb103138e633415a366b8c4e2fed98f68277d289bf142d3920b68d17b2b42f8719f68bab619b023f8bd7
2dfb5b2628b9a69c3e5d609341d4712d0121c530ba3bc956317ea93391c4719492f0302b2ee9fc20ba42b114b38030d49871a817973dc2da9bbdb5ea0c588bedee824e34bf529b3cc60aa6ded76b0b6cdd7f0d3b97fcf195e89890c7b9d2a376febfeec9205b02952be393d921e14dc010563376d8e127f079eb2520a9c2a0
566780fe1f3bcf4b72857972301b554eac2a6e9ed81b3d6a2e5fe458d04d22018c61858b8a7cc980f35891ff55d9619dddb20b1f473350d2f1173770e7acef27c815e3cd3b15391cd4914ac7bfe1085b2a71929efc89636bd6f8dfce20ee08e30777ad1b93fe786130d312594fccd9e0b24caaeae9fa8106c4d51339d98590
7560f49d1f0c16aa4a9a14d2bd42af39184e575e7f96ee85f60feb61bd77dc02cc4a509eb63d0d57739cca5cc40fe7c3b3b58067205e251c75ae0a797b774e751634aa54e4aad3ebb85dae731eb69cc2ed3461856b7e23b2e4733343668d9f53f63f175e64aa132933a8cb7b095b960415a0e137e8d8a154323d62154333c0
dc5c51464aefe30b1dba159c17fba9437870a90bb53d7304c46400c76e1167f3464f1fc7ecbcd6db2dc2db7af440c6ed3d6bafd97a20dd9b43f455b54f03f9a613a4cd8a3d0321f730409d8a50ed1ed76e4dfa00cf98749fd0fdc052a1e37eb2bdc1cde97ca26d3369c9b5b523ff8403051bac1ae1bfbc79f6167cd38fbd25
062a99f9501e48d5d872204079ba49dc200fd3b33a15f796764f499d7f2ec5f54bf959d47eb7b0a8dfc4a1b232bd6bf68d6d0dd5d7e79f061b346a22a477bd06403aa835fa3087921040287261708edc8357198a5364c24ff5357987c8ef539af5401220b81c21b56a83ee4ceae820348e325f362c53f497565968b94451d7
ee36c24c5eb3d6a3aa025eb87ef323d633d85ee2c760f34867d2c597fcbca99402dbec360b75a5b3faca4d8a14219b31a73aac0fefa9f813c4dcc0672bb8ca5f6ae76bba19217efa96b5b401f32ed176f37f63d044de37f002396e8ee918b91c8e1e4bf52e254f73e7227c3a1ad0225c0225b7914fec312849ae1bce7ae5ef
ab30986dfef4cc2fac7495499e9c353f1e97fded5e2f7ee8d4c5e0d2fe599f8fa6053385b1e162a13fda496b8f05ac5474e8e39c2762e143461a7426f8cd3e02d0d294aaf2613112429aff562add3ae67896151183752ec1ba23f34321d3c0173b1f6c8c3ef54dad9af1d2c500d25bc7d860d832159577796acd6af6d91758
8625ae74777b2737e3456eb6be485959c2dd1a866c5d4e3b8441b765f8f42a3054a62f97ce69d40380867cd32f496aee49bed8ad63d7a63f4f49dbff60f7e3f30367fc681b54632f9f817d6935fab6b13fa840fd26f6672fa0c29198a1a67ad1b8646268fa789cf1065668fb8d19158127fc9289193a61f3167d52c8c0dc9d
f5459c08304ede40bc2e086edb7d030f75e5b4e5bcbd02b6005191bc3083056a23b1dbd30b0ea390f7e851f8ab0c4eb91c979ab825a6bf86afd2b85195270874bf53fafe7781d371a2cfa7aa6b880274eb3935ba75a2959bc871bd741a9781f10e293840496bcb3113c82497b3ed7d87db90d737c01eb9d2f3a3794b3e3241
c7b85534f9af85921ced6199f0b32f11694856c10cce5a98c6d5d145d67e9524060a1f0f7eaa96ae7857fb0ede7360d4c2bb17295e3e664d36a24cc8645bce83ca6cebb74053dd39efac27eb25a241190aa12a35a0edf6af022444315e7fb69b562c4d778ef234ce4ba52b2bdca5a357dd99723c012e7f82937523fd691536
f257ba3d9f17c545fb42069a1e186ca0ba33b9fbfb97afb370cb73917807f5cc5d3556ca1a59633844793dd73bd331b0bd4298892c3a98601b3f8c9d2c1e7eeca35b07fd114d5cd6bacc1d36111248ce12809984bf3c796cdcbea00f75c501a7eddf744eb9285af78a59bd5f57ab4a254f2c311e89226dd5d5069b56224859
8064582de2b5c06597e286eb3df37f53b15c75045c1de8df6b1a53e5e81a46175ed1aaefc875f25dddf1a18a1992feaef84c88bb388b80ae64afcb7d76eed6ffca8a6e0288b8c653f862552f1105511f05516212763589e730e82493f102c24fb490b8dd5fff6f60b4c1c4df1b3a141d0d9a5a621dc661b14b785f256b694d
73c6be7464e33af43934744a3362a82cbe1fb57c9a35a031b364dd04ce0227f1dc1e2597eddc992d68da30368d272522f3b6dd144003072774d6ac0fcc21a5daf9db7dd2a12b2f7b613eab77199649a848692c4b2f863199b1a7ad1b2ea47bdb2034f378c7d4b80d3543c92563a6070f507882737f319a0110f33a81ffcea7
954367ec95db37f3c709b350035d3e2902d25336d92b66307e45efd06dd696ed9591e73f005d629dac7868183ca7a9d4f776f69a17b2a6e6d4191d7395da92adbb0aa739323bdb3ac181c8d34e8ecbfc734fca9dcc68f4ed6ca9fd4712d99b436a39516c8f3b2350bb69e6a9047204c8b68c4844f1113d92ee17e69314d0d8
1b125dd81c1af079d33b05d3595861274a5e679ee59b5291bfb8b8fa7d65a04dfc516156664b7dfc63fc5dbe343db53fe16e3ea5a6f67c6032e6fefdb1bfe96c800385f90cbf96d684c40703b1a8fc0aa6994725a6e37a51238e81e5c7ae30276c658b85bbcfacd9b25b7e697ab007b42e4e4d9ebc98080b384379d7d288e6
4b95ac30855a4c60223b782928a40d0f2c6408e7af0f35e6fa4bf3e123de1877d5ebac1fa539b9c7e7cd797926ad8522acd832c18a88c19f367808b133cae1ea52627427203c03649b2ee88ca8dd9b7cf839866f4d568f873707ea6bb2913c5938a115da722337aa09a88053f9c9f63fff4a88f99bea0fb82fb062b5343c1d
95ed1cf0932820ff88043f72770cecb4b4dbbea260fc3d4e4503d0b2045f0814ae19a624baa17fed8c3a5735114429a651df5200b73480ecb591f9842597bcab22406d8f12557b1dfb6f42d4837c4c9075dc6df01d774c47bfc2d5d2992c3a1f98cd8e4db858fa02fea57013a68dc6073e99558abd20f04147a640539568a9
7815900454f491bf04780c28c3919e8af8ebf8441aae453a99fc44ef194f7d96cd0dff7dc75e7aacaea159aeae640f5e873fc86a9b3523fa4418dee0265195d3ea331e7be9922ee04c0aa09596fbefa9680b4e1ff76b4dcad1d0c1d2e81a182e61ed8ce53e57dd020d671a1f232ba6e2b2a7466f3826fddc26855aeb441871
5a43280adf0c1486538ae368eee57ede651746b63226d747839cf7b27f007ea7086ca1077b787e739885d574455e4c602f878bc173b4abc0fac63a38665a109203c71adb51f7a0205986cfee137c5565600cd127abc2fd5fe52104f1f3507f83c8bf5a8630d68dbfac238aab7fc7023f5e79b499d4000451fe6ef837308623
3fd09af718c5727f723bdc5bbda00a68ee115be39bcbea660fffb219dd69e0d1c1ee86db5a83d37d3a67171263e7b86e4b83965cb9eaca5ac466da232b6e8ecab8237e3fc6316ee8bafe2b5f14b9bd017673e5a3f1ba2a012680122dac893b0f0a6207a07a9a9201073e14ec432fc7d3bd46f997c3d952bb7eb379074ef679
e99d58d5edc94ac97d005cde1ee7684a1cec2785b9415f89d32a4b07c00ef1cab8ae8bab767999105b24bb96b83854167854badcbcd538b50f103cbc5272e3e38309516693257f5087bae6d6c252f60da6cdc9486eed1fb7cfdb16b3341593c0c7ed17870b864b4971f0cdffd3a9e96826a1d7462b89bce0c436034dfcbca3
cc801c1b0a752c11e56bbe874a7d2894d29335414658df0ce2d4c2357267491ee126f955c7de7b27b0afb16b85ef7b19b84e69e554e079140828af53282bb130fd342b94aacff2b0f61a7b156fcc0641485808da4701d97fc4f95ae3eaff05cfaa444926e29a1bbf325d8f99e25f210dcf31cbdafe0608783b0cb58e3191bf
67fafbee3c9a07ba8659f24dfba19f211a7a04008a556184964b22baec48b5d0618110adf66992a39d4096fc74660900451a5b2d60a60e25b3d0a37edd0397e4ee2c00f249c66273f503019b80e30a8e13bd1dabd9c1b59e353368d2e213c3b274a5e27a28c6dea5a8ea4d5d2100e4225a30e617d0b2002b9682f81171507e
134d22c20c849905390c468eea6ba30fd5a6160c99f009780e484f9958e9fda4986b7c5a263aa05102a80c35620becb46a9d95efd9b7b0fdcfe1c13a9cd483276fe7a335cd2c7a39a8d995b6f31d328013dd8b92e65ceacd06b8755d1b5593d762e0fbe27bcdb0c68f2cc33552354284531f6de9b008820a8c61cf347eda68
fdb08650a241f4543a17437f3d7f268a562c80a33e38c29299d93f8b14c1cb1465618a1566896ee3bae73ab8cb61061088c206d9b38fbdddde76b6bbd5d64b71030e551e752321af96fb3498c3f408041786468a89c3a5273b96a6d6922e819947c0d95916b724afe2e47e4e1a8b22eec5b12e61c34ddfcecedc53fa7612b6
3a29528ea170a1d8d344cb827d9301ca7f718f81a9b8ce7dae4b3e2b9a548cfe3e52ea1d26792a3e3ed9e12a46bccf36af7d8817ea208715f7a1e7a6ae0c1f06d02c49f7a48dae238e41f3544db74e4849ab1de2bf1dbbf0c0a0235e51bd16b7b392111d53d08f394ecaee24bc6f518ee7ddc65654b71600c1999b3469e880
29844af5e7e1ea73e9e5a1559e72f8e39d6dc58a46d428b8ac964e3fafe076a8ebb6cd2ec6ae3e9cc2a4fa85041f5a715f141dc11f0a1ccd60b615dbbb8d54abaf24cd6a212511a7e321baa38be77e4d70fb83debe904a8b7ceda487f0c7ebffa4e1b30f73211a0d56db9ce2e3ff7e71ccb6fe12b24920f56db4209ad8877c
7805a0a5b828377c091d5996a007a15caea1e10ba2c6e8cfdcb37b7401d713bf60997ad4c6e9a176e0365197224d7f4ad0c208fc768d5ec600be2b635333a3670cb9084a46e17124afbb3a188de3b08152c9f99d1700f7a11570e6a641de99e00b6b44162d319b3b30175b3487205323a2e66cbe1a3300613bfda8ea54a173
e4e9075375acfcc5a4f41a90e001f779927bd91980a6634caa2c4b47809cd70b454be85df7e58e4cda1c63e879b574d2d1d3ed40bf7ba2ef239ab7f1802a5d495da60353c5db5ac0d6a1e0e0bcfe38454deec96fb4364f36063aa730c465aab784c52d1a77869d58f5f491b0eeebf77cd7985198b1ceeb5d293b04c4c36311
75df6023670c4977fc1f8ddefe37fd6309860586db67bb561fd36e7ac5a71dc0e9dd4c7e99626ab83f1f85ce939e76820ffdaf409919397f955eb4d3a47665915ad26baae65de34f847794e0cdb121cb42fe0ddf07828ec1f8629e03e9483a1e2d0ccff21296e7c2ae63e1016c2c3bdad13504b3560905bff5a3834912cbef
ed1fe64649bc305cb672403a37e3e9e86ae85e29e49472dabc62a9cc48206edcc14f1a07a17dc99c701373d54c9bb8e9f27a0b75839de330ac0f0f778f9b5d0b60b293b330d95a02f03b0268d3e494c8ec5a3829c418fc0ee8edd0ac73e57cf0ef22b5858942f4a84d1ffaf1013fe74db73188d914fb7c782175ca3e3a5fa9
e281d1cb3a0c43abd4a74bfe50f958fb1d7e18a61373b93cb824b8a4dd49e733bb9e1071080ae658f915b480f6e99c49cfa6685dad43f7edb08ec1fe55306a32fec48075bd17bba541e1ce798b89bb735de1b99af583851c2a4fb34c9bdb4af4ceb9dd0f54ed288536cd26f620dd7fa3401f8464f07aa542bc19374fcc95de
b33088d3a93f25b02a2d9b42dbacbe2ee6421a625b3c7636e568f72dbff5727fbb092c528e27443984c4b4f874bdcd269569ca657a197e36a3849f9dd0e2f438ba1ed6d49ca64c9b89463888d802c66327d16ccc49c0a019a9845bbaa97672fd6c4080ccc54f1622e3708af432d4c41be5bc3a171aabcb7871770b9fd127f3
f5ddd42d900efb62fc385eda815ebebc34a25f9cdfd35068985210735c1a864bee417e5d2813fb136471dc31d802c262d641f01636c422d9cc3d768f44cbc833c13a6f44825fff5688fe7c2d7973801c1859ca374d4d6643a1c126f79b71f12e9aa514ef3025403a3df90e12b81ca9b906801f62b3e378d13aa17b8abd31a5
f2903a9a4b7a1f28a1ac2834d4ae469814d3eabbf525de6b23fa788267e090511b617d46bbb6b3aa8e20cacadf89eeb9b1bcf180ca68adb1789edef5bdfd9feaad410e83a0881cb09f2209afdb5ede19d960c0f3706c5f98bb75e6f7fa212b77a1d2747c1d2201e92183d8c61353c860e1ef508103c95c805397c9f15b376e
72741355aa4cd377ff87d00a752f06bbf0d2ddbcc634b53337228ed3b65797554b8f406d1c6e4cb22c62a29b61f83b1ae2c3c46af87b3d424c149396423db56cc262edc95101f4cd95b28f2ae55e5fe9ecc06f89fc8d9f2e72c9fb8fce2cac146997b14a50e11c5052559d274e417ca97eb62093348d067fbaabdef26e8feb
ca5b87d9d010e6fbb85a239a254964d336e885a02250dff2d6a2dae59d6b689c590c7d3aed85427b66b360f8cbda0c070d936bc8f2c4762fbdf6e911828ff85f4adf57daa38e5ba59ac8c7c1a5565c9f3681dbbaa507969e2882a50c2f3f7be18dd5daffb8a7a2fd442b765747e9c34512f1f956c620d67238a4347bf1454f
9ca1d42ac30b8fe16da18f0abd0498d578d0be3b08088a22c707c15d731a640937c3c17e08a3540123fd0ea98c38a07b5b9e0adca1dd4c90860e887c2f75d2dea28ab78522db43df114687f325f0bb4543b8750f6ead81abbe68a98e03e3ba0cb5d2ddf3db69d3104c50e3844dc9e31e807d2b3c930686a0b875f5851a2026
e1adb284d4870087ac29b95a3ac82fa3d16c0f4314038a65c8df53eb8414d51b1e634c5030fc1584fc67df8ac373c7a6d52f2e56511f31d624957e88fde6d500647f953715754694fbfc329c09db72bdee4d52a97d5aad9f32a08a7acf7ecad2d7c2980b625e14e080978d9e088090f92a81e0f1e0fe05a496444f4fcc5499
91ad10340e91afba4845cd083ad3d3a1b179fba719ad93b4ddf8bb601180ab923f8010dbe7c6bdf92cc53e5df4fca1a806600858af4608a419cb90996598422bfbb51bf82ba1727c622fc64187d4f351db4a9c6f60f49974b72503b858d7bcb71d81ff9eecb61d8488152e4f1dd810c40ee720ffa01d9c6450eeaf7a6b1ae1
2458d6da07d3d6354c17bfe6a0d6d3d9afe52b9e87c78f9249c038d4cd4c30ff6b78f70e70fa42c63317b2b5b9db6e6175b33c6e16c9b39fc8268d717926aa1ee39abf8b114ca8c3b5991c345c0e747cb7ea3a8b91624b95fdc27df3aab41eee9b00efe35dc9298916e3c6c0833439cbe4b1b4a0f200d297a168e4bbed2c63
efd1e2b3764df5a8455c049ee8d245bedf92d36e5673c997c4a6ecaeb4e1a4e2ac1e7304f13d11c70b9f2212d550acfd925cc3afcf114e9c4077271450ea776782ed1b1255f13aadca33034662a746d481db319342f7f47345b10a01657ed860c76633fcf2c01b2960f746b3f35fdc48f07ba5ee91683307e1947c79d4526d
54103da8a67edd659cb5ce4655d9ca4b9affa2abd613f38e07249a88a8fa5f7da350d7d1824fc392f7fce640ec7a073aa21eb40e5f2ba7d793264d65599479be8c2aeb6e1b60829e54df58b5e0a4d1f81a06e8703f94a6e7f21ad95ea4c8dab228b19fad8ce91ad157c0951586b5de827a309851adc2a6b143ed31c97dea01
19626624355ece944428702bc666e9c89dc4f31040cc3e8b23d3aaefd3eb40ed15d2a8ff5697e913e40193a8159882f8216b5a299790e7b7a64d1cefc0a888501cb7e05f32bd2a8c75061690dc5cf361ff3d90f69b3d5c2c6bd2f0b4cf1f45a6d318ce58abc4b35c0ba2489dddfd7eab1e0c1c6acf7d89203575bf2d472f3c
7a38bce1343c0c5d2963a8ae37189b35a01e4a0dc848ea83c00b68c583a2d0e4757075f0f6b226fbf4b99edfeadfeaeccdf55165ad189c95768daf7694f537a177c7b48ae702a5fa4f99a51a5071defd6b88c3c0153cbd648ee81cc614f0bc86f10531fd4b53178ff327f647a73971327c0f863acd0658d785158171013b8d
fa473ab55595b7525f304e4c60b38b5c9a071a2f925c07a512ea28a416e846d6b079ade6d352961132ea57d64b6e642a09fdcd120b7649871a8317c431345cb14c4b91e7a7cdfed19a90b479484153fbbca113c6a63471183403a79a7115d0a0480cc2a012c7164029c24829d46342a3012dd8c3ce8de52ff7143223dd304b
698a2e3135ab5a9cb9ab3bcd6ed8709e5c430f4fd33c89bdb523396aad7c8c3ed14aa2aeb2c586fe56a64e2ca078b781fab15765a42f9c06cb910008274b0617deafff2e4a9763d18db16a40d59d9e793a9ada00f0aff705e1d5ab2721532451f4bd94151d882d678b03a2be0312d13834efd03e8653bbefc73095750d89a4
b690743a41253fc90a5caf0b149f41c31c1d3b2d17c6692f941815c53acce27135e8600fc2a944f80582cccaf6f14bd167f244505ec5a2484d8d3e93a416fa595df97a22e15a12d5b603c4e0e55add6dd34ce41dca40ef349ffc12cd412e50369e157e5912afa082e5fce8be45300934d3c33682e1a803bda10d87f6bfa83a
97acfed54d96711fb11570113a896cf8237d8e8097990122f315f2c3f3a097903f49a0ff72c6e1a0741c2d579ada8c3c323f00f0a9aec1de0bf7fac9574c661f6eb292b8fc244e1514acfd08f5f0fa682709ef5a4f06869b5ac3c031bbdc444fb4cae51ce2c865baf4043e3c40b31a19171c0b6ade250c8106e45046a71166
6f81090d60b395e9d2f04a9b75e5bba837a6a076b0ae0cc58c2b6c752da8ed9a3946977f30aa318221706ad0dd9d513084b92e6a6956340de8572229924a93c565b52ca761a2262050150f686845ca43c9b76cb49f5d37f7e9eb8b8c3b37ae9dbc44969f58f9d1b504aadd274ef2dbdd2825d612690112456fa42e6b3e95f0
8e52c19746a34beab7454931bf817f6d1ae5d244bcbecfb6753545797fffcb075b1b7a8fcfd3f31aa4438afd9dfc91c0f8dc53d3091f0fe19ea70ab1499b0243e9e2a9730d43acac370a2f017fa67b35bf81d84494c2ba83d56ff6d94a4c51ec029d26008ee92c04cbe7c7e5551a2ac31ceb5f89e936c932dbae6a87d237dc
d840882a74a1bf145399be1f25085689c14589f3a8e2056c87622f9429dba65ec02ce2b22c1affe9b2aa5b5910ec494225a2edc324125d6079c3e460822c2cd3f92569cf6af12244c85ee8852285b87c80a157dbddcaa9ec177031e5a05f8af11ef55a0b22570b14ae78ada9bdd338cf7bb2fe3d330f87b836fcd8bf8188f3
86173237ba7e20922464061d56998764e72150a809820602af7f1b3eda0b79e1ea18c42ccf719b884a8b77ee922228be983144377175cd8bcd08746e65b8385f8e567085d034556af0d26d3b08571d394c7f6996278a99452b940310ce03802191029c36dfc9abfcecbe8a4969864cf9a0a413c497a2badc468a09a74a7a4a
24d8d9da48bb5be1ef62ddc1ebd2f3bb783880a237d708f9ac4a3035bc94603951a1c49b5bffa6577b1c59e22b1a0ede710019aaae4e7d2956005d70318b1b9e7fd9d0ef5ee92a8dcc15fe7cac832279b63329f1d41131c832764e78a527484207b0cdacdae6523f8829cf2bd207047afb024efcb65245faf4a89d28255da2
c8a3ef597ae12cd2d07cc8e725fa6ce360710d3321b15edf2763be44d45968e627ebd72c83d6e58e4256f6e3b7432dffa141a05535c22ffa78fb05f256ddbb33bd42fb09b1ce212aa6997fad9d2d53af07880b83f411f8520adeb1c1cf35c1b2ae90e539fca23ec2fd3b6923527b9a76fa96bbbc69a60173c422976131782d
0ad6e7ef44a36cbc2dbd5480b04e6c91c164969b2ebb195750a0c58f7999f966c1d8872bdd3efa005576cd7644ad5783a3b3290bd0213dc5eaf3313dceb5448fdbae7da2d568d1a987ef85cfb1e8285eb00e0ec79a1d3d320e5a21eac9fc1094153386c3160cfb9dd1c24cf1f9d0b64346d0cb4c73eb59136710a1bc3292b2
0141611d26927b0177bfff9f9f60815503cb2f9ea8ce3db3425f813d2f6ffca9fc3c8ad70b7816f83889c33ab05d9a16e0f57bd2e392fdf314fbd04114dbd7f80d77a04a5c52f103cc47ebceb8052ed5d07b2ca961609f8d615ee4260a64d7b024f5c570012eb8cd28bebf98b74dd2c6f84b193ac70a767ecacd06ef00276c
3b9d6e483e3cddfdc2f456ef50d04a34d92cb06a6aee123a11831810f5ffbf2eb3560f9852aa28eeed876991ae9758caa05cb6bf7c71812091811653075c3ae42458c86b1507bbcdbabe6dfa630d400fa7788e10cc50ca7760e23a40d78eaffb332c4b11b519516b3c43354d27a976b26e92d91d688afa5a9cf356c880ba2d
b6690fc3cba71f8d39b421b63c4a8baf434bdaa8f460db565c8f3c32de20ad252f7564714203422193dc4938835b6f5bf1bffa899e4b962b0951dd27378ea0f4abd52e985c6a057b5cfff44bebcf1c13b6cf94d3e10bf9b717114b4e5334511e8fe74e27f28631046eafb3157e38e0b7c3d0d6f12a4235c537ecf7af8c53a1
539de5b2b57c380ab993da3cc2ebb454cb054a6ca2a2a34db2141bba0032b89572fd5c053d5411b1671e25cd317f44517f3f7ca74fc55c0a870983b4c26ccb24ba316b9eba558852fcff07e34ba27e160f0d778ea1f3f9beb8320418f0f8abd2deabd4d54e8cad5dd66b2532b6e5a015cf67f4eb9e18331c46c8c776473d92
4a91147d8036cd8df17f4266021a075e21ad168417cf9520ec5008472ed3561737bf161f9d9c286d85248a994180cf30583698235fde08f4e1c2c66918ef38c47c6eb501371ea48d78c2cc7b595408a5b3f63fb321b2a8773bcfdaef34b81f624d05c096dcdee0cadc3143fe305866cb93557f81c5b05c408f894c33f8b6df
9691e81339798c1b0561e54bb68130ec6d134c9cf419c63489dc5f459657eefe7d48a33087d370a146ad227e7f1fbc04083693badeb4cb768019bc1ce3452bd0403a9d2fad0ac50cba11e8fecfce00c83b68aeb58ecc1669aed123c6a62ce0fb8d141c3efe25ba6aaf2240f7c128e8a1943985e0f09b286bd48aeea9345785
1b26b52c2c28fc32ff720df20107352b20ee2170042b6833b135133fbe147ae9fb37e70a0151f70cdda01c648a030144a6c9be7fe9105b11b37b29a7e4bf103a667c489a03683c9b8c5c1606af524bb19ce9ac009062117b30af8c9e404b749e8f99173d1a3c2507481d3716b811bf2db89461c01cf48d3b2a63041116832f
59724255cf7567989c98b374a014dc71523fb9c279a1a29f828d7ec62c6589350970bb2324bb4858973efd7d58dc128743c8992c9c24e4722860edbafbf715439f248969da1e90fd9b8b819db1cf96b0a3a2d7d0e14da1ade6fb0f6fe54ed8725a406f6915fed6eb0c07e3812048470943bd65c09f4fd2a8cb6132ffb329d5
cd344a7e34fa6c80b0ee3ca62b37dfb5bc068541b18087b32dfb65c549a8178c4bbf46a2476a27004997415ac4ab87d99f32d7dade7a2de776feb62b86aa60697640445084907ea1af209c47d0550c634b4bd7283d66d7d1eee4d3a3f2ac83f791fc5f76a02ee17333c4148150c3e7590b61925cae0f3f28829249f68d3c18
b0c31b719b507dacf081199e70e3823e947673a545c3344b25a6c20a07fb65031e65921ce165117e3f42aa222ba0d817fcfaadcf317ab12c418bb976224586da52ed9d28354e27f3291bce7aeb9f48db2ad79f17112d6be84a61ba95ad9b82553da321fc9fc7b82b3d9dd8c6412ad7677cb122f18b5008ba2ec5a6f632971d
1cf3faf8eb5328bdb0bba034f72572c13d21bd9bb3178bb2acad51c699824b63aecaeff150c7d9b7430e862ee0601e3c1d37317fc6c86dba27915a9fbc6d26e8d7b19be30fafd9a4ae03e3e77036fba9d0159ecc169b6b2ae4035133b0ab7f46847ca7b33aa707f30045e7ea17673d2962dc815f03f0953b8b681310c54b42
4e6ae7fe0bd4a955d1c77bff693a0f1eb006b915522a93fed9d95e16e39492858cc6a2116f88a3cc6000a2710bb6a61ee77188bef227b51bba258f180d1925eca64ce97e56bff9e932fbd16cd8b1225189770cd1414884c40dc3310427a0b0095d948dc768dee5ffec937c2b36ae97003ef6e4d5b1af2e493694d681c6a190
579f80d9acee47ed52fb7b84f71153f347b8dd4d2853d2e474a1408cd4be6bd3698a3f5ef12779ee375740e2c2a70185edc17efd5c621c4c36fd903200f1cc5a916f6e0c446b06f357a0ed5243dce7d10943afedc26c2879d0778d68ac99551c1897bae5cc42c23532fa21a98d5188803e310fc742e1ca903d1c6593e2c4d5
801768208072fe5df7df544a637d71bbb44179ef7d472d23ba4573e3800d033acb9c0beaa3d5d5532d96e03e32e5c7b4bc7af3b7f75b442f9e1151b935a09f2e8158f2487f1718f81a5bb6e8c2931fe7ea293946077f819038a18f242e899e6e5f6000af391157d346f51a93a4e6434db763a3596d26058e2e5d064058a2a2
2f7d27cbd0b4dbd58325e64cfa80df48c0e8df619914d3cf49d867491f782283d244b818ea7e5bad786491d3d27f723518e25e938b707aba180290d94ef45298a73b254b25f9233a3dd6573eb9b7aea5af53070d49d7eb1d618e245bf08623522c31396d3f2082a18e746a2484ab1fe71174b9653e7b1ead692ba21310ab28
01d900d6a09c6aae4781d967f3c516bdac955482e06642d8ef1d681f1a85d74d22df243c72ae508b4a128ff238baf4bc4dc6ffab8b6993eb248dd81a62a37d0d30f5741907533ef3e04537e4033c755200fc3228e24e1b6e1d88a557e418db0611bb9e972b47c3bf44d974fa3fa6fc18c0fa1963f810457b0aa42e7aa76046
68328eb27aa2206bccbed47117069e44b3ecf99065c623d5a73a330991278d59660668de7db9d8cc102d43bb1c910b22d24281ef19f2e4ed0c4e8d8fa20ec73d126aa9db174abe99e5600fadba3dd3366343115d4b1f283b59fffe6b88aa252f3798d40c8b5a258057358ead9d0442ba698b4830f49eed0f0cf72ec324d4a2
34a81777ef6da6ec8aee9422c5d84e91726ecebc008375ca86f63fda50577c99f89a19ff0baf4c88a7e9c415a48ddf31df57b574e2c8e7ff13eb11d98f7c1a279fdb10a7ec91c35a42892e2a2bbb2d779428e77c05534e64428fabbaaec4fa936485f5c68ffe83c4417fb5e7943fc093659dc293291acc33e8d0f1aec36369
46b1f36ec32d8579a97cb1e1d01f9facb2ab99c40c99d84a52ac8e910f6f06e73fcab5293df2ddfe5c2e8f051459ea4fcec5ce9a2e6b56c352710087515b85b1a5440123dde004818b465e682cc0c7ad0d64097613530a86a7537243e50e1573ea910e3efd5d0dea644b8c6465b5e2d159a348695f4ac812144fdfd69f7a39
6ea1719e035b022205e8711252dd2df1835bcc762e74b9db52584affd555234205544ea182c4762fad31e34cabf4068afb8ec23f2199c1ab9ae76f905f2b11cb9fc0cd1ba6f62fea8b8b318561b2118114fa5f7c35f927cd299f1f564d73a561d87b7c4aede254bd7c4606e7f683c262e6b88a3646c82e9b78c9586573dda1
a6c61b84e25f98d08d3d43b583abe61e6281041dd67f624876d7eb2105f96514d18eae83b168a78b88a7eb46250d57bd1f0848e88c792b48077db1c63d6dafa03834d504e18941dc21bd3983f4baba001f975ab6d226855a2759b6f43642998b03a8db33d8f1367e5c58dd87fa7987be380b4c37adcc386569682e27b4a8d8
387a63167aa8a4dbab5ec1e6e86be980a18a91c8dc865696845f1627363b20d9f67e4da23eccd5227e057017e2741066dbd70564857663779ced37c2188922a3325736694f0ae756bee74774ed46b91993608a1af7e820ce70c14d99bec4f33b6b12e06fe67e925e8429e32915c710d4109f1d6b352814198c4cb10d2ccde7
7bff1fed70d2701de6861989ffdb9b6f9f3faa3967453a3040df03ee3814844c881ce6431dbe6beba5b52fbfc9a242fca53fc3c04a6523c5aedd2ee4dccecc123290e293a3f359fd2d5ba105e8ecb21694b1eaaea7fc191491c5ecdeb341228b7d6b09a1e07317e0c618e76a26f9ad3d5850c745e4f6b00a0b570e79effd72
5efd59c58704d01e44d6549a2f64ae99e7babce8476af450b51e4fb37ee5af4ea612d225399d7abf36857c44a732ac35040cf5975ca06d49780688ec28a8f94e0ec89e910235ea0c36b5849315ec26c0ebc154992adf3bb818e4c59d9090781649f728c044ef0df264408614a4667bc1611398076bd7d44d65a4b1e4ffa1d6
13526a778c2d613850b084a0c7002f36d991589e5780f2d3ece7c41381aef6601af05af3a4e3838419983604e2d5491e56e7249ff7ed6f3612e8937980b60b0b4c4ddef3d5abab3fbc88cac199dcdc827df331ebf69cf6fef94b71211365b6406c437648fd746180127eeca0c1a6ba818356d30586b166f631ca1458f3b8d8
b6be4f74335981f6c221d7ab8eb7f3eee8fa3490142afd3966ab8dfce49e1fc5d68cdf26b424d7f60dad6a07fcf5256f67893b3d3f327561259c726c9bf9a772ccdb6ba214e14e7f378340f201048614aead20c3fa2195c1092f349e429895aeffde0185c2af7945946075b2c7a637ea4610cff36c51e70dc51039b7a0eed6
9b38ad5990ec49d0aea1092cfd7157079c2c0892adc598e33d2eb8300b3a74c63c6d37d60400246e400f0f921e27bb98d901260b4e38af8341b9f56218f26a61b58926723cd6da344cb40b42585cd992391dbbcad9b358d67f7092022cb7e05b05cb164c6204d585f3b81ac54ba35cd2e4ec53b8633e65be2630838f707992
3bf813d983e5e233e863fba6764526a9d54d5be8dcc9acc8ee2c9dda4a0ee8272365ad92ec2b3801bb04cf0ca5141a93c8e09a464a04e76af3a7eb2ecddcf5c155d80c9556c951acddd0b35e09ffc90ad28bf64fc2d401aea67204750c3fa88f062ad6f03fca07b1be9528b5d3b93bdb75a2b88047e18c08f6d05d735c61d3
f538d4ce9cdad354eae7ec1aec879c28bba9b0746c4d745e0bb3bad5d95afae842a26951f2e7a5f667c1e60589a79a6b8724c3af274408a12c9da8dc2b0ed4c697d55631a637463037477380223415c380e226205f4ae34175b2276af84fae2634de9f7286500a04e2938798923685d99e843c5ac5df3302f839f175d1a6a5
fc74eb903cce5483b68ba56d8eb368c733a4b4c3ccd3f0fadb170fbb2141e6db483d9e519ff8f71d9df99472b725775aceb8f60f6baf708a53b5179d311ef6de2d65bc3ba9297c69304a7e016896d6868ec87532e7b81832521f1fdb2745f3cbec3cb3d1f27a78d88206d673d96291e84aa8cb4723e3a499fb5d47d174f66c
87c21f893c5bfe874aaeb7d1f38f6f0653817f1796af8993c1905a02988a57518d5aada759c7c9cec4ae4e6c22155656278b772d6c487ad10583a9ac2daa4116ffddc11a8c592f9c1370e165041b7c6bdf333a0d56a9407d8351d9face37bd23f81e632abf81bf2ac609e8a2fcfeadfb4a7b64f45d32c7d51999baf7b4c752
553df5a7c114bf1090ae77b86147b9bf264ee65bf863362ea32f9e0f55c5c6801a001968d866a08b28fcaca265e328d8cdebc1fbab9a8ed922c3b3f40c0013180d8fc23330e5eedc3f2485f8d75b352608ad447b17620be4d05ba287cf2a271b67204f73c3a1096d62d70e638e63095613e62739f75014c41534855609d74e
51c147ffa7cfd8e4f3af7187777184045627a7f40ba0d589d7985a5b880520c1392cf7d7ce4b8d5a68552cf944c6a0e67d1401c5eb30f31ad1c260547998da0d4e9d212c7262c33f7b2f6ac0f6c0ea3aeaca2b67d96eaf574420e57780f8ff84b71ba07bf38c0cc108516411c13dcf90f0e3fb74e85d10fb2109ecd19c12d0
b209cc0c91ac952d9471ac05c35c5593ef978765276c2b57ce12d1adf649accf37c3f67f6f4e222f289e094127c4cb07962949b59f1dc8f2a2d50be1ed887f4f6c7533f6ca81a57fd734c4c7b99f70c37a4bb4ffd9dca2a8d7a5915a99e675f33f8acd4b934c4b6320aa64572090e0088d10735ba05587d42872716747676f
a901d35fd0d82af6e503e6bc577aebd7f0a68f6bcbdba76d2a02b340b6c5d4a72e3d393de8bac8cbba3bf6615e6dab1f017c6b6767d31f7ffda232a60f373564a419e45586432652f405086d63d23f8fd1f0f1e50968cf68ac8f184eb35b44905e20f835185e55688f437441477e79614254c9a162e2952f46c0bda20072eb
6bbfd06399a331b11ed7ac12b77599f1af8a2a1354c7019068245078b1643e55f70309b9ad30a6d21461379367fdef3a450443fc834290e05e4fd920e220be822c3f86af8c40c72c8b1ae0f3386071c07a97f30cd2fc4d1a391a4f4137a87ef0347cf9b0dbd59e39d7693522066f7c4b5589bb6a95ac23cff91114e22cbf00
3ec364153c8f89021e951a8667ab2c140de82739a7f0cfcac1e88e44ccdb5b0d073770f60c881c6715b120b53911489866e54fde368ce5746cd1001739f3c7bb716eda013cb4ebf8528b7dd76429470086bd63b2cf60bdc8aea80648aa2c25bbcfe62c8a7042862281585cfb1342af9d509d52206ed167b0caa0d1ba6fe174
415b44cf044a3de472172934364c0bc0e11ee8ced4c5ab9c108197faa376d5e210f6df54b246a0d57037da445ad88380929b4d1beec2fe1290fccb444e469c74d27fe84070a0dbbb0a963808a217d825103bd211778343ab90e7876a55ea8897db48a25294c81ed2be822185b9bec88cff08558bd2c54a89afc0a86a472e5d
612dc672440dfb5fe39d3442c0760e487c347479a701fac0950723989754a62f0059aa3f13ca63774eef5a1864f47cb2457880aae1d3c9af80f4c0bedef86894d872712a0ddb825238969340e2e16e1cb7aca34a8a0acf654daef3c16f364fbbadb07820284083fad93e9ce35889bfe1f677b4560078bab4f1958d07576e0a
d87684439e4e97a06a307ad0381a288beddc40e11886e102e866f0c8b206788f3865c91e2054068b81b62c0c0e2ea12be4a0999ec4dbe53c7fef686015680900324e2290d10a4122e2c337d604da735304a10165dcf5025166ae71e194ecf63fec7c38bfa13004ec1036c39a3fa9fc19c340e8124ec2100db774c3605a661a
f9e636026eb1664a9dea5477c312d4ae6df8fcce046cee2187a1330a9e259fcef575dbce2a6c2ed491da189d96e08a44248e26075aae12db9c88716fe2db48cec851c003f4aa690d494a615d581c99cd517d558a69a53418035d31e4026c745c48043919f4ed0344894398db4d23c99f1af98fa44ff152f6600314cafbcb70
3ddc03abf6ef2fa545aacabe6dbb384479617bc38dcf9273080302272be28770f7f634250a352c889d50c37a72a42b4f4b88f3b3a230661006545b219d143b7d65faab9b3616dca2b74563ed960ca7add14cd199aa92b568a8e9bdce08a02582886e5fcacc8d6382e27840791a1a62bf0c9c0fca4fd8f07d203431de80cedc
cebd2dcb486314fc58a9e368ed78a52d54337be9e0b3dc788e8e4f0cbba462e5dbeca8db3a1f6ea7f21143c4baa8e63f05cf71d3f5af4d7d064a6959417d5acf76042aa0c1bebb165931bad209a3c4bfbc77ab3db9c940913c6f40b83e6b798306298dde97a10d6bfd9ac258c75ae2db9cc52075f90e8f9c75b201b9f3762c
4816a4050c5622f5025ed88334232f9f6bf529afd35c4d3d4a452cdd3946b3edeaa006dd7de062cc8ca273343d8976a57b1a309a46514488f4c120a9fe5b984ccb0be29bf5baa99b582b56da6ab042acd1011657dbc02df59e35bb1d7ac3e45479136e847a7ed945367f2b074e00e879af5625e844697834b4b8e48fb2c6a0
b21414bba72a22a8929730737077df9bc1537208aa40bb8149f8473ac08132098f177b6f56dce7fa22ce4da21de83210061a8183e04f3953543ffeb15816d7bf84556af36a4c3d76a715d63cb1434cf8aa33120e60e0c03cd268737d9c14e81f74d9e2247252d6d34766478c41d7dc77ccb8c7917d8ab8f2c42dff4dc0b560
7ee74b2b916c03f568f236489bad9d4679ae534a635d713210cbc05db957121aaa1b5f0c64e3dc68d029af8229c41fec1a5bb4e9538844ca3bd1f742fd44e671a3ac45a8894a1cb04ceb370bff3a6883690c51a10c88801f8b551d0f616217c05f41d1fd3d44f79f0f341541f0318bf525810424924bd1518aa633b22884b9
124fa0f9727feb2b67162b6135c9c2bbd8cf1d9025d23b0ecf5e96d3584e91619b75be3188c0728930a4cb9dccd3f8c3b9cadfc5422675a2372f6809d1e189210a288fa73671e38e7a4f6900da6165c178ac9fa28257a368102fe408dc6062cdeddfb7318dae5847da5c007b7d02c2473d843385a3469f17865410cdd741dc
f4bbd13ddba00fd690d1ea7d241a6760d5cfef691f8b7b2e0e4e047c39fd4839bc47cbde29d7bd8f7728bc157f3f3b1f43724e0e37a1b61d623d0015e0ba726de8eb11a5fe96ccf2b92a991529277a23979221780acec5353231a4dba4829d9d57df0f4d97f98c1e1d91977add029458e845334dde7a1d82e44e4b09825341
dabd5bb73a8df279a36336d49ec79fd3ea99272e8945fb5cedf2d014b4a7a78544abc25380e19416df259473aadf4f991e536e81260e8712fb8a6e76427b3760711ef36d9ace72dbb9592c0117a5607caab53165f083454e7d0001a3a2985e6a5dcfef0a10dc4cbc77be5c34705049c3b66cf7415f4a171aa3d17339b42504
4b892e7d35ab07a6b13e6f3ada672e1ae5d4eb82d463cb019e1a76512a474b70710cd7eae7a3b944c167ce7f1861dbfe2218e23d56123a5c64c91a2fbd9c5f3652a2e89d96b3f790b252c5e3fab89912a9f8ce17d17c72598330fa901065405a94fd2940eb3bfa18d8e1e236a6461f1eda0d2a1cbcbd60fd5833e6d029c40e
d7079a8b10b37034cccfa1dc9e6d572e501c896142cfa40a7e7244081ea9bd0607c18fbf24e79c5ad1598190b32d4aa77d825b763c9c7ad157f9f262a13716689ac200c191d13e48efd5cc92a47a3a7f307b76817f2e819b9cb2796b9ab02444ce24540f2dd38f070db493364fe1845f4be0bb51cc8650915c680cb8c283d3
fa98d6309cb743a7a64e2b38e1e25efa58d27f8d18b909cc54ae0006429e96973e63706213de2e0d7ba8230388904d21cca599711cebff32d14af0b4ba407002d2dc3724f04c34c5efcfc855e4c47de21c7b3019d6992832d39899d830d0e0d6968df621b4f024791ab0f17ef83b102e8a0f5c0f6e33619a220dae8682016e
c6e38ea1037e23f75944154773b830e77e371ede7c2712f7d5ed78808ae609fbfbe2830c6db1aef6bc646be07ddccca2e3072f46bbdaa49ec4082f8d180ba4805523518365b787c8290ab435e7aa77f8f72a96360272ad9aa59db909756fcffc169c9b3d34c57e9994b352c516d780be5fe1b065c67027e773aa418ee578f8
8d02d5843efd85d592dadb3daf2cfc083de941a721dbad1128f44da1baee0aaee115b4d19dae545047b019aa685d737460f21c0ceb7f11b6faab04a74a692f6492fe50ac41109ffdf396f40dce7670d3e1fb5fe95c7b196e8b481266916f36ac19b0484715bfdd89fb7338c2fb7281cfa30f3898836c164379aad986b324be
2d3f3f46040286c1b98fd26add440d2315dbf6145fe6199bcc53a7263ba59e189bfdc25eb071e0d76acdd1128974affce707f3002dcae24ad100e5fe977347b2ab7665634428737d1d57030b9a6c8d1c8f16dbc48fa32038494a248e4cb784b7d9bf4e64a1a4c0281dc4bbe8dea5c98467f3323a3ceaae412e03a08b486b2a
2443c1f67cd2938fa66e958e53f65fee8a804fe5d4ef04cd9e8121f6ececd03179de7e6cb6d1c9baf81543388679d8082bfde269243fdaf95794086c05ac2022a195b545c5fbc7ed69c2ff70ddfa94890a34e127d4665e346d11fac4433c5dae8f27d22182847624c222ba966143c8cf777a42e43308b87ce50a781853c3ed
26f4c1b92837efdf0537ef13de7646278d4a0e682e3afa93b2d8d3547c43887ac0ad46d5e801423c0fcdf3ac8adecc4fb40c790335cc18742ad16f0bf5e35edf407cc7e2794167a2a7689faa07afc89fd4609dd9ff9815033282ebdf1b67f640e6c5b8ff14dc484c451d3936c25492fb504749559995da37beaf42c7950462
92019dc6cca6df31c20cde7f104dc52d6ab075200ed017a492a3df7e913911da9727d4f33745b02da59b0a5e9423fe8e7b1eeea4264b3da1cc6f37dda282b531dacde42c21d792a819d3ecad73c03bbc5e87d20b1ae85ae5b05e6d6446f0dd57a6e3fba522cf9997c436c6e4061494d76e2f5b6fcf150ddc5732b0939adb53
9600a690ae329a79614939c091390f1d65939c35d10cc2492057bfc93432a849b1b8bac0d0f7ae9b4e2d8e1c39c7f84aefe6b8caa065e7a5961aa03a7baf5e5cc12df3423a836df0fa697c4f7188308bbed10f3a696e794e84df993b692a98de6455234d5645971ee72a21dd8e856a29c0bb9dfb65d2d9774554b6730f5b06
430a9a76e4d2cf8f60e8156b395447eeacd43113885476412bd8a14c263e2048ba6fb3ed5a6126e09baf1d7332d39e10e36eb4e21c9dbf6efb9d692042783f59d12b8716268fcaa32daca832b2af37dc03bfc78eae9956a9c25869b89314bc97caeded6f19f3cf4c87f16de4f0befda38b1415d22aa4ab687db3cddfbc3e99
1f0012a004cd594be12ea318e270d1e3c92609fe69f037edd2faa9fe64de8702544a7fe74fed057937b2ee9245140647ac20a51b12a4cba4d237e7604c4d1037cb4a77cd692af1438be643796a92758a1f2bb668537b20e4898fb1fb8a0f2177ac39371344c4922e43c109e016b767e112c8ddb5f3f350ff547de4d8877ea9
c852b31402380c1f9d69b7d88f204d8f90210012a7197fc8b60b53a268ebd32ca9061eea602aa34ee25ce2647a272a69e2956cc5526ec19222c9efc82f9e59aa870791c10f9108d377f45d6ca8906cac2a5e6ffc7318232a695a28722130cbb26b584ba093e2f898a2c24cc1833bf986178fde4ddd15680672cbb5c30f83aa
d5f62cad406555c46423a21f5a8f2a1d3d707642e4cb82f969ad9ea721f1089ceeb51dbfbdf54b6780f0081269b79d18b39406eec73ae5c47801907ee8c63a3c8d12180e217086e664b10b5a599e480aafb47aa96dac60dd1b20c3111f8ef7a455d52b91ba87be70aca27936eb61631c751d853636f34224a0935815647dbb
5607fb36a8f009c8796eb60750b2fe5f254bb809c0cda44248ced70833f8ec76ac7a84227fcf74d5d0bec701fab2fa34bebf46786b9cf2960918a1b73b6042e73f3b101c670c43467c099a15c29359cf179006690ee7ee9d5f3dfcf3f6f231bcbd6422e21300f8060e6919b1a7d4f564a3b8833cccd468d5ccd100c7b741e7
5b8c18b59ba3809ea2470bd4691deb8b1bf46fb0bf4207e4981ce21ec6fe7406997ecaffe4b65185f73747d4ee1b40ecd7007c38d21ee1890303834c78d6a626e4e6bce0a2732d09ee169b6c738393c04c9e3411b27076e098f28aa4c41b01e31308dbb4ce785c965bd8ca56a2f86e169cfe1c6fa20ed921b518cd81f7c166
7220ef2169220dcc1a996be2ece518186fb40d0b13587283097a6d4239c2f841ef59038ec604e54fa5e7f2f28fb07ee351e1a4d5fb9b7ad877190141491ffeec129dd5130131c4de7d96bd65c68baa34e7820a46807d98d5b1a835c28e2e911003b7cbfcc3d5a79786e21fecd9fcf4ddd670dc2fdf2afdfab52b03e8de1387
07fb524f66b0e1bb8034648ac0f9e3cd756d60cd6f40fe35780c86d49112baa8e0b71a416900ea39f78633b5d66c9a682878ade55fbf57fa713491a2adb84cf0a196cdee8324fa7c5e1cfcfa46fe0e7f5429c2294824ebc7357d4124e9840885553c2eea37cd5b91b1d463567e01d49e46207cb5fdc5329d7447595de3e53e
7273d6ce67e73cba101624a02c63e27f2f2a49a1c5f449d52eef1bdb4f86cc6f782b9cc297d079d477f2ed30f6f2a2dd8bde4ecae17f4d44dff858f98174d5274515cb5c1dab546cf05e1d22080779a019b5c3b46eb4819b8c745528c876b4faa1599f6a79abc8951261f6ed1e632556b82065f469d4e90b6f5352f6a748f4
1f2b6774eb952e18dc002fa26ce68f1a8f83f39f178aded68b7949f6dc7dacba9c3758b9c56d84c7e8b0bc44eaafc128adaa8a89153c6d6c46e9952ca842ca6ec8273d4a04cd5f8ab7089e88bae5dc5e2cbc5c2c81ebe9dc06c32b1f358a8e483458a2544f0e4fd13e0c4ff96baf1267ca3723d848722d440e8f49bb019cb5
dc3116c75449f8c6dedb128f45cd4b0eeb4e05abac168ec5fd785f6315e94c83c7cd4d8bfe50539e57e37b5972af99717e64a11524c51b7be0f8fb00d85f8e98ee323999a05291632776c3942c89ea74932df97f574d2bda12ad8b65cefa94d31496b8dc08f7cc1f330449a06081f687d80d6993b2e8553ca74181ec58aaba
126e3f5b357038f159c192d7541644401462ed77c2f71013273e7046a12d10a6e433e7af200cf8961d6f01ec0b0319c16ba3d8bee4c9a2da44510a96a5d2240216f0fb93af36c8f52615ab090b907a4af3c9b9ada0e981e32ba5db7e2581e8474c3ddbdcdd55447738467bc44944702b9ec6390fc97a4b0a1aef6d19b7bebf
e0c3ef4ea070d220a8863964ae56aeda85a7f2de28be74c177ed5a099f9a3abb59ad3467588ab3f3e330f898f20a6170be71f92c509e300f18b04cd3f0c905c5d5381e2a05dbff2b2d3d7960a427a342f767c5cb484ca17f7d4a80bbf48ba3626e6b53a9c0fd282d40757178ea7f328767fd7c1e9f4910dfa92a7da7445b4c
ce896cc8b4b6ee7e10330d909acfa2e0e14781103eba090eb20bf149326d66dd7e7df990abe8b766d81a8a6de6810838d8430ad696a9b5e7b54d8642a6a2306514c81057aa760d6387f0697cfdfdd989f040214d5b213775e932ad7ab6e24bcedf4101c46b518c9e89f05d5b007dbd5cb19a4095e74da924574163d5a7ad03
7cf971bdb4d636aba9126a99555158fc231e9bf6ce11a9dc7ad2e7e53199c900b42487cadacfa7f82e656699f1e73e10243885254c58338dd16448347aa03663f84250ecab15d979b9dcdf39a25f594fe0228a3469a2ee2714e08fe190e74825417e9196d2dc7dca24d2680f9799b8257739ad79288903ee8012e42581e024
cf981f92375622f0abc86e4aa7d3e8ba4751fc95937cc89b19a9bf73cd16b8b8e43a8b868ded6f7f4ac86dcdef5efa83bd94e3cd996870fd3ff087c8fafd45f0c945245321b632a328a1c2c26e2e53581b042252cc1902b2b21f5bd075cc1d5171aed4147ce019bffa163e0d12d8a75f093aa734e17d1d96af5900bf40df61
e0e3e46e79144d31a1d0770725765ca1353eaaba38d8f7ad18453992e9c71a1defda465858878d36a4cdb721079c5e800793f09c06b1e33f101741d3abbba9c63b1a32639e8a88cb8eb8a4f408c811e472b4e8fc148f56ab620428454359cb64005ffef8b923c0f5ed7038512fa649c0e2573bf696508eb29dd38209f69176
8e7d1c584f52468aec74c535319f40e169456cd1fa72c531fd8352d85ae86df5f29137e511709e6ad12ffc7131a6da2f28b230b4d75b53824fb85d35e2096502af8c43f60e4bee230191ce1c587aecac7768a388423547bb62d70c26d6435205cea05b32f6b5b89060815750c9656ad2f2107fe8ba8207471765fd965f013a
e38c4e2eb0fbb90c59b0ca3dc96cd95e7a63f03c24a9321549e0d634684fd6eb7acd07aa92cacf0f2bcb9600937260ceae101e218190bf1d5b7ef6336d70c32e7b1252183da84c64afd50922c16739fc907458d5b37f0ce854e2843a2cf179375e9c6d3a6a4208b867eeffedfde2439a84baf3a04f7de14c31c6591080975b
d1301d615991ebc9e8182fa2e3903370ba95fa6320c1ed67ea3e0a7846deab4d04d7001bc413071e39b33960e2baf2f78393973e053e946aea9bcf000ab0e14d8ab53ef5d6049ec3c5079bb8e410a1564a1fa41d15b2ddba504f09b7823feae46f210ad55ff880f09a56f6909813962c170b2d174656375c0db33da27808bc
a9ae9b0012afa90384f376a42e5f716645dd33c9bd974d32d8d9e8e3c1c1df395e965954dc8de776ad71dc023786f8014033f7b95f99f14e614ef317de029c4ab951e1bf608f4748fa4d11d645d65cbe4d5ce1d8ed74773c64b5b91e721d6fc23c4d72464abc1e84fde36f31f05b9bf3d4d262c7f3c91e76441d75e35f5cb7
87a5332d3a371ed44bd2e9f89024df45c7676a57fd60a06ccb8a12871d1c0a7c49bc8dfcc47b8a274aca604baf53b30710ec18ad4803a40911f12e81abde6293b8f8f0eb8c22f78da542e562a3725777071406990cc0d78698665899568e971dc620f687824786864fcb99ba49a323be1ca44cffbdf460369e1e86bdb26b18
ed30286771d1b7baf39c46c05aa1be3e38175e86adf106c02489dc6139ee48942e97acdb78c28a3e2dd0143ce416eca285f439d8ec4b4cb158253573f3aa6ccaf8415917a5efebab2183fa487b84d17c0c884a85a41b3d79adf47afbb7098f70f3e97f9501cec95c8f0c980416bb4a3ece953ec85479fddcbaaaa2a6250a0f
5862006a012a4e7d84dd2a4fad4496ef9e83cedb460a3dcac026f9c897f39452a678d38f22ac61770efa891d002efbe533885aef43e50ea145e3a660a701cb52354c8dd4dac4c4bffb5caf7042b82f55410effd409f2182cef1c47a49e713288684023d09c9ec3f3269af87602259e8f650a6d005c324bf1201b8e6e357704
6406fa7c45e977039ea067fc81624b51fad5cf62b3dfd3b11eb555422dc1b5bc3d44fd8f35c32ff955b2e0210c4ba7961583ad23a7267e5ec6e2d163fd9eb4ed450db76003d3451b4e0547289d635e893fa4eca0a4aba01ae11c0a60c972728211ef0fc710dc0c84a7aa38210e4ab176ed32c10a4aac56ff83b69cd13e54a8
4bfedf9c2153613ee9c967ad8092e87d07c194d100900827351746d0923a5fbd6c926dc7956d72fd2e1963ca57e81096cc960b45b2299781838e9ebc05fb4a8e8995db3ba7778ed6c52c5458450e7e86fc20b720e351bab3fe24e124649b677b276b47889f9bb98d0897c0f3de2b81743dd7813dcdc897e844f3d318f5a97d
464c182f880a08c97cfd40b7306f2a5743433cc7e860451ef3e22dbb70799d99fe1ff9c79d964db8905e5fa21fe00d3c1135dfe6a03c9aa74189511b5332c0e71bcf29423234895f0797e7bb520e9f73bbcd9965aa16f1754fea1b9c9ceade07a9f2b1ddfcf0aed2074e080cc96dd182b36ec33a3980e7247ea2e8daae511f
5cef29b0f9a68267334dd216393368f4ce15960d90ce423694f6201410acb1e09c569f3d80f7291376d219fd276cf119cfe01efb4a45d911701ab96ac8dc580787d37c4b1379d41ca10e6002b12655b786bda8c29af9f8e7ec99cf5b6297c19bfd7191084f74ce0c9f29c29815504030137d8bbde89c26ff8c636a8cbbc305
505e9e45802eb0b4939375249e1444c2a0f23236559f347a2f1a3878cd7864e4f09e83b2c3d354a39699ebf51a2dff9cc9eb1b4290ae3761e7676a3be217ad746f50784697b05200d0ad2af2fb9694de341e80df757f7e5846fc51de6c689cf577f10ded6fb7710172e3361033fefd6f6ba633c6a1d5dd39bc7287427b8ce9
8e553e1d30654872ca20e648814f93978bd1c85edb6ab17258b36d27cf1f267ab76e17b1884da433a97647895fc504ba775c6d74466bebd56f22b1135bf2c96c5b2dfa95ca9a4bd7860e27b7508a7f34445d066126480598ca4aab208ed50400824ce590cce2c286de5b0a7d1f007f6a9cf9fc09b37221e210168e225cb9f2
4b065000148ff2e17d6a8622886274ae66ef46517c9eaf3df6f021458f6d1ea1052632360af799686882e32c5733aee82f5201a11945543eb06128711968f7a569604c8f864d7f3d684214984d8a1ebe740602c0da632ef85f014643964d81c05393843345eddecb6a98563f0f66aed01ea5f4a479fb92608b7780a61a4557
3204a56cc8c98459ebc0d623bc389800ebe532173cc3ebef7d25c24575bad0a58ca1417a743f2f94b369c770514c83e1f453b6fa482dcc038467fa0beaa0458b62e52c7654fd3d9bd6f81396458ad15016ddfefc9261ae9aecc827a71697e9f2333fbfa33a2c89bcbdd1a230a47c148613bcea41c66e7dee136e0b1695f0fd
1d6ffb8b3e7a580c170aa819bbda2384592db6a1aa0b3308aa84df73f995ef7d194242736feae231b238d94f47aaec69ff0d29fc106ff4ab4140b5dd57601cbdf799854b5a88b0ea772c525815ceb089c0f3f38965b2f7246d0a309ad29be41b3f43c5cb2f774464d7cf483a21414fd4a3b4d6120e9dc3c14703906d83a651
09bc75e920db144ce01055c5d409d470e1c7c9cd9f1f279ed2b823c080427c3d08f5a145c7a7544132d510820ad0d539ba96bb18e5fc801201abb84084f3a32b07a6b19ea7623211d61f55120090a458bfc20388e6f2c028d90f485da3604fb43e5c2497acb59cf2c61a19af1c125826ce773474fe9f00562aab2c07e5723b
2b3730d43ef4c4cc90f9efec8bf82324e8caf15f3c3771e95c8e8e68776dc5a44172fc3ae881027206e5b5b20a509b29889aafc5b8fecd18c24599474d40ddad9b66587cd4424297f73ea3729112a4677710a895521b1e925aab0b511cadf6379bca824fd4b049445f0b8f807d92d004d34f3e2282d1d33218da8cb4e3d2e5
fae6c6a377c95dde4ce297a9e0264f94f0b8e9c0556b29311fac2f728a614cb5b54ec665f40387a893e87cf317ede27d8d96f67fe2413ac55d7ecd06a75f8168fa544aaca061524804de851afd03923762ad2e90fd5b42b5c62f1be4a4f436aadcf9005b4f91d1e6c4e6b263c15385b8c63d39e72d9460b6c7ce8f737b9c52
cd71e626919e05812c32c33adff1c35931bb58bf4af4ea132d261f94cb0dec62aa13814fc86e97fe2b9a526840f08b559596f43c025a85e2741263f038a30e25d896d8fc6932277b134bb23ce14f19dc5a24b88d2be03eaa10a4cb22a8a0b01bb735efa62511f9f1e8485c90d6449e38943abd2fc273e5281f9bcdd62f268b
43e245c5521aecbfcc8754325b673026667328a9f66e822d4e05e3ea3f7e54b038f7986ca5bafa56a1bc298c7afbb0b1b00ce855de25d721582fe116a893dc9285d01192dc51f314b21c21db365f939e3d2611a9e709c3bbff0e057cbcb98a0842424e7904516d445ac7d2bf080fe26d6ff9795befaa40cd5fedbe2ea4784c
75206f89a1843aaa6b68287785cfd3eb9f6b113315d8687cd06ba1850d5bf75d571957dddf6508c3546107c8255cb07557a24c0160dc1a5b818b2a3d78ceb9cb619debe854474d1fd2b6cb4534809bed51b5827db3f3873cde7f231640930857563375c145ee91464589d6366f4bcee4caa71460c5aa3a2820d16e22375e87
6da451e4d77bb6fa9111546b1ea522631264918a562f13850c235ce09bd2ec97e6ef2a93b982cc89807e05b6bbc9686ef5ee43c10dde299880f373022b6a29afd3658504a4ae1927a2d4d91607347597e04e3069a2a96434408c3803790efeeae6a857ee5fc273872d6af0f8ff021a31fe8cb0a9615f5f71390153b106f0bc
a833f010588a4295dfcefb37c5c9fabbaf375ea878b3dfe78e1fdcac576b4bee612171c78b5c01b90f921240e54d43d51895725fb82ca6c11d8fcfee7e6c2511e0b24f35f1e4a7651ed189a6da2c0c8b754a302682576349e8c02487d77b3cb79186c5e2920fd1d66549db8eec57181f6af4d939f3ae5725daac301bd5c4c8
39d608de35c1c29687a5f1c5167e24fc530c374496143a8629a21856654bff22e6898e40ebba266d9e40a574126e33be43445c1af17b35b370600b23f43bd99b3adc1ad55fd65ae8be289425ebdf33abab4253aeac2f04e522943b0273973543bb91a6d9edb2ae6b502b5b9ab3a676e4925075b245d1e1ff3520c82a5a6510
f39bc381336635fbb590e38b800574a2fef05014c99546e2ed9ac248e4ba5b660a57c6040ea4f60d2003d9da7b5ed8e056231e83ac94493b15d1c4fd9e4a1ad40c66a80e57ad2e17ee6bf12f1f82053a78cd78a893bbce5360824d0c78c40e8ebfc0cb1bf466d33e614809832774a7c47fbe29a1604cb252c5585311a99f08
32cf18f1f1153aa54a6bfca9fdd6fb43271788296471c89c7f60f9820366f01e86eda5b1499230898e0baac039de7adfac88605bfb925b8343789924615a37740e3216a0c56a5f4b4045bf028536eb29c878695c374a7d9b57cab6db9e05bdb8e480a6c7229c2a25b31d5cfc9c2286833deba5c53f8fd5734296b08c9d7bf1
1822c41dc3e39de9a242a224243a3be9e4c41351818aa0912b2238c27459c34555d97847bda992cd296eebb9ac1596c32dfc9080e722fb2168f828298f905c767691b8e2613a94e1648d5d19947011403a31c3d5a4594f771ca7bc44f1d7e430ece805fec05705a6c62dea0b670d9d12ef8fc2d68c32f1141b7742e7ee7ce7
11eda743587145e333d7a37d46e7e634e688ffc67bcfcfa41053ed22e9a03543b8145fc18923ab6df59f89a75c79775485b2484769cbdc28a940381cab1c80af798857938d07bdd6b5832ca35e4d74c9b3132e70c436e95347fb9eb5e95e10ddf7e16b6d1cf2534aef595560862fff2418ec53e1d9e926c86587a3c77461f5
781771bd41c87b279953fca75049e69b04358bc0eed210482f075d33bf157253b4374dfa2e2fa769151c71d8d703133fcf6774ceb5e5c7c8089103f1b8893002b391a571cbcb2103406326786032cb2dce3f80ada50ad901ad6ee6e3575ef2baadc0550f0e4d13b36f8f54fbed8441a323ee48562ab1491ebe102138479a8b
5a033ec7a6f388bdc8676db311d7e0dcde0c9115720db39b27ccce1fc1f7bd2bbce860cfed78122753b701b45838ef659aea679c12fa441f8a5f38b826a8a29d1caef1755b2db4d35ce5ef5b2b433d5c8439e91d16ac091e5aab9123ccba5aa0a14ad5dcd7e4b5dea0091f58fc9b2ef74b24134eb2405e72a3e49992dbda44
48a26f43c5cf38b377bed2dccdfb2f354a3add3f956e1e5a6d0340dca2ea2960809bf603f3a85c054ad1f5acff84c07683840a4979a7dac780b3746c2bd4e95b82c624c2589714dd54bc3d84e544fe714b1724045281ca84e9d47c5e11d9ddf1f5fbbc9749fe68ec6c7a2ffe35a11c9defdbdf6217111cae64374c05a997bc
8ebbc965ddf1b60109b0db277fa97bf513fafef1d70086b02748fe7e2a408b9c781b4693454e2bb008ee3afe036dd007edd51a449073d35238a77f1bfa06d755d8b9689f16a28fa240d21ff6a8325cc62361c08948c975bf933ac7231530b9c4c73d5f02b5500b7d16015bc31bb52d418ecdcd304f60acc4cc2ee03eb9cebf
a1d120e1b23a474b9afaeada8af5ebef21c67305231a28e2de9786316898dbda05e1a51730a328f42a9b2e5065b1876d03e4312ff4b21b8eac98abb6c9e48013d018a1b76c8153d7c843fc64db38ccaba418fafdf29d3394c89446510fe49690c15770b045763e4eca1c8de8dc15c37b8061b5d9388ceb7aecd89e7a86dbe8
654cf4e56f259d3169e88f1e18f4ea2e905de0c338e5a29eea07ee16c47fe284c8ea424bbd3ca4efa8cd823687a60a976104b1b7f7f252a118b6223b1d99aff4522c90ff2da2cf7671c1ab5893bc0e694b878c01019358f3e5201705372dd13ddb72c7bb4a68cbab0e8c42c1e36e3dc071047a1e955c8b222c7c99dce6ca64
6cc2b1c859d0e4bbdc9dfd031c942eb89dbcb9d551636d2723ec86506322d93cd3841e61f97072b6ce7b6ef553b4cdc810fd35152fac55e84f8fcdcffc84e6029af5b41a3691b9dc11e6121ce06fbc6f01e4249c78aa45253be8c3bc2e0e1796f06da403611a0aa6fb63b942e72fcc32f9e4ee409a9d979dce82815d415ab5
d36a7905c5f1212bea53329ba07b3af5ba26b5a5f14c67789ccb8bb72f4a8159000c3844ab2e0231b13794e7d736d81dfd26e1210fa805db099be91bdd3a0b8394e940a83920e8086f45d8f518b774c7184ab09fc66db68ecc21029915294752d5da2997ff4333ae3ad9f4030255601992934bc5fb18c38e75429c014f86ee
3787b883aaf9996c8bbf4676138cd01a4b01e9b85b2b26aa9acecddcdc0f2007c4ad7940a185c66b4cb149462f302f74cac6f2ffe3c9418dc911482efc24e8f88b15cb8cf977f45c67c9cd3cd6fa219802953b6b3d197a61cf978f5fcbb94a9ca8d21fb18e1e6f2a6069e75aaf3f417c39de36df797d2fcfc87a66ce5fbd8f
476cffa41f9cbb00f24ca4b5a3a2f859763d5c658316d770f42c1947b8d298763933477f47872d3b531bf1023723b82700d12c8c3b8bfa9614925dbb3f2056cb417c8977de2fff516d5f554636e321c9cd97be593d535eca3bcb31f379b30fce56813067777564e69285f52408bf9e5bccc32c2c4f46342cb200c7d9f275e7
d34f493e07c27c031613f587a58cb8cab7a2c17793536f34b00ec1b07c0a540142f1f60bafb8ed9f310891706f774a5e8a53b6680166788def1719c3a037d43e61906c64702067a7279b62735e54e662f5884627769809bf2bfc6bb00ef123fa8711de750c3a813e4d44d2939cf3ea46471e3752dd699913473fed3d913a32
25bc79a76665b4ca0a4df57ac430157dbc7c85ff47dd9dc8fc917b506d37107922926635baf5e633751f2322c78c10bfe5acefa6d2fa9e5633df9e104667424107da6db0462121bf03a5410a8a7bcc9bd5a85d3ef500296ed284679ca02389bf449cd542e00c5b3a223ed41e899b9c3ee143e15d656ec98eec5aafd91352cb
8124a04465f18b89b4677548fa5c1af6bad27c61e43569ec34fb67eb6c83d93fb81c70e103ea15879440aad614f85ff8219f2531e9933053f16b3aac114330313f299d4e7818511e7d72c5391ab5a452e650333289872d3ad7f44c05b2af56d39c1b9b58b21e88676b566c5587001cc8c005a4f6929323af4ea8a0269f1340
d4b4eeb004af50db07501f74d918f868ec43c95a3c6676d0b6e36280755285df0bf4f135d3228791757cbfcf1df512f683ab8b1a4c3fcbea783cc696bc00c6dcc86c9fea85faf8487f90d8b3fa19d06ad1fa58a5b4597489c39d556c800a239107821b6c5a29b81cd8c5900844b59fa586d72ea1e0ee2c5634015a13879935
3454c485d3b5b82b6a6fe7a37282feb12cfc23d03bcfce409074da8edfbcb0e7e42109b924252b8d93b40251a9ac7a33d223c43c709242a39a142d04c507171500e04db82d8e5191e4a32152e7812c7bea44158db7fedff2f3b73c46595b455588438dbbbaefdc75823780c88fd526a1ab3445583742625d4b3852bb5b96f8
05f3f307b466999986567e7693099564b65f30b2bff477da980dac1f8fa6b26c5376bcb342701372450479ce0e36ade6cfcacee4d2111d874dd90492a518841ec28e1e50f608bdd959b19af1f20dc6c0ffaeb0396f1cc6a8c014f8d5dff6d4c4cf64b10dcf1ba13c42948a3d24ffa2df56bf1710a9e00dc64da9629de776b5
fe3b46af4d8fc3cb69094a632268ec9407bf279f7b0246963d09d1b65b28e816891d912f597eba3ac7903b97965d320535e508309082784ad1cc0a7ab902cafea5ec339dced89508e4bbb2fb948fc6ac951dacf459c4c44b2574d0813be00a29499c40141bb0b18410e801b09d88b928f6cd1abb4311152690ceb52f717792
5d581defb97567022036cfa3b26cd8fdf78860f1f9c2cf8ac19a28bf52e3d5ef672b2acace4f709c2eba5c9d63517609771207f8f7b51de1616181142fe108179f5867c530cde7cec5ee33887cc47cc716c8c4309e10cce2658d907b5ce84d4ce02e08dbafd09cfd8e48b4b77defa8362966bcbd8f2159406e749c60ad2a94
3afb46603d0c6fee550bed2c16026764a9850e2d1612db8dc5685fd4e18bf2fefba0ef427c6ff6dcee134d890ac49d28ada358b938effe16b7be37c7548ef91b985b9670678d03d7f8c2a0d9f2a0d4400b9252e579afab41c410b7f48c4d246853acce4e4f2a0838c7a13ad007149e6adbcc7cd5330213eab225b75930e724
78a2360d2b3ab48b72ac298ec0d0ed80357b9d9dac43544fc8f0e7de8d8cc2a7e80f613ddf2952653b5c0a01f014a38cdd341d324300e4383d058cde6aafb4316c2ab6522c18eb172c3c0d0a48066308bec2ea86be81668d50146547bffd994089c95a7bd004642f2cef1c218c6a8dad6e3f767d76dde033f7d7b679a2c24e
1124f58bb9ee736722e8eb7decacab52d7eefbf2bad5dc9d0e79d44a9916d57def6c08ad44b9a34377b4fbb7af59252b2fba88ae8b2a5f62fc21f8ac48550f44ca9f1ac585193ee5514388e02dfbfa7e1604f8a7562ee58371300b3143d56b033692c78755b38b7ff9783d45b053b84de5f63945639c07a111afb5a3448056
d7cefd7c0048e96cead4cf3acd60e134d44e172074ff8e20a6d8869a6e76b9fcda62592eac06d90e0928c9cb95a72be62ab65ccc2b2cbb7a264ba6e6a10d34feef8f91dbf802a785523b1baff4de1bbbe6384fbf7bed86bbb96b58a82eefc64ef91821bee8a0e83f8e0870a343233b317f6796eb4823b5aca019ed55821e13
98de838ff6df184d296b2441f6e75a4828c987cd64980feec2098e03dc1980c77328c2234d2bfab6d042ea4d08dcbbf7c24b66c92d15882c92414329c75ef52424aa91c2a3add10f67f5b32c8dd78bbe554144e564e2138eeddbc3aa8c21475f13c552bd6453ca5852cfb923cb808011d9b29edd74daf2039a5354d1c45f58
c874150b540e555c69fbf77e2a3c3008c15ec603bf85c85ab30cdd3b3fc17c9d55f5c2fe9984abb035830b414f09c505411959744fb953e2df2613a5f58aebe31aa9b32dbe0b8ba5dab4f86ef8a4afa3cdee1cf0babd2f0c268a872bdc5328c8a597508da7ba7ce7dfefef4bd978bc0311e6dcc5166266dadc4bf3fb4650d8
e6e248eb18e10dd82353ff6ba06423a2d1e8edd3bb52cfd2ff39bbe2db0c4ebbfcaa66f8070178e5599b61a15d03f7ea0c7032cff07e8adb712820b894456a13645370917365c4adf11042a8699817f77e4b4cc88ae8e8318a6ccfd02f7f4948ae2172d6b1f1ce3aef761cf8394f54b155837fded47ec17d9259ccac14233c
0fe851f4b0c05b7f4da926653ba8af6712d4471287ec4a3b812ebed7ae5f7dd740ac464f324ebe911a161e31328dab081bb11fe843fa081ac5a12e66f8bb142c741fa5b7ec81cbfca0d2422b4944217b178f4d8510ba691cfd7389d2891a3753f9697daee1070120b0f1af5d2784d9e1e590e80159d9741b0be48024fc69c9
3b938739f359f9b29c66a83c292c52f22ac96df34fc76e1e42ec6d33cf6381a721b7f7418ca7c0950a9b20071c6afa8f02f8b4eea8d077f69b42f31b2a6d2e580c95077e19a6b68e373d4e6645388fe07652186cbe2de7645baa8560077451edfb506cd2408dbf3d6b479e22f3a53eede073f3b37649420ec62cf995d98138
48e7ad0f13379c87e9744ae1d362ec25c2820e0acf4352cca3a8b026fc9f0271888f748920fc8a291467f84864db08d48b15c3bfeb6704507d628c60cd7d2d36fffeee4cd14370ed20d728f3492381a12007f94d0b930cd5f5d9c0edc18c4cafd7042b67da6aefa7d11b059b8e27bbb20ca7b14facce25b103b869c5391ce9
3a319ebe5c3f2c84c6e3a7abbe5c22a6a424ceb7453e6be1f1ccd50852435ef6cb55a4e5e033967ceffa2d942d585ee279eefa0a458e7cb51c661a58274f99584d96a1776a9818777484bcd7c6a7fed2b96d7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark
%%BeginFont: Helvetica
userdict /Adobe_CTFauxDict 30 dict dup begin put
/$$$SUBSTITUTEBASE /AdobeSansMM def
/$$$FONTNAME /Helvetica def
/$$$UNIQUEID 0 def
/$$$FONTBBOX { [ -350 -265 FontMatrix transform 1200 1075 FontMatrix transform ] } def
/$$$ITALICANGLE 0 def

/$$$CAPHEIGHT 718 def
/$$$STEMV 88 def
/$$$XHEIGHT 523 def

/$$$FULLNAME (Helvetica Substitution) def
/$$$FAMILYNAME (Helvetica) def

/$$$UNDERLINEPOSITION -150 def
/$$$UNDERLINETHICKNESS 50 def

/$$$HDESIGNVECTOR { [ [ 0.298 0.575 currentdict /ConvertDesignVector known 
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] 1.0 ] } def
/$$$xDESIGNVECTOR { [ [ 0.312 0.501 currentdict /ConvertDesignVector known 
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] 0.983 ] } def

/$$$INFODICTSIZE 256 def
/$$$EXPANDDICTSIZE 256 def
/$$$COMPRESSDICTSIZE 256 def

/$$$DOESSMALLCAPS false def
/$$$ORIGFONTTYPE /Type1 def
/$$$ASCENT 718 def
/$$$DESCENT -207 def
{{(Helvetica)(_)search{exch pop exch pop cvn dup findfont/FontName get eq}{pop false}
ifelse}systemdict/resourcestatus known{currentglobal exch /Helvetica /Font resourcestatus{pop pop pop
true}{exec}ifelse exch setglobal exit}if FontDirectory/Helvetica known{pop true exit}if
systemdict/SharedFontDirectory known{SharedFontDirectory/Helvetica known{pop true
exit}if}if systemdict/deletefile known{{(%font%Helvetica)(fonts/Helvetica)}{{status}
stopped{pop exit}{{4{pop}repeat pop true exit}if}ifelse}forall}if exec exit}
loop{save true}{false}ifelse

ct_EuroDict begin dup{/Helvetica dup findfont /CharStrings 2 copy known
{get /Euro known{pop false exch}{true 3 -1 roll}ifelse}
{pop pop false exch}ifelse}if end
$$$SUBSTITUTEBASE findfont dup maxlength 19 add dict begin/SubstMaster exch
def SubstMaster{exch dup dup dup/FID eq exch/UniqueID eq or exch/XUID eq or{
pop pop}{exch def}ifelse}bind forall/SubstitutionVersion 3 def/FontName
$$$FONTNAME def/FontType 3 def/FontBBox $$$FONTBBOX def/CharBBox FontBBox dup
length array copy def/xtfm[FontMatrix 0 get/mul cvx FontMatrix 4 get 0 ne{
FontMatrix 4 get/add cvx}if]cvx bind def/FontMatrix[1 0 currentdict /FontInfo known {FontInfo/ItalicAngle
get $$$ITALICANGLE sub sin } {0} ifelse 1 0 0]def currentdict /FontInfo known {/FontInfo FontInfo
dup length 10 add dict begin{
def}forall/FullName $$$FULLNAME def/FamilyName $$$FAMILYNAME def/ItalicAngle
$$$ITALICANGLE def/CapHeight $$$CAPHEIGHT def/StemV $$$STEMV def/XHeight $$$XHEIGHT def
/Ascent $$$ASCENT def/Descent $$$DESCENT def/OrigFontType $$$ORIGFONTTYPE def
$$$UNDERLINEPOSITION UnderlinePosition SubstMaster
/FontMatrix get transform/UnderlinePosition exch def pop $$$UNDERLINETHICKNESS
UnderlineThickness SubstMaster/FontMatrix get transform/UnderlineThickness
exch def pop currentdict end def} if currentdict/StrokeWidth known not{
/StrokeWidth 0 def}if/dvlen currentdict /FontInfo known {FontInfo dup /BlendAxisTypes known
{/BlendAxisTypes get length} {pop 2} ifelse} {2} ifelse def/cvlen
currentdict dup /WeightVector known {/WeightVector get length} {pop 4} ifelse def/str 1 string def currentdict
/$$SubUD$$ where{pop false false}{/shareddict where{pop currentshared not dup{
true setshared}if shareddict}{false userdict}ifelse/$$SubUD$$ 24 dict put true
}ifelse $$SubUD$$ begin{$$SubUD$$/bp{bind put}bind put $$SubUD$$/bd{bind def}
bp $$SubUD$$/pwinstr{3 -1 roll cvi 32768 add dup 256 idiv dup 256 mod 4 index
4 index 3 -1 roll put 256 mul sub 2 index 2 index 1 add 3 -1 roll put 2 add}bp
$$SubUD$$/pinstr{exch 3 sub exch 128 add abs dup cvi dup 4 index 4 index 3 -1
roll put sub 256 mul dup cvi dup 4 index 4 index 1 add 3 -1 roll put sub 256
mul cvi 2 index 2 index 2 add 3 -1 roll put}bp $$SubUD$$/gwfrstr{2 copy 2 copy
get 256 mul 3 1 roll 1 add get add 32768 sub exch 2 add exch}bp $$SubUD$$
/gwtvec{[3 1 roll cvlen{2 copy 2 copy 2 copy get 256 mul 3 1 roll 1 add get
add 256 mul 3 1 roll 2 add get add 65536.0 div 128.0 sub 3 1 roll 3 add}repeat pop
pop]}bp $$SubUD$$ /GetGlyphString{dup InfoDict exch known{InfoDict exch get}{
dup InfoDict exch 3 cvlen 3 mul add string dup 0 UpperMaster put put InfoDict
exch get}ifelse}bp $$SubUD$$/X{GetGlyphString 1 pwinstr 3 cvlen mul add dvlen
2 add 2 roll currentdict /ConvertDesignVector known
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse cvlen 2 add -2 roll cvlen{3 -1 roll pinstr}
repeat pop pop}bp $$SubUD$$/Y{dup ExpandDict exch 4 -1 roll xtfm 2 div put X}
bp $$SubUD$$/Z{dup CompressDict exch 4 -1 roll put X}bp $$SubUD$$/L{dup
GetGlyphString 0 LowerMaster put}bp $$SubUD$$/S{CharStrings exch get
CharStrings exch 2 index exch put L}bp $$SubUD$$/R{3 index 3 index CharStrings
dup 4 1 roll exch get put dvlen add copy exch pop exec 3 -1 roll pop exec}bp
$$SubUD$$/RX{{X}4 R}bp $$SubUD$$/RY{{Y}5 R}bp $$SubUD$$/RZ{{Z}5 R}bp
systemdict/internaldict known{1183615869 systemdict/internaldict get{exec}
stopped{false}{dup/setweightvector known{true}{pop false}ifelse}ifelse}{false}
ifelse{/setweightvector get $$SubUD$$ exch/@setweightvector exch put $$SubUD$$
/cbwa1 false put version length 4 ge{version 0 4 getinterval dup(2015)eq exch
(2016)eq or{systemdict/internaldict known{1183615869 systemdict/internaldict
get{exec}stopped not{/CIDRun known{$$SubUD$$/cbwa1 true put}if}if}if}if}if
$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict
exch def/code exch def/glyph Encoding code get def/cshare currentshared def
InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known{/glyph
/space def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict glyph get
dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{BlendsArray
scheck setshared dup 0 get SubstMaster  dup /WeightVector known
{exch makeblendedfont begin 1 get
/FontMatrix exch FontMatrix exch dup matrix scale matrix concatmatrix def
$$SubUD$$/cbwa1 get{Private/UniqueID 1 put}if/PaintType fontdict/PaintType get
def/StrokeWidth fontdict/StrokeWidth get def /@SUB currentdict definefont
setfont BlendsArray blnd currentdict put currentdict end} {exch pop
begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse }if begin 1 gwfrstr
xtfm 0 CharBBox aload pop setcachedevice fontdict/PaintType get PaintType ne
fontdict/CharStrings get CharStrings ne or fontdict/StrokeWidth get
StrokeWidth ne or{CharStrings fontdict/CharStrings get eq{true}{fontdict
/CharStrings get scheck}ifelse setshared currentdict end dup length dict begin
{exch dup/FID eq{pop pop}{exch def}ifelse}forall/PaintType fontdict/PaintType
get def/StrokeWidth fontdict/StrokeWidth get def/CharStrings fontdict
/CharStrings get def gwtvec SubstMaster /WeightVector known {/WeightVector exch def}
{pop} ifelse /@SUB currentdict definefont
setfont fontdict/BlendsArray get scheck not currentdict scheck or{fontdict
/BlendsArray get blnd currentdict put}if cshare setshared}{currentdict setfont
currentdict scheck setshared gwtvec currentdict exch SubstMaster /WeightVector known
{@setweightvector cshare setshared}{pop pop}ifelse
}ifelse ExpandDict glyph known{ExpandDict glyph get 0 translate}{
CompressDict glyph known{CompressDict glyph get 1 scale}if}ifelse mark
cachestatus 0 setcachelimit 0 0 moveto glyph glyphshow setcachelimit
cleartomark end}{0 0 0 0 0 0 setcachedevice}ifelse end end end}bp}{systemdict
/rectfill known{version dup length 4 ge{0 4 getinterval dup(2013)eq exch(2012)
eq or}{pop false}ifelse{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop
0 setcachelimit currentdict/XUID undef}bp$$SubUD$$/dct2{setcachelimit}bp}
{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop 0 setcachelimit}bp
$$SubUD$$/dct2{setcachelimit}bp}ifelse}{$$SubUD$$/dct1{}put $$SubUD$$/dct2{}put}ifelse
$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict
exch def/code exch def/glyph Encoding code get def InfoDict glyph known not
glyph/.notdef ne and{InfoDict/space known Encoding 32 get/space eq and{/glyph
/space def/code 32 def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict
glyph get dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{
dup 0 get SubstMaster dup /WeightVector known
{exch makeblendedfont begin 1 get /FontMatrix exch
FontMatrix exch dup matrix scale matrix concatmatrix def BlendsArray blnd
currentdict put currentdict end}{exch pop
begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse } if begin save exch 1 gwfrstr xtfm 0 CharBBox
aload pop setcachedevice gwtvec SubstMaster /WeightVector known
{/WeightVector exch def} {pop} ifelse/Encoding fontdict
/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict
/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph
known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict
glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1
index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if
/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul
load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}
for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0
moveto str 0 code put str show dct2 restore end}{0 0 0 0 0 0 setcachedevice}ifelse
end end end}bp/currentshared where{pop true}{false}ifelse{$$SubUD$$
/PatchSubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict exch
def/code exch def/glyph Encoding code get def/cshare currentshared def
InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known Encoding 32
get/space eq and{/glyph/space def/code 32 def}{/glyph/.notdef def}ifelse}if
glyph/.notdef ne{InfoDict glyph get dup 0 get/blnd exch def BlendsArray blnd
get dup type/dicttype ne{BlendsArray scheck setshared dup 0 get SubstMaster
dup /WeightVector known 
{exch makeblendedfont begin 1 get /FontMatrix exch FontMatrix exch dup matrix
scale matrix concatmatrix def BlendsArray blnd currentdict put currentdict end}
{exch pop begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse 
}if false setshared dup maxlength dict copy begin 1 gwfrstr xtfm 0 CharBBox
aload pop setcachedevice gwtvec SubstMaster /WeightVector known
{/WeightVector exch def} {pop} ifelse/Encoding fontdict
/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict
/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph
known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict
glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1
index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if
/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul
load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}
for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0
moveto str 0 code put str show dct2 end cshare setshared}{0 0 0 0 0 0
setcachedevice}ifelse end end end}bp}if}ifelse}if{false setshared}if begin
$$SubUD$$/@setweightvector known{/BuildChar $$SubUD$$/SubBuildChar get def}{
/currentshared where{pop currentshared}{false}ifelse{/BuildChar $$SubUD$$
/PatchSubBuildChar get def}{/BuildChar $$SubUD$$/SubBuildChar get def}ifelse}
ifelse/UpperMaster 0 def/LowerMaster 1 def/BlendsArray[$$$HDESIGNVECTOR
$$$xDESIGNVECTOR]def/InfoDict $$$INFODICTSIZE dict def/ExpandDict
$$$EXPANDDICTSIZE dict def/CompressDict $$$COMPRESSDICTSIZE dict def
$$$DOESSMALLCAPS{/CharStrings CharStrings dup maxlength dict begin{def}bind
forall currentdict end def}if
/W 0.324 def
W 0.335 278/space X
0.292 0.64 278/exclam X
0.309 0.464 355/quotedbl X
0.308 0.48 556/numbersign X
0.312 0.438 556/dollar X
0.29 0.662 889/percent X
0.304 0.52 667/ampersand X
0.297 0.583 222/quoteright X
0.315 0.414 333/parenleft X
0.315 0.414 333/parenright X
0.322 0.347 389/asterisk X
0.31 0.456 584/plus X
0.284 0.726 278/comma X
0.284 0.726 278/period X
0.351 0.119 278/slash X
0.319 0.373 556/zero X
0.303 0.531 556/one X
0.319 0.379 556/two X
0.319 0.377 556/three X
0.319 0.371 556/four X
0.319 0.374 556/five X
0.319 0.375 556/six X
0.311 0.448 556/seven X
0.319 0.375 556/eight X
0.319 0.373 556/nine X
0.284 0.726 278/colon X
0.284 0.726 278/semicolon X
0.31 0.456 584/less X
0.31 0.456 584/equal X
0.31 0.456 584/greater X
0.291 0.653 556/question X
0.265 0.95 1015/at X
0.29 0.658 667/A X
0.296 0.592 667/B X
0.294 0.618 722/C X
0.294 0.618 722/D X
0.283 0.733 667/E X
0.288 0.678 611/F X
0.286 0.701 778/G X
0.298 0.575 722/H X
0.298 0.571 278/I X
0.289 0.675 500/J X
0.288 0.682 667/K X
0.296 0.595 556/L X
0.314 0.417 833/M X
0.297 0.589 722/N X
0.294 0.614 778/O X
0.294 0.613 667/P X
0.294 0.614 778/Q X
0.287 0.695 722/R X
0.287 0.688 667/S X
0.289 0.675 611/T X
0.291 0.646 722/U X
0.291 0.646 667/V X
0.303 0.523 944/W X
0.291 0.644 667/X X
0.283 0.732 667/Y X
0.288 0.676 611/Z X
0.328 0.302 278/bracketleft X
0.351 0.119 278/backslash X
0.327 0.305 278/bracketright X
0.334 0.246 469/asciicircum X
0.303 0.529 556/underscore X
0.297 0.583 222/quoteleft X
/V 0.305 def
V 0.569 556/a L X
0.311 0.51 556/b L X
0.318 0.445 500/c L X
0.311 0.51 556/d L X
0.307 0.554 556/e L X
0.335 0.297 278/f L X
0.313 0.496 556/g L X
0.312  0.5 556/h L X
0.316 0.465 222/i L X
0.316 0.465 222/j L X
0.312 0.503 500/k L X
0.316 0.465 222/l L X
0.311 0.51 833/m L X
0.312  0.5 556/n L X
0.313 0.491 556/o L X
0.311 0.511 556/p L X
0.311 0.51 556/q L X
0.329 0.354 333/r L X
0.303 0.589 500/s L X
0.344 0.226 278/t L X
0.313 0.492 556/u L X
0.311 0.512 500/v L X
0.323 0.402 722/w L X
0.312 0.501 500/x L X
0.313 0.496 500/y L X
0.296 0.668 500/z L X
0.311 0.446 334/braceleft X
0.329 0.289 260/bar X
0.311 0.446 334/braceright X
0.31 0.456 584/asciitilde X
0.272 0.869 333/exclamdown X
0.315 0.414 556/cent X
0.316 0.403 556/sterling X
0.368    0 167 0.986/fraction Z
0.313 0.434 556/yen X
0.305 0.51 556/florin X
0.303 0.53 556/section X
0.32 0.366 556/currency X
0.315 0.411 191/quotesingle X
0.319 0.377 333/quotedblleft X
0.283 0.738 556/guillemotleft X
0.289 0.672 333/guilsinglleft X
0.289 0.672 333/guilsinglright X
0.324 0.336 500/fi X
0.324 0.336 500/fl X
0.284 0.73 556/endash X
0.299 0.57 556/dagger X
0.299 0.57 556/daggerdbl X
0.284 0.726 278/periodcentered X
0.308 0.474 537/paragraph X
0.319 0.378 350/bullet X
0.296 0.593 222/quotesinglbase X
0.319 0.377 333/quotedblbase X
0.319 0.377 333/quotedblright X
0.283 0.738 556/guillemotright X
0.295 0.602 1000/ellipsis X
0.323 0.339 1000/perthousand X
0.28 0.769 611/questiondown X
0.318 0.387 333/grave X
0.318 0.387 333/acute X
0.318 0.387 333/circumflex X
0.318 0.387 333/tilde X
0.318 0.387 333/macron X
0.318 0.387 333/breve X
0.318 0.387 333/dotaccent X
0.318 0.387 333/dieresis X
0.318 0.387 333/ring X
0.318 0.387 333/cedilla X
0.318 0.387 333/hungarumlaut X
0.318 0.387 333/ogonek X
0.318 0.387 333/caron X
0.295 0.607 1000/emdash X
0.291 0.652 1000/AE X
0.304 0.517 370/ordfeminine X
0.296 0.595 556/Lslash X
0.294 0.614 778/Oslash X
0.298 0.581 1000/OE X
0.309 0.466 365/ordmasculine X
0.307 0.549 889/ae L X
0.284 0.725 278/dotlessi X
0.316 0.465 222/lslash L X
0.303 0.592 611/oslash L X
0.309 0.537 944/oe L X
0.299 0.562 611/germandbls X
0.31 0.456 584/minus X

end end currentdict end
/Helvetica exch definefont pop
ct_EuroDict begin
{{dup findfont /InfoDict get /Euro known
{/Euro ct_AddGlyphToPrinterFont}
{ pop restore }ifelse}{restore}ifelse}if end
%%EndFont
end
reset_gvm
/REKTFI+Helvetica /Helvetica findfont ct_VMDictPut
/REKTFI+Helvetica*1 
[53{/.notdef}rp /five 73{/.notdef}rp /minus 128{/.notdef}rp]
REKTFI+Helvetica nf
REKTFI+Helvetica*1 [7.28424 0 0 -7.28424 0 0 ]msf
91.4079 115.013 mo
(\1775)
[4.254 0 ]xsh
165.464 107.375 mo
165.464 106.009 li
@
165.464 .488525 mo
165.464 1.82883 li
@
true set_gvm
reset_gvm
/REKTFI+Helvetica*1 
[48{/.notdef}rp /zero 4{/.notdef}rp /five 73{/.notdef}rp /minus 128{/.notdef}rp]
REKTFI+Helvetica nf
REKTFI+Helvetica*1 [7.28424 0 0 -7.28424 0 0 ]msf
163.441 115.013 mo
(0)sh
233.248 107.375 mo
233.248 106.009 li
@
233.248 .488525 mo
233.248 1.82883 li
@
REKTFI+Helvetica*1 [7.28424 0 0 -7.28424 0 0 ]msf
231.225 115.013 mo
(5)sh
97.6805 96.6758 mo
99.021 96.6758 li
@
233.248 96.6758 mo
231.882 96.6758 li
@
true set_gvm
reset_gvm
/REKTFI+Helvetica*1 
[48{/.notdef}rp /zero /.notdef /two 2{/.notdef}rp /five 73{/.notdef}rp /minus 
128{/.notdef}rp]
REKTFI+Helvetica nf
REKTFI+Helvetica*1 [7.28424 0 0 -7.28424 0 0 ]msf
88.4993 99.3821 mo
(\1772)
[4.254 0 ]xsh
97.6805 75.3037 mo
99.021 75.3037 li
@
233.248 75.3037 mo
231.882 75.3037 li
@
true set_gvm
reset_gvm
/REKTFI+Helvetica*1 
[48{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 73{/.notdef}rp /minus 
128{/.notdef}rp]
REKTFI+Helvetica nf
REKTFI+Helvetica*1 [7.28424 0 0 -7.28424 0 0 ]msf
88.4993 78.0098 mo
(\1771)
[4.254 0 ]xsh
97.6805 53.9315 mo
99.021 53.9315 li
@
233.248 53.9315 mo
231.882 53.9315 li
@
REKTFI+Helvetica*1 [7.28424 0 0 -7.28424 0 0 ]msf
92.7484 56.6379 mo
(0)sh
97.6805 32.534 mo
99.021 32.534 li
@
233.248 32.534 mo
231.882 32.534 li
@
REKTFI+Helvetica*1 [7.28424 0 0 -7.28424 0 0 ]msf
92.7484 35.2404 mo
(1)sh
97.6805 11.1618 mo
99.021 11.1618 li
@
233.248 11.1618 mo
231.882 11.1618 li
@
REKTFI+Helvetica*1 [7.28424 0 0 -7.28424 0 0 ]msf
92.7484 13.8682 mo
(2)sh
97.6805 107.375 mo
233.248 107.375 li
@
97.6805 .488525 mo
233.248 .488525 li
@
97.6805 107.375 mo
97.6805 .488525 li
@
233.248 107.375 mo
233.248 .488525 li
@
98.0851 96.6758 mo
232.818 96.6758 li
232.818 11.1618 li
98.0851 11.1618 li
cp
.875 gry
ef
98.0851 96.6758 mo
232.818 96.6758 li
232.818 11.1618 li
98.0851 11.1618 li
cp
@
98.1357 79.7805 mo
98.1357 80.0318 97.9319 80.2358 97.6805 80.2358 cv
97.429 80.2358 97.2252 80.0318 97.2252 79.7805 cv
97.2252 79.5289 97.429 79.3253 97.6805 79.3253 cv
97.9319 79.3253 98.1357 79.5289 98.1357 79.7805 cv
/1 
[/DeviceRGB] /CSA add_res
0 0 1 rgb
f
100.842 69.0059 mo
100.842 69.2572 100.638 69.4612 100.387 69.4612 cv
100.135 69.4612 99.9315 69.2572 99.9315 69.0059 cv
99.9315 68.7543 100.135 68.5507 100.387 68.5507 cv
100.638 68.5507 100.842 68.7543 100.842 69.0059 cv
f
103.548 57.447 mo
103.548 57.6987 103.344 57.9023 103.093 57.9023 cv
102.842 57.9023 102.638 57.6987 102.638 57.447 cv
102.638 57.1957 102.842 56.9918 103.093 56.9918 cv
103.344 56.9918 103.548 57.1957 103.548 57.447 cv
f
106.255 46.2172 mo
106.255 46.4688 106.051 46.6724 105.799 46.6724 cv
105.548 46.6724 105.344 46.4688 105.344 46.2172 cv
105.344 45.9659 105.548 45.7619 105.799 45.7619 cv
106.051 45.7619 106.255 45.9659 106.255 46.2172 cv
f
108.961 36.2268 mo
108.961 36.4781 108.757 36.6821 108.506 36.6821 cv
108.254 36.6821 108.05 36.4781 108.05 36.2268 cv
108.05 35.9752 108.254 35.7716 108.506 35.7716 cv
108.757 35.7716 108.961 35.9752 108.961 36.2268 cv
f
111.692 28.1079 mo
111.692 28.3592 111.489 28.5632 111.237 28.5632 cv
110.986 28.5632 110.782 28.3592 110.782 28.1079 cv
110.782 27.8563 110.986 27.6527 111.237 27.6527 cv
111.489 27.6527 111.692 27.8563 111.692 28.1079 cv
f
114.399 22.3412 mo
114.399 22.5926 114.195 22.7965 113.944 22.7965 cv
113.692 22.7965 113.488 22.5926 113.488 22.3412 cv
113.488 22.0896 113.692 21.886 113.944 21.886 cv
114.195 21.886 114.399 22.0896 114.399 22.3412 cv
f
117.105 19.382 mo
117.105 19.6333 116.901 19.8373 116.65 19.8373 cv
116.398 19.8373 116.195 19.6333 116.195 19.382 cv
116.195 19.1304 116.398 18.9268 116.65 18.9268 cv
116.901 18.9268 117.105 19.1304 117.105 19.382 cv
f
119.811 19.5338 mo
119.811 19.7851 119.608 19.989 119.356 19.989 cv
119.105 19.989 118.901 19.7851 118.901 19.5338 cv
118.901 19.2822 119.105 19.0785 119.356 19.0785 cv
119.608 19.0785 119.811 19.2822 119.811 19.5338 cv
f
122.518 22.8469 mo
122.518 23.0985 122.314 23.3022 122.062 23.3022 cv
121.811 23.3022 121.607 23.0985 121.607 22.8469 cv
121.607 22.5956 121.811 22.3916 122.062 22.3916 cv
122.314 22.3916 122.518 22.5956 122.518 22.8469 cv
f
125.249 28.9426 mo
125.249 29.1939 125.045 29.3979 124.794 29.3979 cv
124.543 29.3979 124.339 29.1939 124.339 28.9426 cv
124.339 28.691 124.543 28.4873 124.794 28.4873 cv
125.045 28.4873 125.249 28.691 125.249 28.9426 cv
f
127.956 36.758 mo
127.956 37.0093 127.752 37.2132 127.5 37.2132 cv
127.249 37.2132 127.045 37.0093 127.045 36.758 cv
127.045 36.5064 127.249 36.3027 127.5 36.3027 cv
127.752 36.3027 127.956 36.5064 127.956 36.758 cv
f
130.662 44.9021 mo
130.662 45.1534 130.458 45.3573 130.206 45.3573 cv
129.955 45.3573 129.751 45.1534 129.751 44.9021 cv
129.751 44.6508 129.955 44.4468 130.206 44.4468 cv
130.458 44.4468 130.662 44.6508 130.662 44.9021 cv
f
133.368 51.8576 mo
133.368 52.1089 133.164 52.3129 132.913 52.3129 cv
132.662 52.3129 132.458 52.1089 132.458 51.8576 cv
132.458 51.606 132.662 51.4023 132.913 51.4023 cv
133.164 51.4023 133.368 51.606 133.368 51.8576 cv
f
136.075 56.3596 mo
136.075 56.6109 135.871 56.8148 135.619 56.8148 cv
135.368 56.8148 135.164 56.6109 135.164 56.3596 cv
135.164 56.1083 135.368 55.9043 135.619 55.9043 cv
135.871 55.9043 136.075 56.1083 136.075 56.3596 cv
f
138.806 57.8771 mo
138.806 58.1284 138.602 58.3324 138.351 58.3324 cv
138.099 58.3324 137.896 58.1284 137.896 57.8771 cv
137.896 57.6258 138.099 57.4219 138.351 57.4219 cv
138.602 57.4219 138.806 57.6258 138.806 57.8771 cv
f
141.512 56.4102 mo
141.512 56.6616 141.309 56.8655 141.057 56.8655 cv
140.806 56.8655 140.602 56.6616 140.602 56.4102 cv
140.602 56.1586 140.806 55.955 141.057 55.955 cv
141.309 55.955 141.512 56.1586 141.512 56.4102 cv
f
144.219 52.5405 mo
144.219 52.7918 144.015 52.9958 143.763 52.9958 cv
143.512 52.9958 143.308 52.7918 143.308 52.5405 cv
143.308 52.2889 143.512 52.0852 143.763 52.0852 cv
144.015 52.0852 144.219 52.2889 144.219 52.5405 cv
f
146.925 47.0014 mo
146.925 47.2527 146.721 47.4567 146.47 47.4567 cv
146.218 47.4567 146.015 47.2527 146.015 47.0014 cv
146.015 46.7498 146.218 46.5462 146.47 46.5462 cv
146.721 46.5462 146.925 46.7498 146.925 47.0014 cv
f
149.631 40.6529 mo
149.631 40.9042 149.427 41.1082 149.176 41.1082 cv
148.925 41.1082 148.721 40.9042 148.721 40.6529 cv
148.721 40.4016 148.925 40.1977 149.176 40.1977 cv
149.427 40.1977 149.631 40.4016 149.631 40.6529 cv
f
152.363 34.2792 mo
152.363 34.5305 152.159 34.7345 151.907 34.7345 cv
151.656 34.7345 151.452 34.5305 151.452 34.2792 cv
151.452 34.0279 151.656 33.8239 151.907 33.8239 cv
152.159 33.8239 152.363 34.0279 152.363 34.2792 cv
f
155.069 28.6391 mo
155.069 28.8904 154.865 29.0943 154.614 29.0943 cv
154.363 29.0943 154.159 28.8904 154.159 28.6391 cv
154.159 28.3875 154.363 28.1838 154.614 28.1838 cv
154.865 28.1838 155.069 28.3875 155.069 28.6391 cv
f
157.776 24.3899 mo
157.776 24.6413 157.572 24.8452 157.32 24.8452 cv
157.069 24.8452 156.865 24.6413 156.865 24.3899 cv
156.865 24.1383 157.069 23.9347 157.32 23.9347 cv
157.572 23.9347 157.776 24.1383 157.776 24.3899 cv
f
160.482 21.9364 mo
160.482 22.188 160.278 22.3916 160.026 22.3916 cv
159.775 22.3916 159.571 22.188 159.571 21.9364 cv
159.571 21.6851 159.775 21.4811 160.026 21.4811 cv
160.278 21.4811 160.482 21.6851 160.482 21.9364 cv
f
163.188 21.279 mo
163.188 21.5303 162.984 21.7342 162.733 21.7342 cv
162.481 21.7342 162.277 21.5303 162.277 21.279 cv
162.277 21.0274 162.481 20.8237 162.733 20.8237 cv
162.984 20.8237 163.188 21.0274 163.188 21.279 cv
f
165.92 21.9871 mo
165.92 22.2384 165.716 22.4423 165.464 22.4423 cv
165.213 22.4423 165.009 22.2384 165.009 21.9871 cv
165.009 21.7357 165.213 21.5318 165.464 21.5318 cv
165.716 21.5318 165.92 21.7357 165.92 21.9871 cv
f
168.626 23.3529 mo
168.626 23.6042 168.422 23.8081 168.171 23.8081 cv
167.919 23.8081 167.715 23.6042 167.715 23.3529 cv
167.715 23.1015 167.919 22.8976 168.171 22.8976 cv
168.422 22.8976 168.626 23.1015 168.626 23.3529 cv
f
171.332 24.5921 mo
171.332 24.8437 171.128 25.0473 170.877 25.0473 cv
170.626 25.0473 170.422 24.8437 170.422 24.5921 cv
170.422 24.3408 170.626 24.1368 170.877 24.1368 cv
171.128 24.1368 171.332 24.3408 171.332 24.5921 cv
f
174.039 25.2246 mo
174.039 25.4759 173.835 25.6799 173.583 25.6799 cv
173.332 25.6799 173.128 25.4759 173.128 25.2246 cv
173.128 24.973 173.332 24.7693 173.583 24.7693 cv
173.835 24.7693 174.039 24.973 174.039 25.2246 cv
f
176.745 25.1739 mo
176.745 25.4252 176.541 25.6292 176.29 25.6292 cv
176.038 25.6292 175.834 25.4252 175.834 25.1739 cv
175.834 24.9226 176.038 24.7186 176.29 24.7186 cv
176.541 24.7186 176.745 24.9226 176.745 25.1739 cv
f
179.477 24.668 mo
179.477 24.9196 179.273 25.1232 179.021 25.1232 cv
178.77 25.1232 178.566 24.9196 178.566 24.668 cv
178.566 24.4167 178.77 24.2127 179.021 24.2127 cv
179.273 24.2127 179.477 24.4167 179.477 24.668 cv
f
182.183 24.1368 mo
182.183 24.3884 181.979 24.5921 181.727 24.5921 cv
181.476 24.5921 181.272 24.3884 181.272 24.1368 cv
181.272 23.8855 181.476 23.6816 181.727 23.6816 cv
181.979 23.6816 182.183 23.8855 182.183 24.1368 cv
f
184.889 23.9851 mo
184.889 24.2367 184.685 24.4403 184.434 24.4403 cv
184.182 24.4403 183.978 24.2367 183.978 23.9851 cv
183.978 23.7338 184.182 23.5298 184.434 23.5298 cv
184.685 23.5298 184.889 23.7338 184.889 23.9851 cv
f
187.595 24.3645 mo
187.595 24.6161 187.391 24.8197 187.14 24.8197 cv
186.889 24.8197 186.685 24.6161 186.685 24.3645 cv
186.685 24.1131 186.889 23.9092 187.14 23.9092 cv
187.391 23.9092 187.595 24.1131 187.595 24.3645 cv
f
190.301 25.3764 mo
190.301 25.6277 190.098 25.8316 189.846 25.8316 cv
189.595 25.8316 189.391 25.6277 189.391 25.3764 cv
189.391 25.1247 189.595 24.9211 189.846 24.9211 cv
190.098 24.9211 190.301 25.1247 190.301 25.3764 cv
f
193.033 27.0708 mo
193.033 27.3222 192.829 27.5261 192.578 27.5261 cv
192.327 27.5261 192.123 27.3222 192.123 27.0708 cv
192.123 26.8195 192.327 26.6156 192.578 26.6156 cv
192.829 26.6156 193.033 26.8195 193.033 27.0708 cv
f
195.739 29.5748 mo
195.739 29.8261 195.536 30.0301 195.284 30.0301 cv
195.033 30.0301 194.829 29.8261 194.829 29.5748 cv
194.829 29.3235 195.033 29.1195 195.284 29.1195 cv
195.536 29.1195 195.739 29.3235 195.739 29.5748 cv
f
198.446 32.8627 mo
198.446 33.1143 198.242 33.318 197.991 33.318 cv
197.739 33.318 197.535 33.1143 197.535 32.8627 cv
197.535 32.6114 197.739 32.4075 197.991 32.4075 cv
198.242 32.4075 198.446 32.6114 198.446 32.8627 cv
f
201.152 36.8084 mo
201.152 37.06 200.948 37.2636 200.697 37.2636 cv
200.445 37.2636 200.241 37.06 200.241 36.8084 cv
200.241 36.5571 200.445 36.3531 200.697 36.3531 cv
200.948 36.3531 201.152 36.5571 201.152 36.8084 cv
f
203.858 41.0323 mo
203.858 41.2836 203.654 41.4876 203.403 41.4876 cv
203.152 41.4876 202.948 41.2836 202.948 41.0323 cv
202.948 40.781 203.152 40.577 203.403 40.577 cv
203.654 40.577 203.858 40.781 203.858 41.0323 cv
f
206.59 44.9527 mo
206.59 45.2041 206.386 45.408 206.135 45.408 cv
205.883 45.408 205.679 45.2041 205.679 44.9527 cv
205.679 44.7011 205.883 44.4975 206.135 44.4975 cv
206.386 44.4975 206.59 44.7011 206.59 44.9527 cv
f
209.296 47.9624 mo
209.296 48.214 209.092 48.4176 208.841 48.4176 cv
208.589 48.4176 208.386 48.214 208.386 47.9624 cv
208.386 47.7111 208.589 47.5071 208.841 47.5071 cv
209.092 47.5071 209.296 47.7111 209.296 47.9624 cv
f
212.002 49.7834 mo
212.002 50.035 211.799 50.2387 211.547 50.2387 cv
211.296 50.2387 211.092 50.035 211.092 49.7834 cv
211.092 49.5321 211.296 49.3281 211.547 49.3281 cv
211.799 49.3281 212.002 49.5321 212.002 49.7834 cv
f
214.709 50.5929 mo
214.709 50.8442 214.505 51.0481 214.254 51.0481 cv
214.002 51.0481 213.798 50.8442 213.798 50.5929 cv
213.798 50.3416 214.002 50.1376 214.254 50.1376 cv
214.505 50.1376 214.709 50.3416 214.709 50.5929 cv
f
217.415 50.9975 mo
217.415 51.2491 217.211 51.4527 216.96 51.4527 cv
216.708 51.4527 216.505 51.2491 216.505 50.9975 cv
216.505 50.7461 216.708 50.5422 216.96 50.5422 cv
217.211 50.5422 217.415 50.7461 217.415 50.9975 cv
f
220.147 51.8576 mo
220.147 52.1089 219.943 52.3129 219.692 52.3129 cv
219.44 52.3129 219.236 52.1089 219.236 51.8576 cv
219.236 51.606 219.44 51.4023 219.692 51.4023 cv
219.943 51.4023 220.147 51.606 220.147 51.8576 cv
f
222.853 54.058 mo
222.853 54.3094 222.649 54.5133 222.398 54.5133 cv
222.146 54.5133 221.942 54.3094 221.942 54.058 cv
221.942 53.8064 222.146 53.6028 222.398 53.6028 cv
222.649 53.6028 222.853 53.8064 222.853 54.058 cv
f
225.559 57.9782 mo
225.559 58.2298 225.355 58.4334 225.104 58.4334 cv
224.853 58.4334 224.649 58.2298 224.649 57.9782 cv
224.649 57.7269 224.853 57.5229 225.104 57.5229 cv
225.355 57.5229 225.559 57.7269 225.559 57.9782 cv
f
228.266 63.4921 mo
228.266 63.7434 228.062 63.9473 227.81 63.9473 cv
227.559 63.9473 227.355 63.7434 227.355 63.4921 cv
227.355 63.2407 227.559 63.0368 227.81 63.0368 cv
228.062 63.0368 228.266 63.2407 228.266 63.4921 cv
f
230.972 69.8658 mo
230.972 70.1171 230.768 70.321 230.517 70.321 cv
230.265 70.321 230.061 70.1171 230.061 69.8658 cv
230.061 69.6145 230.265 69.4105 230.517 69.4105 cv
230.768 69.4105 230.972 69.6145 230.972 69.8658 cv
f
233.703 76.1129 mo
233.703 76.3645 233.5 76.5682 233.248 76.5682 cv
232.997 76.5682 232.793 76.3645 232.793 76.1129 cv
232.793 75.8616 232.997 75.6576 233.248 75.6576 cv
233.5 75.6576 233.703 75.8616 233.703 76.1129 cv
f
gsave
97.6805 .488533 mo
97.6805 107.4 li
233.274 107.4 li
233.274 .488533 li
cp
clp
.60702 lw
143.763 49.6823 mo
144.674 52.9703 li
145.559 56.3089 li
146.47 59.673 li
147.38 62.9861 li
148.291 66.2236 li
149.176 69.3346 li
150.086 72.2686 li
150.997 74.9747 li
151.907 77.4283 li
152.793 79.5781 li
153.703 81.3739 li
154.614 82.8408 li
155.499 83.9031 li
156.41 84.5608 li
157.32 84.8136 li
158.231 84.6619 li
159.116 84.1055 li
160.026 83.1191 li
160.937 81.7533 li
161.847 80.0082 li
162.733 77.9088 li
163.643 75.4807 li
164.554 72.7491 li
165.464 69.7392 li
166.35 66.5271 li
167.26 63.1633 li
168.171 59.673 li
169.056 56.1067 li
169.966 52.5405 li
170.877 49.0246 li
171.787 45.6608 li
172.673 42.4488 li
173.583 39.5148 li
174.494 36.8842 li
175.404 34.6079 li
176.29 32.7617 li
177.2 31.3707 li
178.111 30.4853 li
179.021 30.1311 li
179.906 30.3084 li
180.817 31.0417 li
181.727 32.3316 li
182.613 34.1526 li
183.523 36.4545 li
184.434 39.2364 li
185.344 42.3981 li
186.229 45.9391 li
187.14 49.733 li
188.05 53.7545 li
188.961 57.8771 li
189.846 62.0504 li
190.757 66.1984 li
191.667 70.22 li
192.578 74.039 li
193.463 77.5801 li
194.374 80.7921 li
195.284 83.5996 li
196.169 85.977 li
197.08 87.8994 li
197.99 89.3411 li
198.901 90.2516 li
199.786 90.6814 li
200.697 90.631 li
201.607 90.0999 li
202.518 89.1638 li
203.403 87.8487 li
204.314 86.1794 li
205.224 84.2318 li
206.135 82.0568 li
207.02 79.7298 li
207.93 77.3018 li
208.841 74.823 li
209.726 72.3697 li
210.637 69.9923 li
211.547 67.7412 li
212.458 65.6925 li
213.343 63.8208 li
214.254 62.2273 li
215.164 60.9374 li
216.075 59.9258 li
216.96 59.2681 li
217.87 58.9142 li
218.781 58.9142 li
219.691 59.1922 li
220.577 59.7992 li
221.487 60.6594 li
222.398 61.7217 li
223.283 62.9861 li
224.194 64.3519 li
225.104 65.7936 li
226.015 67.2352 li
226.9 68.601 li
227.81 69.8658 li
228.721 70.9532 li
229.631 71.8134 li
230.517 72.3949 li
231.427 72.6984 li
232.338 72.648 li
233.248 72.2686 li
1 0 0 rgb
@
97.6805 38.1996 mo
98.5657 39.3123 li
99.4762 40.3242 li
100.387 41.2851 li
101.272 42.1705 li
102.183 42.9799 li
103.093 43.7132 li
104.004 44.3961 li
104.889 45.0031 li
105.799 45.5598 li
106.71 46.0654 li
107.62 46.4955 li
108.506 46.8494 li
109.416 47.1529 li
110.327 47.3553 li
111.237 47.4564 li
112.122 47.4564 li
113.033 47.3553 li
113.944 47.1025 li
114.829 46.7483 li
115.739 46.2172 li
116.65 45.5598 li
117.56 44.7755 li
118.445 43.8398 li
119.356 42.7775 li
120.267 41.6141 li
121.177 40.3242 li
122.062 38.9836 li
122.973 37.5926 li
123.883 36.1761 li
124.794 34.7597 li
125.679 33.3687 li
126.59 32.0536 li
127.5 30.8647 li
128.385 29.7772 li
129.296 28.8412 li
130.207 28.1079 li
131.117 27.602 li
132.002 27.3237 li
132.913 27.3237 li
133.823 27.602 li
134.734 28.1838 li
135.619 29.0689 li
136.53 30.2577 li
137.44 31.7501 li
138.351 33.5456 li
139.236 35.645 li
140.146 38.0224 li
141.057 40.6277 li
141.942 43.4604 li
142.853 46.4955 li
143.763 49.6823 li
@
143.763 53.7545 mo
144.674 54.235 li
145.559 54.9179 li
146.47 55.8284 li
147.38 56.8655 li
148.291 58.0037 li
149.176 59.2177 li
150.086 60.4063 li
150.997 61.5951 li
151.907 62.6826 li
152.793 63.6945 li
153.703 64.5543 li
154.614 65.2624 li
155.499 65.8191 li
156.41 66.2236 li
157.32 66.4513 li
158.231 66.5271 li
159.116 66.4513 li
160.026 66.2488 li
160.937 65.9201 li
161.847 65.4649 li
162.733 64.9337 li
163.643 64.3015 li
164.554 63.5931 li
165.464 62.8092 li
166.35 61.9745 li
167.26 61.0388 li
168.171 60.0524 li
169.056 59.0153 li
169.966 57.8771 li
170.877 56.6883 li
171.787 55.4238 li
172.673 54.0832 li
173.583 52.7174 li
174.494 51.2758 li
175.404 49.8089 li
176.29 48.3417 li
177.2 46.8497 li
178.111 45.408 li
179.021 44.0167 li
179.906 42.6764 li
180.817 41.4624 li
181.727 40.3494 li
182.613 39.4137 li
183.523 38.6294 li
184.434 38.0479 li
185.344 37.6685 li
186.229 37.5167 li
187.14 37.5671 li
188.05 37.8706 li
188.961 38.3766 li
189.846 39.1354 li
190.757 40.0711 li
191.667 41.2093 li
192.578 42.5247 li
193.463 43.9915 li
194.374 45.585 li
195.284 47.3049 li
196.169 49.126 li
197.08 50.9975 li
197.99 52.9451 li
198.901 54.8927 li
199.786 56.8655 li
200.697 58.8383 li
201.607 60.8111 li
202.518 62.7333 li
203.403 64.605 li
204.314 66.4006 li
205.224 68.1206 li
206.135 69.7392 li
207.02 71.2567 li
207.93 72.648 li
208.841 73.8873 li
209.726 74.9496 li
210.637 75.8349 li
211.547 76.543 li
212.458 77.0234 li
213.343 77.3018 li
214.254 77.3776 li
215.164 77.2007 li
216.075 76.8213 li
216.96 76.2143 li
217.87 75.43 li
218.781 74.4436 li
219.691 73.2803 li
220.577 71.9903 li
221.487 70.5738 li
222.398 69.0563 li
223.283 67.4629 li
224.194 65.8694 li
225.104 64.2508 li
226.015 62.6826 li
226.9 61.1398 li
227.81 59.6982 li
228.721 58.3576 li
229.631 57.1435 li
230.517 56.0561 li
231.427 55.1455 li
232.338 54.4119 li
233.248 53.8304 li
0 1 0 rgb
@
97.6805 75.0254 mo
98.5657 76.6189 li
99.4762 78.1871 li
100.387 79.755 li
101.272 81.2981 li
102.183 82.8408 li
103.093 84.3836 li
104.004 85.9011 li
104.889 87.3935 li
105.799 88.8858 li
106.71 90.3779 li
107.62 91.8195 li
108.506 93.236 li
109.416 94.6018 li
110.327 95.8917 li
111.237 97.1058 li
112.122 98.2186 li
113.033 99.2303 li
113.944 100.116 li
114.829 100.849 li
115.739 101.405 li
116.65 101.785 li
117.56 101.962 li
118.445 101.937 li
119.356 101.658 li
120.267 101.153 li
121.177 100.394 li
122.062 99.382 li
122.973 98.1174 li
123.883 96.5999 li
124.794 94.8294 li
125.679 92.8315 li
126.59 90.631 li
127.5 88.2029 li
128.385 85.6231 li
129.296 82.8915 li
130.207 80.0585 li
131.117 77.1752 li
132.002 74.2667 li
132.913 71.4085 li
133.823 68.601 li
134.734 65.9453 li
135.619 63.4414 li
136.53 61.165 li
137.44 59.1418 li
138.351 57.4219 li
139.236 55.9802 li
140.146 54.8927 li
141.057 54.1084 li
141.942 53.6787 li
142.853 53.5773 li
143.763 53.7545 li
@
grestore
0 gry
true set_gvm
reset_gvm
/REKTFI+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp 
/zero /one /two 2{/.notdef}rp /five 48{/.notdef}rp /f 2{/.notdef}rp 
/i 4{/.notdef}rp /n /o /p 3{/.notdef}rp /t /u 
2{/.notdef}rp /x 6{/.notdef}rp /minus 128{/.notdef}rp]
REKTFI+Helvetica nf
REKTFI+Helvetica*1 [7.28424 0 0 -7.28424 0 0 ]msf
153.703 121.766 mo
(input, x)
[1.61699 4.05003 4.05005 4.05003 2.02501 2.02502 2.02501 0 ]xsh
REKTFI+Helvetica*1 [0 -7.28424 -7.28424 0 0 0 ]msf
85.4895 71.3326 mo
(output, f\(x\))
[-4.05003 -4.05003 -2.02502 -4.05004 -4.05003 -2.02502 -2.02502 -2.02502 -2.02501 -2.4256 -3.64212 0 
]ysh
grestore
gsave
248.978 123.587 mo
408.015 123.587 li
408.015 -1.02301 li
248.978 -1.02301 li
cp
clp
.152335 lw
1 lj
268.756 107.313 mo
404.842 107.313 li
404.842 .0178452 li
268.756 .0178452 li
cp
1 gry
@
268.756 107.313 mo
404.842 107.313 li
0 gry
@
268.756 .0180511 mo
404.842 .0180511 li
@
268.756 107.313 mo
268.756 .0180511 li
@
404.842 107.313 mo
404.842 .0180511 li
@
268.756 107.313 mo
404.842 107.313 li
@
268.756 107.313 mo
268.756 .0180511 li
@
268.756 107.313 mo
268.756 105.942 li
@
268.756 .0180511 mo
268.756 1.36348 li
@
true set_gvm
%%BeginFont: Helvetica
userdict /Adobe_CTFauxDict 30 dict dup begin put
/$$$SUBSTITUTEBASE /AdobeSansMM def
/$$$FONTNAME /Helvetica def
/$$$UNIQUEID 0 def
/$$$FONTBBOX { [ -350 -265 FontMatrix transform 1200 1075 FontMatrix transform ] } def
/$$$ITALICANGLE 0 def

/$$$CAPHEIGHT 718 def
/$$$STEMV 88 def
/$$$XHEIGHT 523 def

/$$$FULLNAME (Helvetica Substitution) def
/$$$FAMILYNAME (Helvetica) def

/$$$UNDERLINEPOSITION -150 def
/$$$UNDERLINETHICKNESS 50 def

/$$$HDESIGNVECTOR { [ [ 0.298 0.575 currentdict /ConvertDesignVector known 
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] 1.0 ] } def
/$$$xDESIGNVECTOR { [ [ 0.312 0.501 currentdict /ConvertDesignVector known 
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse ] 0.983 ] } def

/$$$INFODICTSIZE 256 def
/$$$EXPANDDICTSIZE 256 def
/$$$COMPRESSDICTSIZE 256 def

/$$$DOESSMALLCAPS false def
/$$$ORIGFONTTYPE /Type1 def
/$$$ASCENT 718 def
/$$$DESCENT -207 def
{{(Helvetica)(_)search{exch pop exch pop cvn dup findfont/FontName get eq}{pop false}
ifelse}systemdict/resourcestatus known{currentglobal exch /Helvetica /Font resourcestatus{pop pop pop
true}{exec}ifelse exch setglobal exit}if FontDirectory/Helvetica known{pop true exit}if
systemdict/SharedFontDirectory known{SharedFontDirectory/Helvetica known{pop true
exit}if}if systemdict/deletefile known{{(%font%Helvetica)(fonts/Helvetica)}{{status}
stopped{pop exit}{{4{pop}repeat pop true exit}if}ifelse}forall}if exec exit}
loop{save true}{false}ifelse

ct_EuroDict begin dup{/Helvetica dup findfont /CharStrings 2 copy known
{get /Euro known{pop false exch}{true 3 -1 roll}ifelse}
{pop pop false exch}ifelse}if end
$$$SUBSTITUTEBASE findfont dup maxlength 19 add dict begin/SubstMaster exch
def SubstMaster{exch dup dup dup/FID eq exch/UniqueID eq or exch/XUID eq or{
pop pop}{exch def}ifelse}bind forall/SubstitutionVersion 3 def/FontName
$$$FONTNAME def/FontType 3 def/FontBBox $$$FONTBBOX def/CharBBox FontBBox dup
length array copy def/xtfm[FontMatrix 0 get/mul cvx FontMatrix 4 get 0 ne{
FontMatrix 4 get/add cvx}if]cvx bind def/FontMatrix[1 0 currentdict /FontInfo known {FontInfo/ItalicAngle
get $$$ITALICANGLE sub sin } {0} ifelse 1 0 0]def currentdict /FontInfo known {/FontInfo FontInfo
dup length 10 add dict begin{
def}forall/FullName $$$FULLNAME def/FamilyName $$$FAMILYNAME def/ItalicAngle
$$$ITALICANGLE def/CapHeight $$$CAPHEIGHT def/StemV $$$STEMV def/XHeight $$$XHEIGHT def
/Ascent $$$ASCENT def/Descent $$$DESCENT def/OrigFontType $$$ORIGFONTTYPE def
$$$UNDERLINEPOSITION UnderlinePosition SubstMaster
/FontMatrix get transform/UnderlinePosition exch def pop $$$UNDERLINETHICKNESS
UnderlineThickness SubstMaster/FontMatrix get transform/UnderlineThickness
exch def pop currentdict end def} if currentdict/StrokeWidth known not{
/StrokeWidth 0 def}if/dvlen currentdict /FontInfo known {FontInfo dup /BlendAxisTypes known
{/BlendAxisTypes get length} {pop 2} ifelse} {2} ifelse def/cvlen
currentdict dup /WeightVector known {/WeightVector get length} {pop 4} ifelse def/str 1 string def currentdict
/$$SubUD$$ where{pop false false}{/shareddict where{pop currentshared not dup{
true setshared}if shareddict}{false userdict}ifelse/$$SubUD$$ 24 dict put true
}ifelse $$SubUD$$ begin{$$SubUD$$/bp{bind put}bind put $$SubUD$$/bd{bind def}
bp $$SubUD$$/pwinstr{3 -1 roll cvi 32768 add dup 256 idiv dup 256 mod 4 index
4 index 3 -1 roll put 256 mul sub 2 index 2 index 1 add 3 -1 roll put 2 add}bp
$$SubUD$$/pinstr{exch 3 sub exch 128 add abs dup cvi dup 4 index 4 index 3 -1
roll put sub 256 mul dup cvi dup 4 index 4 index 1 add 3 -1 roll put sub 256
mul cvi 2 index 2 index 2 add 3 -1 roll put}bp $$SubUD$$/gwfrstr{2 copy 2 copy
get 256 mul 3 1 roll 1 add get add 32768 sub exch 2 add exch}bp $$SubUD$$
/gwtvec{[3 1 roll cvlen{2 copy 2 copy 2 copy get 256 mul 3 1 roll 1 add get
add 256 mul 3 1 roll 2 add get add 65536.0 div 128.0 sub 3 1 roll 3 add}repeat pop
pop]}bp $$SubUD$$ /GetGlyphString{dup InfoDict exch known{InfoDict exch get}{
dup InfoDict exch 3 cvlen 3 mul add string dup 0 UpperMaster put put InfoDict
exch get}ifelse}bp $$SubUD$$/X{GetGlyphString 1 pwinstr 3 cvlen mul add dvlen
2 add 2 roll currentdict /ConvertDesignVector known
{ConvertDesignVector}{pop pop 0 0 0 1}ifelse cvlen 2 add -2 roll cvlen{3 -1 roll pinstr}
repeat pop pop}bp $$SubUD$$/Y{dup ExpandDict exch 4 -1 roll xtfm 2 div put X}
bp $$SubUD$$/Z{dup CompressDict exch 4 -1 roll put X}bp $$SubUD$$/L{dup
GetGlyphString 0 LowerMaster put}bp $$SubUD$$/S{CharStrings exch get
CharStrings exch 2 index exch put L}bp $$SubUD$$/R{3 index 3 index CharStrings
dup 4 1 roll exch get put dvlen add copy exch pop exec 3 -1 roll pop exec}bp
$$SubUD$$/RX{{X}4 R}bp $$SubUD$$/RY{{Y}5 R}bp $$SubUD$$/RZ{{Z}5 R}bp
systemdict/internaldict known{1183615869 systemdict/internaldict get{exec}
stopped{false}{dup/setweightvector known{true}{pop false}ifelse}ifelse}{false}
ifelse{/setweightvector get $$SubUD$$ exch/@setweightvector exch put $$SubUD$$
/cbwa1 false put version length 4 ge{version 0 4 getinterval dup(2015)eq exch
(2016)eq or{systemdict/internaldict known{1183615869 systemdict/internaldict
get{exec}stopped not{/CIDRun known{$$SubUD$$/cbwa1 true put}if}if}if}if}if
$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict
exch def/code exch def/glyph Encoding code get def/cshare currentshared def
InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known{/glyph
/space def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict glyph get
dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{BlendsArray
scheck setshared dup 0 get SubstMaster  dup /WeightVector known
{exch makeblendedfont begin 1 get
/FontMatrix exch FontMatrix exch dup matrix scale matrix concatmatrix def
$$SubUD$$/cbwa1 get{Private/UniqueID 1 put}if/PaintType fontdict/PaintType get
def/StrokeWidth fontdict/StrokeWidth get def /@SUB currentdict definefont
setfont BlendsArray blnd currentdict put currentdict end} {exch pop
begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse }if begin 1 gwfrstr
xtfm 0 CharBBox aload pop setcachedevice fontdict/PaintType get PaintType ne
fontdict/CharStrings get CharStrings ne or fontdict/StrokeWidth get
StrokeWidth ne or{CharStrings fontdict/CharStrings get eq{true}{fontdict
/CharStrings get scheck}ifelse setshared currentdict end dup length dict begin
{exch dup/FID eq{pop pop}{exch def}ifelse}forall/PaintType fontdict/PaintType
get def/StrokeWidth fontdict/StrokeWidth get def/CharStrings fontdict
/CharStrings get def gwtvec SubstMaster /WeightVector known {/WeightVector exch def}
{pop} ifelse /@SUB currentdict definefont
setfont fontdict/BlendsArray get scheck not currentdict scheck or{fontdict
/BlendsArray get blnd currentdict put}if cshare setshared}{currentdict setfont
currentdict scheck setshared gwtvec currentdict exch SubstMaster /WeightVector known
{@setweightvector cshare setshared}{pop pop}ifelse
}ifelse ExpandDict glyph known{ExpandDict glyph get 0 translate}{
CompressDict glyph known{CompressDict glyph get 1 scale}if}ifelse mark
cachestatus 0 setcachelimit 0 0 moveto glyph glyphshow setcachelimit
cleartomark end}{0 0 0 0 0 0 setcachedevice}ifelse end end end}bp}{systemdict
/rectfill known{version dup length 4 ge{0 4 getinterval dup(2013)eq exch(2012)
eq or}{pop false}ifelse{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop
0 setcachelimit currentdict/XUID undef}bp$$SubUD$$/dct2{setcachelimit}bp}
{$$SubUD$$/dct1{cachestatus 7 1 roll pop pop pop pop pop pop 0 setcachelimit}bp
$$SubUD$$/dct2{setcachelimit}bp}ifelse}{$$SubUD$$/dct1{}put $$SubUD$$/dct2{}put}ifelse
$$SubUD$$/SubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict
exch def/code exch def/glyph Encoding code get def InfoDict glyph known not
glyph/.notdef ne and{InfoDict/space known Encoding 32 get/space eq and{/glyph
/space def/code 32 def}{/glyph/.notdef def}ifelse}if glyph/.notdef ne{InfoDict
glyph get dup 0 get/blnd exch def BlendsArray blnd get dup type/dicttype ne{
dup 0 get SubstMaster dup /WeightVector known
{exch makeblendedfont begin 1 get /FontMatrix exch
FontMatrix exch dup matrix scale matrix concatmatrix def BlendsArray blnd
currentdict put currentdict end}{exch pop
begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse } if begin save exch 1 gwfrstr xtfm 0 CharBBox
aload pop setcachedevice gwtvec SubstMaster /WeightVector known
{/WeightVector exch def} {pop} ifelse/Encoding fontdict
/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict
/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph
known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict
glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1
index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if
/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul
load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}
for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0
moveto str 0 code put str show dct2 restore end}{0 0 0 0 0 0 setcachedevice}ifelse
end end end}bp/currentshared where{pop true}{false}ifelse{$$SubUD$$
/PatchSubBuildChar{exch dup begin $$SubUD$$ begin 5 dict begin/fontdict exch
def/code exch def/glyph Encoding code get def/cshare currentshared def
InfoDict glyph known not glyph/.notdef ne and{InfoDict/space known Encoding 32
get/space eq and{/glyph/space def/code 32 def}{/glyph/.notdef def}ifelse}if
glyph/.notdef ne{InfoDict glyph get dup 0 get/blnd exch def BlendsArray blnd
get dup type/dicttype ne{BlendsArray scheck setshared dup 0 get SubstMaster
dup /WeightVector known 
{exch makeblendedfont begin 1 get /FontMatrix exch FontMatrix exch dup matrix
scale matrix concatmatrix def BlendsArray blnd currentdict put currentdict end}
{exch pop begin pop currentdict setfont BlendsArray blnd currentdict 
put currentdict end} ifelse 
}if false setshared dup maxlength dict copy begin 1 gwfrstr xtfm 0 CharBBox
aload pop setcachedevice gwtvec SubstMaster /WeightVector known
{/WeightVector exch def} {pop} ifelse/Encoding fontdict
/Encoding get def/PaintType fontdict/PaintType get def/CharStrings fontdict
/CharStrings get def/StrokeWidth fontdict/StrokeWidth get def ExpandDict glyph
known{ExpandDict glyph get 0 translate}{CompressDict glyph known{CompressDict
glyph get 1 scale}if}ifelse/$Blend[false WeightVector dup length 1 sub -1 1{1
index dup length 3 -1 roll sub get dup 0 eq{pop 1 index{/exch load 3 1 roll}if
/pop load 3 1 roll}{dup 1 eq{pop}{2 index{/exch load 4 1 roll}if 3 1 roll/mul
load 3 1 roll}ifelse 1 index{/add load 3 1 roll}if exch pop true exch}ifelse}
for pop{/add load}if]cvx def dct1/@SUB currentdict definefont setfont 0 0
moveto str 0 code put str show dct2 end cshare setshared}{0 0 0 0 0 0
setcachedevice}ifelse end end end}bp}if}ifelse}if{false setshared}if begin
$$SubUD$$/@setweightvector known{/BuildChar $$SubUD$$/SubBuildChar get def}{
/currentshared where{pop currentshared}{false}ifelse{/BuildChar $$SubUD$$
/PatchSubBuildChar get def}{/BuildChar $$SubUD$$/SubBuildChar get def}ifelse}
ifelse/UpperMaster 0 def/LowerMaster 1 def/BlendsArray[$$$HDESIGNVECTOR
$$$xDESIGNVECTOR]def/InfoDict $$$INFODICTSIZE dict def/ExpandDict
$$$EXPANDDICTSIZE dict def/CompressDict $$$COMPRESSDICTSIZE dict def
$$$DOESSMALLCAPS{/CharStrings CharStrings dup maxlength dict begin{def}bind
forall currentdict end def}if
/W 0.324 def
W 0.335 278/space X
0.292 0.64 278/exclam X
0.309 0.464 355/quotedbl X
0.308 0.48 556/numbersign X
0.312 0.438 556/dollar X
0.29 0.662 889/percent X
0.304 0.52 667/ampersand X
0.297 0.583 222/quoteright X
0.315 0.414 333/parenleft X
0.315 0.414 333/parenright X
0.322 0.347 389/asterisk X
0.31 0.456 584/plus X
0.284 0.726 278/comma X
0.284 0.726 278/period X
0.351 0.119 278/slash X
0.319 0.373 556/zero X
0.303 0.531 556/one X
0.319 0.379 556/two X
0.319 0.377 556/three X
0.319 0.371 556/four X
0.319 0.374 556/five X
0.319 0.375 556/six X
0.311 0.448 556/seven X
0.319 0.375 556/eight X
0.319 0.373 556/nine X
0.284 0.726 278/colon X
0.284 0.726 278/semicolon X
0.31 0.456 584/less X
0.31 0.456 584/equal X
0.31 0.456 584/greater X
0.291 0.653 556/question X
0.265 0.95 1015/at X
0.29 0.658 667/A X
0.296 0.592 667/B X
0.294 0.618 722/C X
0.294 0.618 722/D X
0.283 0.733 667/E X
0.288 0.678 611/F X
0.286 0.701 778/G X
0.298 0.575 722/H X
0.298 0.571 278/I X
0.289 0.675 500/J X
0.288 0.682 667/K X
0.296 0.595 556/L X
0.314 0.417 833/M X
0.297 0.589 722/N X
0.294 0.614 778/O X
0.294 0.613 667/P X
0.294 0.614 778/Q X
0.287 0.695 722/R X
0.287 0.688 667/S X
0.289 0.675 611/T X
0.291 0.646 722/U X
0.291 0.646 667/V X
0.303 0.523 944/W X
0.291 0.644 667/X X
0.283 0.732 667/Y X
0.288 0.676 611/Z X
0.328 0.302 278/bracketleft X
0.351 0.119 278/backslash X
0.327 0.305 278/bracketright X
0.334 0.246 469/asciicircum X
0.303 0.529 556/underscore X
0.297 0.583 222/quoteleft X
/V 0.305 def
V 0.569 556/a L X
0.311 0.51 556/b L X
0.318 0.445 500/c L X
0.311 0.51 556/d L X
0.307 0.554 556/e L X
0.335 0.297 278/f L X
0.313 0.496 556/g L X
0.312  0.5 556/h L X
0.316 0.465 222/i L X
0.316 0.465 222/j L X
0.312 0.503 500/k L X
0.316 0.465 222/l L X
0.311 0.51 833/m L X
0.312  0.5 556/n L X
0.313 0.491 556/o L X
0.311 0.511 556/p L X
0.311 0.51 556/q L X
0.329 0.354 333/r L X
0.303 0.589 500/s L X
0.344 0.226 278/t L X
0.313 0.492 556/u L X
0.311 0.512 500/v L X
0.323 0.402 722/w L X
0.312 0.501 500/x L X
0.313 0.496 500/y L X
0.296 0.668 500/z L X
0.311 0.446 334/braceleft X
0.329 0.289 260/bar X
0.311 0.446 334/braceright X
0.31 0.456 584/asciitilde X
0.272 0.869 333/exclamdown X
0.315 0.414 556/cent X
0.316 0.403 556/sterling X
0.368    0 167 0.986/fraction Z
0.313 0.434 556/yen X
0.305 0.51 556/florin X
0.303 0.53 556/section X
0.32 0.366 556/currency X
0.315 0.411 191/quotesingle X
0.319 0.377 333/quotedblleft X
0.283 0.738 556/guillemotleft X
0.289 0.672 333/guilsinglleft X
0.289 0.672 333/guilsinglright X
0.324 0.336 500/fi X
0.324 0.336 500/fl X
0.284 0.73 556/endash X
0.299 0.57 556/dagger X
0.299 0.57 556/daggerdbl X
0.284 0.726 278/periodcentered X
0.308 0.474 537/paragraph X
0.319 0.378 350/bullet X
0.296 0.593 222/quotesinglbase X
0.319 0.377 333/quotedblbase X
0.319 0.377 333/quotedblright X
0.283 0.738 556/guillemotright X
0.295 0.602 1000/ellipsis X
0.323 0.339 1000/perthousand X
0.28 0.769 611/questiondown X
0.318 0.387 333/grave X
0.318 0.387 333/acute X
0.318 0.387 333/circumflex X
0.318 0.387 333/tilde X
0.318 0.387 333/macron X
0.318 0.387 333/breve X
0.318 0.387 333/dotaccent X
0.318 0.387 333/dieresis X
0.318 0.387 333/ring X
0.318 0.387 333/cedilla X
0.318 0.387 333/hungarumlaut X
0.318 0.387 333/ogonek X
0.318 0.387 333/caron X
0.295 0.607 1000/emdash X
0.291 0.652 1000/AE X
0.304 0.517 370/ordfeminine X
0.296 0.595 556/Lslash X
0.294 0.614 778/Oslash X
0.298 0.581 1000/OE X
0.309 0.466 365/ordmasculine X
0.307 0.549 889/ae L X
0.284 0.725 278/dotlessi X
0.316 0.465 222/lslash L X
0.303 0.592 611/oslash L X
0.309 0.537 944/oe L X
0.299 0.562 611/germandbls X
0.31 0.456 584/minus X

end end currentdict end
/Helvetica exch definefont pop
ct_EuroDict begin
{{dup findfont /InfoDict get /Euro known
{/Euro ct_AddGlyphToPrinterFont}
{ pop restore }ifelse}{restore}ifelse}if end
%%EndFont
end
reset_gvm
/REKTFK+Helvetica /Helvetica findfont ct_VMDictPut
/REKTFK+Helvetica*1 
[53{/.notdef}rp /five 73{/.notdef}rp /minus 128{/.notdef}rp]
REKTFK+Helvetica nf
REKTFK+Helvetica*1 [7.31208 0 0 -7.31208 0 0 ]msf
262.459 114.98 mo
(\1775)
[4.27026 0 ]xsh
336.799 107.313 mo
336.799 105.942 li
@
336.799 .0180511 mo
336.799 1.36348 li
@
true set_gvm
reset_gvm
/REKTFK+Helvetica*1 
[48{/.notdef}rp /zero 4{/.notdef}rp /five 73{/.notdef}rp /minus 128{/.notdef}rp]
REKTFK+Helvetica nf
REKTFK+Helvetica*1 [7.31208 0 0 -7.31208 0 0 ]msf
334.767 114.98 mo
(0)sh
404.842 107.313 mo
404.842 105.942 li
@
404.842 .0180511 mo
404.842 1.36348 li
@
REKTFK+Helvetica*1 [7.31208 0 0 -7.31208 0 0 ]msf
402.811 114.98 mo
(5)sh
268.756 96.5729 mo
270.101 96.5729 li
@
404.842 96.5729 mo
403.471 96.5729 li
@
true set_gvm
reset_gvm
/REKTFK+Helvetica*1 
[48{/.notdef}rp /zero /.notdef /two 2{/.notdef}rp /five 73{/.notdef}rp /minus 
128{/.notdef}rp]
REKTFK+Helvetica nf
REKTFK+Helvetica*1 [7.31208 0 0 -7.31208 0 0 ]msf
259.539 99.2896 mo
(\1772)
[4.27026 0 ]xsh
268.756 75.1192 mo
270.101 75.1192 li
@
404.842 75.1192 mo
403.471 75.1192 li
@
true set_gvm
reset_gvm
/REKTFK+Helvetica*1 
[48{/.notdef}rp /zero /one /two 2{/.notdef}rp /five 73{/.notdef}rp /minus 
128{/.notdef}rp]
REKTFK+Helvetica nf
REKTFK+Helvetica*1 [7.31208 0 0 -7.31208 0 0 ]msf
259.539 77.8356 mo
(\1771)
[4.27026 0 ]xsh
268.756 53.6653 mo
270.101 53.6653 li
@
404.842 53.6653 mo
403.471 53.6653 li
@
REKTFK+Helvetica*1 [7.31208 0 0 -7.31208 0 0 ]msf
263.805 56.382 mo
(0)sh
268.756 32.186 mo
270.101 32.186 li
@
404.842 32.186 mo
403.471 32.186 li
@
REKTFK+Helvetica*1 [7.31208 0 0 -7.31208 0 0 ]msf
263.805 34.9028 mo
(1)sh
268.756 10.7321 mo
270.101 10.7321 li
@
404.842 10.7321 mo
403.471 10.7321 li
@
REKTFK+Helvetica*1 [7.31208 0 0 -7.31208 0 0 ]msf
263.805 13.4488 mo
(2)sh
268.756 107.313 mo
404.842 107.313 li
@
268.756 .0180511 mo
404.842 .0180511 li
@
268.756 107.313 mo
268.756 .0180511 li
@
404.842 107.313 mo
404.842 .0180511 li
@
gsave
268.756 .0180511 mo
268.756 107.338 li
404.867 107.338 li
404.867 .0180511 li
cp
clp
269.162 58.1339 mo
269.644 61.739 li
270.558 65.3698 li
271.472 69.0002 li
272.361 72.5548 li
273.275 76.0585 li
274.189 79.3846 li
275.103 82.558 li
275.992 85.5033 li
276.906 88.1944 li
277.82 90.5812 li
278.734 92.5869 li
279.622 94.2371 li
280.536 95.4558 li
281.45 96.2428 li
282.364 96.5729 li
283.253 92.9424 li
284.167 89.2608 li
285.081 85.5033 li
285.97 81.7964 li
286.884 78.115 li
287.798 74.586 li
288.712 71.1838 li
289.6 67.9848 li
290.514 65.0142 li
291.428 62.3231 li
292.342 59.9363 li
293.231 57.8545 li
294.145 56.1026 li
295.059 54.7063 li
295.973 53.64 li
296.862 49.3746 li
297.776 45.236 li
298.69 41.2753 li
299.578 37.543 li
300.492 34.0649 li
301.406 30.9165 li
302.32 28.0983 li
303.209 25.6356 li
304.123 23.5538 li
305.037 21.8272 li
305.951 20.5071 li
306.84 19.5675 li
307.754 18.9838 li
308.668 18.7297 li
309.582 18.8314 li
310.47 19.1867 li
311.384 19.8216 li
312.298 20.6594 li
313.187 21.6749 li
314.101 22.8427 li
315.015 24.0614 li
315.929 25.3562 li
316.817 26.6258 li
317.731 27.8698 li
318.645 29.0123 li
319.559 30.028 li
320.448 30.8912 li
321.362 31.5514 li
322.276 31.9828 li
323.19 32.186 li
324.079 28.8855 li
324.993 25.6609 li
325.907 22.538 li
326.795 19.6184 li
327.709 16.9016 li
328.623 14.4899 li
329.537 12.3825 li
330.426 10.6559 li
331.34 9.31049 li
332.254 8.39648 li
333.168 7.93947 li
334.057 7.93947 li
334.971 8.42177 li
335.885 9.36107 li
336.799 10.7321 li
337.687 8.95494 li
338.601 7.38071 li
339.515 6.03529 li
340.404 4.94335 li
341.318 4.15639 li
342.232 3.67409 li
343.146 3.54704 li
344.035 3.77555 li
344.949 4.38489 li
345.863 5.37507 li
346.777 6.74608 li
347.665 8.47264 li
348.579 10.5545 li
349.493 12.9918 li
350.407 15.7591 li
351.296 18.8314 li
352.21 22.1828 li
353.124 25.7627 li
354.013 29.571 li
354.927 33.557 li
355.841 37.6701 li
356.755 41.8846 li
357.643 46.1756 li
358.557 50.4915 li
359.471 54.8078 li
360.385 59.0732 li
361.274 63.2624 li
362.188 67.3754 li
363.102 71.3108 li
364.016 75.1192 li
364.905 73.2656 li
365.819 71.1838 li
366.733 68.924 li
367.621 66.4614 li
368.535 63.8717 li
369.449 61.155 li
370.363 58.3876 li
371.252 55.5695 li
372.166 52.726 li
373.08 49.9078 li
373.994 47.1149 li
374.882 44.3728 li
375.796 41.7323 li
376.71 39.1681 li
377.625 36.7052 li
378.513 34.3696 li
379.427 32.1607 li
380.341 30.0786 li
381.23 28.1491 li
382.144 26.3464 li
383.058 24.6707 li
383.972 23.1474 li
384.86 21.7258 li
385.774 20.4562 li
386.688 19.2884 li
387.602 18.2474 li
388.491 17.3081 li
389.405 16.4702 li
390.319 15.7086 li
391.233 15.0483 li
392.122 14.4646 li
393.036 13.9314 li
393.95 13.4744 li
394.838 13.0936 li
395.752 12.738 li
396.666 12.4334 li
397.58 12.1796 li
398.469 11.9511 li
399.383 11.7478 li
400.297 11.5702 li
401.211 11.4432 li
402.1 11.3161 li
403.014 11.2147 li
403.928 11.1385 li
404.41 11.0623 li
404.41 96.8777 li
403.928 96.9539 li
403.014 97.0301 li
402.1 97.1316 li
401.211 97.2585 li
400.297 97.3855 li
399.383 97.5378 li
398.469 97.7156 li
397.58 97.8933 li
396.666 98.1218 li
395.752 98.3757 li
394.838 98.6549 li
393.95 98.9596 li
393.036 99.3151 li
392.122 99.6705 li
391.233 100.077 li
390.319 100.508 li
389.405 100.94 li
388.491 101.397 li
387.602 101.879 li
386.688 102.362 li
385.774 102.819 li
384.86 103.276 li
383.972 103.682 li
383.058 104.063 li
382.144 104.393 li
381.23 104.647 li
380.341 104.799 li
379.427 104.85 li
378.513 104.774 li
377.625 104.545 li
376.71 104.164 li
375.796 103.606 li
374.882 102.819 li
373.994 101.854 li
373.08 100.661 li
372.166 99.2135 li
371.252 97.5378 li
370.363 95.5828 li
369.449 93.3994 li
368.535 90.9621 li
367.621 88.2453 li
366.733 85.3004 li
365.819 82.1266 li
364.905 78.7244 li
364.016 75.1192 li
363.102 76.6934 li
362.188 77.9627 li
361.274 78.9276 li
360.385 79.5622 li
359.471 79.8163 li
358.557 79.7145 li
357.643 79.207 li
356.755 78.3182 li
355.841 77.0487 li
354.927 75.3986 li
354.013 73.3926 li
353.124 71.0062 li
352.21 68.2894 li
351.296 65.2683 li
350.407 61.9675 li
349.493 58.4385 li
348.579 54.7063 li
347.665 50.8218 li
346.777 46.8358 li
345.863 42.7989 li
344.949 38.762 li
344.035 34.7757 li
343.146 30.8659 li
342.232 27.159 li
341.318 23.63 li
340.404 20.3548 li
339.515 17.4095 li
338.601 14.7945 li
337.687 12.5604 li
336.799 10.7324 li
335.885 12.6619 li
334.971 14.6675 li
334.057 16.7496 li
333.168 18.8314 li
332.254 20.8879 li
331.34 22.8683 li
330.426 24.7472 li
329.537 26.4735 li
328.623 27.9968 li
327.709 29.3173 li
326.795 30.4089 li
325.907 31.2467 li
324.993 31.8308 li
324.079 32.1355 li
323.19 32.186 li
322.276 35.5121 li
321.362 38.7873 li
320.448 41.9611 li
319.559 45.0078 li
318.645 47.8512 li
317.731 50.4662 li
316.817 52.8274 li
315.929 54.9095 li
315.015 56.6614 li
314.101 58.1086 li
313.187 59.2255 li
312.298 60.0128 li
311.384 60.4951 li
310.47 60.6727 li
309.582 60.5965 li
308.668 60.2413 li
307.754 59.7081 li
306.84 58.9717 li
305.951 58.1339 li
305.037 57.1946 li
304.123 56.2297 li
303.209 55.2904 li
302.32 54.4016 li
301.406 53.64 li
300.492 53.0306 li
299.578 52.5989 li
298.69 52.4213 li
297.776 52.5228 li
296.862 52.9292 li
295.973 53.6653 li
295.059 58.0068 li
294.145 62.374 li
293.231 66.6899 li
292.342 70.9047 li
291.428 74.9669 li
290.514 78.8005 li
289.6 82.3804 li
288.712 85.6303 li
287.798 88.5247 li
286.884 91.0129 li
285.97 93.0439 li
285.081 94.6434 li
284.167 95.786 li
283.253 96.4207 li
282.364 96.573 li
281.45 100.051 li
280.536 103.377 li
279.622 106.5 li
278.734 106.983 li
269.162 106.983 li
.875 gry
ef
357.643 79.2067 mo
356.755 78.3182 li
355.841 77.0487 li
354.927 75.3983 li
354.013 73.3926 li
353.124 71.0062 li
352.21 68.2894 li
351.296 65.268 li
350.407 61.9675 li
349.493 58.4385 li
348.579 54.7063 li
347.665 50.8218 li
346.777 46.8355 li
345.863 42.7986 li
344.949 38.7617 li
344.035 34.7757 li
343.146 30.8659 li
342.232 27.159 li
341.318 23.63 li
340.404 20.3548 li
339.515 17.4095 li
338.601 14.7945 li
337.687 12.5601 li
336.799 10.7321 li
335.885 12.6619 li
334.971 14.6675 li
334.057 16.7493 li
333.168 18.8314 li
332.254 20.8879 li
331.34 22.8683 li
330.426 24.7469 li
329.538 26.4735 li
328.624 27.9968 li
327.71 29.317 li
326.795 30.4089 li
325.907 31.2467 li
324.993 31.8305 li
324.079 32.1351 li
323.19 32.186 li
322.276 35.5121 li
321.362 38.7873 li
320.448 41.9608 li
319.56 45.0075 li
318.646 47.8512 li
317.732 50.4662 li
316.818 52.8274 li
315.929 54.9092 li
315.015 56.6611 li
314.101 58.1083 li
313.187 59.2255 li
312.298 60.0125 li
311.384 60.4951 li
310.47 60.6727 li
309.582 60.5965 li
308.668 60.241 li
307.754 59.7078 li
306.84 58.9717 li
305.951 58.1339 li
305.037 57.1943 li
304.123 56.2297 li
303.209 55.2901 li
302.32 54.4016 li
301.406 53.64 li
300.492 53.0306 li
299.578 52.5989 li
298.69 52.4213 li
297.776 52.5228 li
296.862 52.9289 li
295.973 53.6653 li
295.059 58.0068 li
294.145 62.3736 li
293.231 66.6899 li
292.342 70.9044 li
291.428 74.9669 li
290.514 78.8005 li
289.6 82.3804 li
288.712 85.6303 li
287.798 88.5247 li
286.884 91.0126 li
285.97 93.0439 li
285.081 94.6433 li
284.167 95.7859 li
283.253 96.4206 li
282.365 96.5729 li
281.451 100.051 li
280.537 103.377 li
279.623 106.5 li
278.734 106.982 li
269.162 106.982 li
269.162 58.1339 li
@
363.102 71.3108 mo
364.016 75.1192 li
364.905 73.2656 li
365.819 71.1838 li
366.733 68.924 li
367.621 66.4614 li
368.535 63.8717 li
369.449 61.155 li
370.363 58.3876 li
371.252 55.5695 li
372.166 52.726 li
373.08 49.9078 li
373.994 47.1149 li
374.882 44.3728 li
375.796 41.7323 li
376.71 39.1681 li
377.625 36.7052 li
378.513 34.3696 li
379.427 32.1607 li
380.341 30.0786 li
381.23 28.1491 li
382.144 26.3464 li
383.058 24.6707 li
383.972 23.1474 li
384.86 21.7258 li
385.774 20.4562 li
386.688 19.2884 li
387.602 18.2474 li
388.491 17.3081 li
389.405 16.4702 li
390.319 15.7086 li
391.233 15.0483 li
392.122 14.4646 li
393.036 13.9314 li
393.95 13.4744 li
394.838 13.0936 li
395.752 12.738 li
396.666 12.4334 li
397.58 12.1796 li
398.469 11.9511 li
399.383 11.7478 li
400.297 11.5702 li
401.211 11.4432 li
402.1 11.3161 li
403.014 11.2147 li
403.928 11.1385 li
404.41 11.0623 li
404.41 96.8777 li
403.928 96.9539 li
403.014 97.0301 li
402.1 97.1316 li
401.211 97.2586 li
400.297 97.3855 li
399.383 97.5378 li
398.469 97.7156 li
397.58 97.8933 li
396.666 98.1218 li
395.752 98.3757 li
394.838 98.6549 li
393.95 98.9596 li
393.036 99.3151 li
392.122 99.6705 li
391.233 100.077 li
390.319 100.508 li
389.405 100.94 li
388.491 101.397 li
387.602 101.879 li
386.688 102.362 li
385.774 102.819 li
384.86 103.276 li
383.972 103.682 li
383.058 104.063 li
382.144 104.393 li
381.23 104.647 li
380.341 104.799 li
379.427 104.85 li
378.513 104.774 li
377.625 104.545 li
376.71 104.164 li
375.796 103.606 li
374.882 102.819 li
373.994 101.854 li
373.08 100.661 li
372.166 99.2135 li
371.252 97.5378 li
370.363 95.5828 li
369.449 93.3994 li
368.535 90.9621 li
367.621 88.2453 li
366.733 85.3004 li
365.819 82.1266 li
364.905 78.7244 li
364.016 75.1192 li
363.102 76.6934 li
362.188 77.9627 li
361.274 78.9276 li
360.385 79.5622 li
359.471 79.8163 li
358.557 79.7145 li
357.643 79.207 li
@
273.275 76.0585 mo
274.189 79.3846 li
275.103 82.558 li
275.992 85.5033 li
276.906 88.1944 li
277.82 90.5812 li
278.734 92.5869 li
279.622 94.2371 li
280.536 95.4558 li
281.45 96.2429 li
282.364 96.5729 li
283.253 92.9424 li
284.167 89.2608 li
285.081 85.5033 li
285.97 81.7964 li
286.884 78.115 li
287.798 74.586 li
288.712 71.1838 li
289.6 67.9848 li
290.514 65.0142 li
291.428 62.3231 li
292.342 59.9363 li
293.231 57.8545 li
294.145 56.1026 li
295.059 54.7063 li
295.973 53.64 li
296.862 49.3746 li
297.776 45.236 li
298.69 41.2753 li
299.578 37.543 li
300.492 34.0649 li
301.406 30.9165 li
302.32 28.0983 li
303.209 25.6356 li
304.123 23.5538 li
305.037 21.8272 li
305.951 20.5071 li
306.84 19.5675 li
307.754 18.9838 li
308.668 18.7297 li
309.582 18.8314 li
310.47 19.1867 li
311.384 19.8216 li
312.298 20.6594 li
313.187 21.6749 li
314.101 22.8427 li
315.015 24.0614 li
315.929 25.3562 li
316.817 26.6258 li
317.731 27.8698 li
318.645 29.0123 li
319.559 30.028 li
320.448 30.8912 li
321.362 31.5514 li
322.276 31.9828 li
323.19 32.186 li
324.079 28.8855 li
324.993 25.6609 li
325.907 22.538 li
326.795 19.6184 li
327.709 16.9016 li
328.623 14.4899 li
329.537 12.3825 li
330.426 10.6559 li
331.34 9.31049 li
332.254 8.39648 li
333.168 7.93947 li
334.057 7.93947 li
334.971 8.42177 li
335.885 9.36107 li
336.799 10.7321 li
337.687 8.95494 li
338.601 7.38071 li
339.515 6.03529 li
340.404 4.94335 li
341.318 4.15639 li
342.232 3.67409 li
343.146 3.54704 li
344.035 3.77555 li
344.949 4.38489 li
345.863 5.37507 li
346.777 6.74608 li
347.665 8.47264 li
348.579 10.5545 li
349.493 12.9918 li
350.407 15.7591 li
351.296 18.8314 li
352.21 22.1828 li
353.124 25.7627 li
354.013 29.571 li
354.927 33.557 li
355.841 37.6701 li
356.755 41.8846 li
357.643 46.1756 li
358.557 50.4915 li
359.471 54.8078 li
360.385 59.0732 li
361.274 63.2624 li
362.188 67.3754 li
363.102 71.3108 li
@
269.162 58.1339 mo
269.644 61.739 li
270.558 65.3698 li
271.472 69.0002 li
272.361 72.5548 li
273.275 76.0585 li
@
.60934 lw
315.015 43.8397 mo
315.929 43.1794 li
316.818 42.3416 li
317.732 41.3261 li
318.646 40.1583 li
319.56 38.8126 li
320.448 37.3145 li
321.362 35.715 li
322.276 33.9888 li
323.19 32.186 li
324.079 30.3071 li
324.993 28.3777 li
325.907 26.4226 li
326.795 24.4678 li
327.71 22.538 li
328.624 20.6339 li
329.538 18.8058 li
330.426 17.0796 li
331.34 15.4801 li
332.254 14.0835 li
333.168 12.8648 li
334.057 11.9002 li
334.971 11.1894 li
335.885 10.8086 li
336.799 10.7324 li
337.687 11.0371 li
338.601 11.6717 li
339.515 12.7124 li
340.404 14.1343 li
341.318 15.9115 li
342.232 18.0442 li
343.146 20.5071 li
344.035 23.2744 li
344.949 26.2958 li
345.863 29.5455 li
346.777 32.9477 li
347.665 36.4767 li
348.579 40.0566 li
349.493 43.6873 li
350.407 47.2672 li
351.296 50.7456 li
352.21 54.1223 li
353.124 57.3213 li
354.013 60.3427 li
354.927 63.11 li
355.841 65.6236 li
356.755 67.8577 li
357.643 69.8128 li
358.557 71.4632 li
359.471 72.8086 li
360.385 73.8497 li
361.274 74.586 li
362.188 75.043 li
363.102 75.2207 li
364.016 75.1192 li
364.905 74.7637 li
365.819 74.1796 li
366.733 73.3926 li
367.621 72.4025 li
368.535 71.2347 li
369.449 69.9398 li
370.363 68.5179 li
371.252 66.9946 li
372.166 65.3698 li
373.08 63.7194 li
373.994 62.0437 li
374.882 60.3427 li
375.796 58.667 li
376.71 57.0419 li
377.625 55.4933 li
378.513 54.0208 li
379.427 52.6751 li
380.341 51.4564 li
381.23 50.3901 li
382.144 49.4761 li
383.058 48.7653 li
383.972 48.2574 li
384.86 47.9527 li
385.774 47.8512 li
386.688 47.9527 li
387.602 48.2574 li
388.491 48.7397 li
389.405 49.3999 li
390.319 50.2124 li
391.233 51.1517 li
392.122 52.1928 li
393.036 53.3097 li
393.95 54.4522 li
394.838 55.5947 li
395.752 56.712 li
396.666 57.753 li
397.58 58.7432 li
398.469 59.6063 li
399.383 60.368 li
400.297 60.9773 li
401.211 61.4596 li
402.1 61.8405 li
403.014 62.069 li
403.928 62.2213 li
404.842 62.2722 li
0 0 1 rgb
@
268.756 71.5899 mo
269.644 75.5762 li
270.558 79.3846 li
271.472 82.9898 li
272.361 86.3411 li
273.275 89.3625 li
274.189 92.0284 li
275.103 94.3133 li
275.992 96.1921 li
276.906 97.6139 li
277.82 98.6041 li
278.734 99.1119 li
279.622 99.1372 li
280.536 98.731 li
281.45 97.8678 li
282.364 96.5729 li
283.253 94.8719 li
284.167 92.8407 li
285.081 90.4542 li
285.97 87.7883 li
286.884 84.8687 li
287.798 81.7711 li
288.712 78.5468 li
289.6 75.2207 li
290.514 71.8693 li
291.428 68.5179 li
292.342 65.2427 li
293.231 62.069 li
294.145 59.0732 li
295.059 56.255 li
295.973 53.6653 li
296.862 51.3041 li
297.776 49.2476 li
298.69 47.4957 li
299.578 46.0232 li
300.492 44.8298 li
301.406 43.9411 li
302.32 43.3318 li
303.209 42.9509 li
304.123 42.8242 li
305.037 42.8495 li
305.951 43.0018 li
306.839 43.2812 li
307.753 43.6112 li
308.667 43.9667 li
309.581 44.2967 li
310.47 44.5505 li
311.384 44.7028 li
312.298 44.7284 li
313.187 44.6013 li
314.101 44.322 li
315.015 43.8397 li
@
315.015 38.7111 mo
315.929 38.7617 li
316.818 38.6094 li
317.732 38.3047 li
318.646 37.7715 li
319.56 37.0355 li
320.448 36.1214 li
321.362 34.9789 li
322.276 33.6841 li
323.19 32.186 li
324.079 30.5612 li
324.993 28.8347 li
325.907 27.0319 li
326.795 25.1533 li
327.71 23.2744 li
328.624 21.4211 li
329.538 19.6184 li
330.426 17.9174 li
331.34 16.3432 li
332.254 14.9213 li
333.168 13.6773 li
334.057 12.611 li
334.971 11.7731 li
335.885 11.1385 li
336.799 10.7321 li
337.687 10.5545 li
338.601 10.6053 li
339.515 10.8591 li
340.404 11.3161 li
341.318 11.9763 li
342.232 12.8142 li
343.146 13.8297 li
344.035 15.023 li
344.949 16.3685 li
345.863 17.8665 li
346.777 19.5422 li
347.665 21.3702 li
348.579 23.3506 li
349.493 25.5086 li
350.407 27.8192 li
351.296 30.2818 li
352.21 32.9477 li
353.124 35.7406 li
354.013 38.7111 li
354.927 41.8084 li
355.841 45.0583 li
356.755 48.3844 li
357.643 51.7864 li
358.557 55.2648 li
359.471 58.7176 li
360.385 62.196 li
361.274 65.5983 li
362.188 68.8988 li
363.102 72.0725 li
364.016 75.1192 li
364.905 77.9627 li
365.819 80.6033 li
366.733 83.0406 li
367.621 85.2239 li
368.535 87.179 li
369.449 88.8799 li
370.363 90.3524 li
371.252 91.5967 li
372.166 92.6121 li
373.08 93.3992 li
373.994 93.9578 li
374.882 94.3132 li
375.796 94.491 li
376.71 94.4656 li
377.625 94.2371 li
378.513 93.8055 li
379.427 93.2215 li
380.341 92.4089 li
381.23 91.4188 li
382.144 90.251 li
383.058 88.9052 li
383.972 87.3566 li
384.86 85.6556 li
385.774 83.7767 li
386.688 81.7964 li
387.602 79.6893 li
388.491 77.5057 li
389.405 75.2968 li
390.319 73.088 li
391.233 70.93 li
392.122 68.8735 li
393.036 66.9693 li
393.95 65.2427 li
394.838 63.7447 li
395.752 62.526 li
396.666 61.612 li
397.58 61.0026 li
398.469 60.7741 li
399.383 60.8503 li
400.297 61.282 li
401.211 62.0184 li
402.1 63.0339 li
403.014 64.3034 li
403.928 65.7506 li
404.842 67.3501 li
1 0 0 rgb
@
268.756 98.3248 mo
269.644 99.2642 li
270.558 100.077 li
271.472 100.788 li
272.361 101.371 li
273.275 101.829 li
274.189 102.133 li
275.103 102.26 li
275.992 102.26 li
276.906 102.057 li
277.82 101.676 li
278.734 101.092 li
279.622 100.305 li
280.536 99.2896 li
281.45 98.0455 li
282.364 96.5729 li
283.253 94.8465 li
284.167 92.9168 li
285.081 90.7336 li
285.97 88.3215 li
286.884 85.6809 li
287.798 82.8627 li
288.712 79.8416 li
289.6 76.6931 li
290.514 73.4435 li
291.428 70.0922 li
292.342 66.7152 li
293.231 63.3385 li
294.145 60.0125 li
295.059 56.7628 li
295.973 53.6653 li
296.862 50.7203 li
297.776 47.9783 li
298.69 45.4901 li
299.578 43.2812 li
300.492 41.3261 li
301.406 39.676 li
302.32 38.3303 li
303.209 37.264 li
304.123 36.477 li
305.037 35.9691 li
305.951 35.7153 li
306.839 35.6644 li
307.753 35.7915 li
308.667 36.0706 li
309.581 36.4514 li
310.47 36.8831 li
311.384 37.3654 li
312.298 37.8224 li
313.187 38.2289 li
314.101 38.5335 li
315.015 38.7111 li
@
315.015 46.1756 mo
315.929 45.3121 li
316.818 44.2205 li
317.732 42.9509 li
318.646 41.5038 li
319.56 39.8789 li
320.448 38.1271 li
321.362 36.2229 li
322.276 34.2425 li
323.19 32.186 li
324.079 30.1042 li
324.993 27.9968 li
325.907 25.915 li
326.795 23.8838 li
327.71 21.9287 li
328.624 20.0754 li
329.538 18.3235 li
330.426 16.6987 li
331.34 15.2515 li
332.254 13.982 li
333.168 12.8904 li
334.057 12.0269 li
334.971 11.367 li
335.885 10.9353 li
336.799 10.7324 li
337.687 10.783 li
338.601 11.0876 li
339.515 11.6717 li
340.404 12.4839 li
341.318 13.5503 li
342.232 14.8707 li
343.146 16.4194 li
344.035 18.1965 li
344.949 20.1768 li
345.863 22.3604 li
346.777 24.6963 li
347.665 27.1843 li
348.579 29.7995 li
349.493 32.516 li
350.407 35.3089 li
351.296 38.1524 li
352.21 41.0215 li
353.124 43.9411 li
354.013 46.8355 li
354.927 49.7046 li
355.841 52.5736 li
356.755 55.3662 li
357.643 58.1339 li
358.557 60.8503 li
359.471 63.4656 li
360.385 66.0297 li
361.274 68.467 li
362.188 70.8282 li
363.102 73.0371 li
364.016 75.1192 li
364.905 77.0234 li
365.819 78.7497 li
366.733 80.2986 li
367.621 81.5935 li
368.535 82.6598 li
369.449 83.472 li
370.363 84.0052 li
371.252 84.2593 li
372.166 84.2337 li
373.08 83.929 li
373.994 83.3453 li
374.882 82.5075 li
375.796 81.3902 li
376.71 80.0701 li
377.625 78.5468 li
378.513 76.8455 li
379.427 74.9922 li
380.341 73.0627 li
381.23 71.0823 li
382.144 69.0764 li
383.058 67.0707 li
383.972 65.1413 li
384.86 63.3133 li
385.774 61.612 li
386.688 60.0633 li
387.602 58.7176 li
388.491 57.6007 li
389.405 56.6867 li
390.319 56.0517 li
391.233 55.6709 li
392.122 55.5695 li
393.036 55.7218 li
393.95 56.1535 li
394.838 56.839 li
395.752 57.753 li
396.666 58.8955 li
397.58 60.241 li
398.469 61.7643 li
399.383 63.3894 li
400.297 65.1413 li
401.211 66.9437 li
402.1 68.7973 li
403.014 70.6253 li
403.928 72.4278 li
404.842 74.1543 li
0 1 0 rgb
@
268.756 88.2706 mo
269.644 90.9365 li
270.558 93.4247 li
271.472 95.7351 li
272.361 97.817 li
273.275 99.6196 li
274.189 101.092 li
275.103 102.209 li
275.992 102.946 li
276.906 103.276 li
277.82 103.174 li
278.734 102.666 li
279.622 101.727 li
280.536 100.381 li
281.45 98.6548 li
282.364 96.5729 li
283.253 94.161 li
284.167 91.4952 li
285.081 88.6009 li
285.97 85.5286 li
286.884 82.3295 li
287.798 79.0799 li
288.712 75.7791 li
289.6 72.5295 li
290.514 69.3305 li
291.428 66.2582 li
292.342 63.3385 li
293.231 60.5712 li
294.145 58.0321 li
295.059 55.7218 li
295.973 53.6653 li
296.862 51.8372 li
297.776 50.2886 li
298.69 48.9682 li
299.578 47.9274 li
300.492 47.1401 li
301.406 46.5817 li
302.32 46.2261 li
303.209 46.0738 li
304.123 46.0485 li
305.037 46.2009 li
305.951 46.4041 li
306.839 46.6831 li
307.753 46.9878 li
308.667 47.2925 li
309.581 47.521 li
310.47 47.6733 li
311.384 47.6989 li
312.298 47.5972 li
313.187 47.3181 li
314.101 46.8355 li
315.015 46.1756 li
@
grestore
.60934 lw
279.775 96.5729 mo
284.954 96.5729 li
@
282.364 93.9833 mo
282.364 99.1626 li
@
293.383 53.6653 mo
298.563 53.6653 li
@
295.973 51.0756 mo
295.973 56.255 li
@
320.6 32.186 mo
325.78 32.186 li
@
323.19 29.5963 mo
323.19 34.7757 li
@
334.209 10.7321 mo
339.388 10.7321 li
@
336.799 8.14239 mo
336.799 13.3218 li
@
361.426 75.1192 mo
366.605 75.1192 li
@
364.016 72.5295 mo
364.016 77.7089 li
@
true set_gvm
reset_gvm
/REKTFK+Helvetica*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma 3{/.notdef}rp 
/zero /one /two 2{/.notdef}rp /five 48{/.notdef}rp /f 2{/.notdef}rp 
/i 4{/.notdef}rp /n /o /p 3{/.notdef}rp /t /u 
2{/.notdef}rp /x 6{/.notdef}rp /minus 128{/.notdef}rp]
REKTFK+Helvetica nf
REKTFK+Helvetica*1 [7.31208 0 0 -7.31208 0 0 ]msf
324.993 121.759 mo
(input, x)
[1.6232 4.06549 4.06552 4.06552 2.03275 2.03278 2.03275 0 ]xsh
REKTFK+Helvetica*1 [0 -7.31208 -7.31208 0 0 0 ]msf
256.518 71.1329 mo
(output, f\(x\))
[-4.06551 -4.06552 -2.03276 -4.06551 -4.06552 -2.03276 -2.03276 -2.03276 -2.03275 -2.43487 -3.65604 0 
]ysh
grestore
true set_gvm
%ADOBeginSubsetFont: FZLBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFE+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/fi <1C60D8A8C9B08A95C5897169EED9664BED359E1B6FA8046F967D286B5C3
15A2CE47E3043EA3526C6192449635F2DA5AE3EE73919B52D525C096ECB55C63
DDB789A7F918074FC45E4ACDE6751656039844BA59107A293FBC6F9D2FA57995
2076F62E9DABA5CEDE9C9326D1250FF5FA67CCED67DFAA3C183BF1B9C26748E0
DDFEEE8F8464B1DCA14FE4BD296DEF29C921827AB4EDDC974773DB09417C4F23
2E6AD283B19FF29059BF9379DF784AAAD95EC606450E2256F10C70E5A28F3650
8106B27B13371584DB56C0B1A191AE795A2B9CE6617EFD2A3> |-
/parenleft <1C60D8A8C9B08A958B2129D6E9761120E2D623F206A8BB61D8ED
90A20EE239C62172B553BFF416342D6CD99C95C515CA225C40039DBAF08CE4F0
55B08F39C15D29C99EF3EDD066CCCEF8932365A3BB1620FA5F0BCE8AF21A5BDE
C0FFD55FA45F247FC811007CB408F0DCDD3AE01E3246> |-
/parenright <1C60D8A8C9B08A958B2129D6E9761120E2D623F206A8A207F03
DEA8F466C0D4F860EDF515D421F89285FC2D8EC76F5E903EDE1B5CFFAEC5DEA9
22C7FC4A51953A99A5FB1F96793348D816F60492670058F4DEA6D328AB20FBAD
B3C1B57A79D8CCD13A3C6D068BAD5F09F347ED0C895> |-
/colon <1C60D8A8C9B08A9570810981675968F2C9119AD767573D3896DCDEF9
DA5F5F8912E04C94872E9ED59B26AA7979866D70736E39162F6D45AC4E5BC3A4
24B2E5A438DB713C33C0D2FE26717D> |-
/F <1C60D8A8C9B08A95E211B68BD74B7CA2EA30EA4FC2444F1F126966AA7729
7BA7EB9B6F06068DCAA13C02B3588F5A46379A5072E7E2DBF343C097B55CA4D5
88C6753F362DD28478A1BC56804A66D1A6D1CB247FEE04B2647D343D14D14B66
B993C73F534C4128A2626BB2404D5D4FD30D29B727A906D4DCB574AC37C31D5E
5DAFB5704A4D0DA0711E1E> |-
/b <1C60D8A8C9B08A95C5897169EED96D271CC0A201580A85BBB6CFE03702C9
389AEE25CE69D1BDDECD4E28232C32A3113C892241798575F645E97E1FEF4D17
BABACA9B1400EB966B8CBA5BFC74A4181A1A52C4AC1E4D4BCB3BEFBF05CAB342
4B8B71500585C2C89CD37B890F00AF434789553E13269B7993EDDE63F9B6DB1C
CC49FF90A25496B9C07E5617BD7387C1694D4EBB8E59CF0CEF85691D4C91D3CD
1D33AB05DBBDE11A3BE1086B97B8CBA534FBFB> |-
/d <1C60D8A8C9B08A95C5897169EED96D33CB6A9013DDE3D04C2845E595598C
4E4627D0E1F97AFD1FA3154224DA0D119EDECEF82924766CE4492626DF7B3B07
C4245B263AA58C37772C982C7955B9EED30A1A264318D030C3D295AD4CC9C21E
7AC9D2948AC9CD001C0EF80B50DF932CF6EE69C321627BC51A66341B5399D1E7
8024F824DB5DEE83140E59FB88138D6F0F5D2F350BA93460F2F700A9AE6D35AB
E4DB962D8E6D84D6D606A800DD98F8807C3555FEEB> |-
/p <1C60D8A8C9B08A95C5897169EED91609D9E4D5F91353A54E37DF51998183
52315911AF5324EFF8F803A0D7623A2DDCB047188B5B8F28AB77A5ED34430D99
57B9E0225FBFAE612AB3A16746E264A6930D63A3F157DEFA872D2CA520250AA3
380B48623F26CA3F7D040CB163CC4C6240013209FBA4AD816878F179C8F27320
EBC05CF6C42FFA533A0E8716E243D2941CFE755ACC6E312A0F393F2C290E0F1A
CE85DBC680C6195A83A8DF92> |-
/v <1C60D8A8C9B08A95D222871B45C81C126204E8A3F3EFC2EBF937B1E5F2B8
737EDCCFF78DB8693FA0E7B559CFAC0A233112105FC1A8807ADD3013D4AE86C4
38318F1223CADD606642DF7E9A8EE9BE743E975DA759D856D52F7E927FE33606
3979ED38AB2E1EA4CB4F371A1EB04E6C5B864C9DB5271435AB2DE7D9DE15A6B1
D9E3FD555F015DADE467> |-
/w <1C60D8A8C9B08A9454CA4C75C5C9761F27DFD501BA4813FE991E533E1CD1
E174DB2ECA59D495EC56B0C1FD43D089BD170DD220487C38F20C192FAA7E2E88
3AD5437BC552CE37BD6C6BBA40409BE02939A8B895FF98709899D61A578F68A8
22D6CFB7A000AD2B69212700685F8E729740E6656D3B8D43A0C52B18628B0EFF
5F05D1944E33A86827C6670A3438CE653DA430AB3E54D22481FDFA780C4812C2
F3255AA0E07A5FC796A8653D62150A6CD8B7FE4B68F43CAA66CB6512EB54E359
E67F4D5FAA2BB87B8812835557ADA47955DD5F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFE+CMR10 /Encoding get
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 58 /colon put
dup 70 /F put
dup 98 /b put
dup 100 /d put
dup 112 /p put
dup 118 /v put
dup 119 /w put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFE+CMR10*1 
[12{/.notdef}rp /fi 25{/.notdef}rp /ampersand /.notdef /parenleft /parenright 2{/.notdef}rp 
/comma /.notdef /period /.notdef /zero /one /two /three 
/.notdef /five /six /.notdef /eight /.notdef /colon 7{/.notdef}rp 
/B /C /.notdef /E /F /G /.notdef /I 
/.notdef /K /L /M /N /.notdef /P /.notdef 
/R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}rp]
REKTFE+CMR10 nf
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
137.547 135.542 mo
(\(a\),prior\(b\),posterior)
[3.87553 4.98129 3.87553 6.08714 5.52924 3.90532 2.76961 4.98129 125.977 3.87552 5.52927 3.87552 
6.08716 5.8082 4.98129 3.93518 3.87555 4.4234 3.9053 2.76962 4.98126 0 ]xsh
72 152.685 mo
(Figure2.2:)
[6.50558 2.7696 4.9813 5.52924 3.90532 9.22537 4.98129 2.76961 4.98129 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: ZLQBAA+CMR9 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /ZLQBAA+CMR9 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 37 /percent put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 46 /period put
dup 53 /five put
dup 57 /nine put
dup 59 /semicolon put
dup 71 /G put
dup 73 /I put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
def
/UniqueID 5000792 def
/FontBBox {-39 -250 1036 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 448 666 677] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [74] def
/StemSnapH [25 31] def
/StemSnapV [74 90] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
35 dict dup begin
/fi <1C60D8A8C9B08A95C3FA670F19FFF74DD8132D298A098C3C703491A946B
BAD95F352639E308B34F7DAF5B247CA13392D8F98AAD257B53D82CB1E84427CC
689BFAB9C69577612758DA447E193D3C52A4D1F3600C070CF32C05254D4526F3
4270B21C9CB964B9E837FE8EFB4406FD7400D210A7B9D48B84827674D4E2D5B8
3EA9236BB90A76C143110306EF75032252DC690C46402B9B3996CD6433503EB3
80AEB9D741D7EDB5C78945BA146F00DF14DD8329E74CA88522652DB9D7C30> |-
/percent <1C60D8A8C9B08A94009736013DEB7A09D486019681F9D4C746E81F
F16CF3F916604EC57141084C0CCDA1F14E0C98206271A6B13C9AA495EAB044A3
69387065E1D0AD7DDD3166B10476672E064EC8EC341510BCE4394C6834132585
D0CAEFD7338A734ACE870D4E8E46F462846017003E407CDA1DDF4A5C79002C3D
669FA74EA0D60DF6AE06F75601E1A718C87B059CB68245142F80264E2533DFA4
305D9B8BC158F149CFACE150AE28E7BDAD12C235DC74BC8A904C7BE9CA6434D7
BF2B9E8E31CEC38367FB976928232BCBA319F8E3ECAA79608D07C23081A27098
48DBB2BE23A68A652CF63291D70C32D13E0148A6C18D16> |-
/parenleft <1C60D8A8C9B08A9580C822583BC370487009D181CBA696B9C696
B29EB6378D54D288FED8B33B82841099847121534A760DADECBC03603D6C07BD
280D3BDFFEA365D583B0E1A16C8A40A71A1D59223A89B268D6E241812A8AC9DF
AD85469EEEB328D3DD40DEFE005EAFE3CFBF588F60> |-
/parenright <1C60D8A8C9B08A9580C822583BC370487009D181CBA691147F6
F8E8C42F265A062451575BEC72F3C54B75B3042D03FE51288E9DEA2DB7D89B60
C5AB212AD0328C2FED2452C8D71307D8BEB902AB741F57EB271E260A8DDAB60A
642C0AB4B9BA1A462E698D6BDE5146B5F8358CAA639> |-
/comma <1C60D8A8C9B08A9573EBC19D97898EED5F271860A7EC2CC8B043D15E
3407FF67DBFA3F12A81BF80727DEBB928A308E7D08A7D18782ACB9E21FB7DEAB
C6235C5DF68203473BDA4E6DE7711A004C> |-
/period <1C60D8A8C9B08A9573EBC19D9789FEFF11AAE636F5DF237793441F9
0B8B6C20714435F1AA647964795FBF0F32F7B194B> |-
/five <1C60D8A8C9B08A95D419B460E02949711E720A4077D26DD7A080E00D4
DFACD42D1BB28DE2EFD42A3AF649DD03026DD59D3B274316365CA1AC0B9FDED4
9B16FE48ADD0F7B0993C5D542ABC0A64856660F486A173F481D9955F1E105E10
5208119723D0006592E1AAC4594D0D0F6551E75A46837A2290479CF4EAD514FC
865ABD9E8C88328F80245339F7FECEFEF2E16974B6D463F0134B769A18ACBB38
12A23D6765010CC4F2EDCE247ADC1A3C45856BE188E1535F981B47EEFB6F62C3
15A1143A248112C> |-
/nine <1C60D8A8C9B08A95D419B460E02949711E33A7472A2DE7AAEC47A560E
FBC55C3A4771C86CB8DCAC67ABC4A6E27ECF3FE24FDE89141BF494BC5554E638
47046381ECE668741C55CFA4A309C2B34D468CAA11DE9B353678CEC17D7DC22C
6EE8E81137ED265514FA15D130E96CEA3D25C4FFC3B2B1523797A18A789C5638
D3F12C7E0C4E8A710990133CF07B3AF9A8B59A163FEB6121536F9DC45114286B
BF31B06DBB2636093B716EB4A> |-
/semicolon <1C60D8A8C9B08A9573EBC19D97898EED5F271860A7EC2C55AE46
167C9BEC66F766930B1F245257276454301DA82B5E393B250E63986C5F6134DD
AD22442FFFC6427FC41749228CE15568CDB652015BEB522A077CC179D18CD346
9A3FD25C46DEA2686EDE5275B4D6F5B6C990317B> |-
/G <1C60D8A8C9B08A94757772EC50DEA67D4B8BC1507544BF2EBB60DD48DA99
846D078B870505C6EA14C1380E8875DCA4B0C0C67BDB6C71D4F1E225176D2FD7
1F015657890432BCD90F5C9D03C47178FC525D5D220660901A5796F1E3FC2D7C
7EA9CD304AF112FD3354D22F912C80CEBF111300BFB04D6FF496C89AB58E031B
5FB9A405909D3CE6D3FE7B4E15555CBF423B29E6EDBD5D7E7CC47235B2E2FCE0
5EF6622FDE3A6D6C472CCC00A4F5C331> |-
/I <1C60D8A8C9B08A958C7C2E0F8AF1106E839EA0C544C043378969898F1DF5
CA5FEB5F8C5316A6B731FACE0FDB34AD20AA95601086C79319E10F1D14294D2F
F4684FD890815DEC4DE0CBBAC512136AF558B57D31B7803AA3EA761A6003B32D
6B3C243830> |-
/P <1C60D8A8C9B08A945F8187ACD39A0FBDF161548AFE73D499A60904BEA172
AF12989042C1F9EB604DF3832A1D9A521EB941648293CAEA6C7AC49145BD24D1
5FC5A95E56D10A3475CB1319375F98083821C5B37555942BA9C01963C569F7DC
6D0FC97D114AD07F527050FA66743F0B5B123B1AE593E5FDB21850817A4FF2FB
B5160EAEB3> |-
/a <1C60D8A8C9B08A95D419B460E029BC351A97D720AECA16B582308B1831F1
D149F764DE06BCAD95146E5089F42CC4883474C90F911068A2F4501899B66F9D
264EA3B277B07EDDBCFF7830C7E970EDBBB2371AB694DB2BE19BCCAD602DA6B8
B723E39B407F50B70AF04A928DF95248A8347112D3067E63B3A8B146D65E6074
339E723D6B978818DEFD4B83692A8AD91F5C81D77793DB0221E86A0D37464934
1696658F22C2A0288CB737310E> |-
/b <1C60D8A8C9B08A95C3FA670F19FFFC4B40ADBFA40584F3C2577A25FF49C4
D27F67CACE5F67694C55A7E0498729E627E6D5F227D965E87263F5B58F845D45
1996785BC2FCDCBC905A54A48AB2C6D07E126AEB7DC6DCFE9F9F469DE9BF315C
4BEAC49689FD07CD10B482A423B4E2101B3459633F1D4FD5459124FDFCCFEBE9
915DFA00C8661E042C81EAC85BB48C6A4AC05CAD2A> |-
/c <1C60D8A8C9B08A95AE6E164BF06D3E00A8466E8E49813B403558EC6479CA
DCAF39ECB164B50A3F17862939037FB783652D753064BE1ADB6FCC74FC9C1299
7BE4127DC0FE5A1F93A8C330C8CD2AF583460BAFE5396B609F76B48317ED9CBE
48E7E47E3FDC0BD70B46736F98FAC8E0946CDD0360CDDB667AFA> |-
/d <1C60D8A8C9B08A95C3FA670F19FFFC4B40ADBFA40584F3C25721D2CD65CA
815B0D07E25AE75B7E45933DCFEBE6F3ED9E9E41EFDC7EE2570F665945E1A2D5
6B379602D6C11B60CC3E8565BF5E7AEA8C399FC89FF7420239FD5B1D46731692
FA0BD5CCAF011190301CBBC8D7C481679FD017B0E66EFECE39180AB3A17996FA
F28E2C9C18C956814828FA652C6542129279DDA52B00114321B830F2> |-
/e <1C60D8A8C9B08A95AE94719F92A217774C2648AA6B92C425BFCA099BBBBD
AE8D77A4FAFD6EA63F18BD777A9CC6DA6FAADD30867C393179C08CDBCE580AA0
7F43C97A0CB0AF611C7B2280BFCB3F0255292735B0F2BA25EB94F1165AF4F00A
7AE7D05EB8356E8969279D9AE29F170D7980A6C6DC5CE1644BC30F69ED> |-
/f <1C60D8A8C9B08A95665E4A77401F2685EB54B0E0376268AAEF92033AABCC
A8914F8C8A029298120FBA3FD3FBFCD34C81B038EBBAFAFC80C24BA031420AAF
C72B9734CAE8AA21708C86B1D38A7E196277DB6E9751DE3B697E7C775C8926E3
1195B7A3FB631C48674CE17D13EA26D797012326E03DD4A845E9E64017095641
D257E5C76E81> |-
/g <1C60D8A8C9B08A95D419B460E029C70DDAAC9A8D8F85C6D05BB019436856
41A352F9842AA07B5842DB9FF3AD591D4A37EF989F61814B6DD688EA0A6E8586
3721984CAA81A816A8324076E9F1288FE7C8FB0A5637A5E78C82C3C39F3B3949
24DA9E32112DE7175AC00191FE009E83E1B28FA7A95D3343B63CA217EC1FA7BA
C7C4C8E48691DED4197CEEB479DA7BA64143534DC21F4F6D205B7764631D03ED
2AC13C80A67EEF825BFB33FB39F5B452685B38D9E95EA933A6DA09BCB823E248
57F63C2C6FBD10A598F73F70332D49AF65634FEE22B20DD382F35F30DC6F5D75
3885347E6399DA41E3A17C5F6AB78E90A48AD6F32A036C6D269C> |-
/h <1C60D8A8C9B08A95C3FA670F19FFF74DD8133C38B1071652C680C5142328
0070833095FACCDE467ABBBE3055283C4430D579D4EDC382C7245FF51FB77E1C
C26B40922243AABD63080D1D78E308B32CC210A94933272048B2D917BF77B825
C9E33AE258394FF894352292FF50CE17401D122051520187DE4B09A14A1C4DC9
EE978C00042374E7152C64679792D6396E3BA5DDA7CE90625E39ACE1> |-
/i <1C60D8A8C9B08A9573EBC19D9789FEA2129A8FB26C967F6906C40F4F6B14
9CD8FFD0B61C250AEEEB310DA333AFC9B15A0CC6C81BF28C62172BFD4CFF901C
FB6966240F8CC94C0894F20442F9621608BEC10A81889AF38B6C1B0A9C27969F
013747EACD2BAAB73B2A> |-
/j <1C60D8A8C9B08A95665E4A77401F5682D71EEE226415A2A17072EFE27199
761B315BD87DF636E67F3C2277AB724E0FF242072E27EE325C3B2D4F9B1881A0
2A986302C6E701D554FB88A80866147F296263928C2194ED98F6A6CB20B539CD
B080E10313F86FBD0C1AB4FF2CF02C389BDF2EFDF5E3DAAAFC> |-
/l <1C60D8A8C9B08A9573EBC19D9789FEA2129B5A50AC2C13D65F681395ECF4
322326CCA6DE73603E0D868BA4360C5AE5A4DF5E02CAA9D48798CB25A39657B2
360BEEF65A13B229DD03C934> |-
/m <1C60D8A8C9B08A94009736013DEBDE4B8AB4B47B2402AE843906A9F33A45
DEFE58288CAC1D433BC5FA686CCBE9963C3BBA96B2D25753ADBCB02C863B92ED
17702266CFFF625643D18C89C26488B7C95A85E37B9B172B13B2D40CAC631B2B
BED8A4021978CE78088F91E8AC9991E8F6721DD0E7ECE74D06693D788940A8B6
E6F2A9FCDEA0FFD3323710D2E3D65000DDAEC66EFBFF17CBCCE25F7C0FBA7AB8
69759DEB21794D430A86CA27CB4660BE98F3DC5AB5172A02C0E300C942E0FB4A
5C4DD0CF8EDBBF0C08E73819D35C1B6A25D6B4BB12AF> |-
/n <1C60D8A8C9B08A95C3FA670F19FFF74DD8133C38B109D769360499B3E221
348E47A5848987B10B5D375D67BABC314F7C7AA64A2787BA4CA5EEDC1C214FF7
41B350CAFC3A41F9E7212F689C8693E4921021B9D023A12DC2BCBFA7BB5061A9
42FB87ECC72857D188102B9A7A7EDD7930F04316564D7ED78EECA0BABD6EC61D
B0C81A8037C5CC4F24E29DC344638B18F1DCFF6972A790> |-
/o <1C60D8A8C9B08A95D419B460E029BC36E8EECCDC4FBC3EEEC0193E9CDDEF
800B6893AA4ED619A89915066EA9B777D49700E4B141156EBA071D8203AC8719
FDCC858DC4353134804022C6C9D97AD96775FBFDE3B06C905C7A780BBC94C527
2D93FFC2F35AD8293AB299913E123A6C686334FE9CACBADD31CEC1695A4D28> |-
/p <1C60D8A8C9B08A95C3FA670F19FF87C17F8EF39E8CF673DFD228A3B51747
CEEB32AEAF1A537B701276FC7F39B916EE4EB1D81AF9753B80934FE302DFBEF2
4494143F53C34E0A7C309D0CE9CDF64B15872D848C3AFA7FE7C448D655EF212A
380591C1C305202A83135C5A98F8B3105EEFF63E6E734230A0550D5CFC53009B
C208367570C639949F080E4F88E569BA422B88365165383E88> |-
/r <1C60D8A8C9B709C457BF6620EF18C8C8B68B2489C4862D7511687E039F96
E26CE0044627E1383EB46C9C6829F23515CAD32B8E2CEFD131AB6F954603D7D2
A2562299F41F0BFB2699AF4C8F6B3A5444FF7CD5FC2DAB158FA9C80D28587DE5
77083D5023413512CD3A7F7752762E2EF6C338185B> |-
/s <1C60D8A8C9B08A9513D3787A0E924988268B7F596C6858D1786B582B5ACB
A0068453C16043F3341F843D222630656EC0A92492CF76A0F6DE0C971F90F2AB
04E88BAFBFF8CDF96D5F845733952A8D9B5CAC18020C1E7F47FF00705E14E3C1
3D3071625E4B60A5823A304F0260F933B6632E162FD0BD13019694A21EF80079
F5B483925AD5C2C563CCB4FF9F75CA6E471C67A266642F7B707F0D1A66C2A0BE
5D3DEA3F29624CFCFDE6B43E9257B1083F641158DB3DA88DE87F5B51586A68C8
429D44B5C38E83351E48> |-
/t <1C60D8A8C9B08A9580C822583BC30BF3C9052CDFE1E1E317DBC76D13C317
B36C44A6EDA8B7AED928CDE9AB723C750666120D5BB57EAEBBB7357B28BD05AF
B7B8131F02996E3A4A80F953FAAB261B969088B40E7775888AF4B25667EA4E> |-
/u <1C60D8A8C9B08A95C3FA670F19FFFC4B40ADAEFE548534FF5063088EEF16
FC16636B92E9FBD8BEADC0F376C08AA8A8709583FE4B704ECE2C5E74787C317F
A0A93BFE85970107875CAD8FDD6901903C1F0B54CBBE339A3514B54B2E9C14FF
3285E889B0E222072AB960459C1C23DFE0B3> |-
/v <1C60D8A8C9B08A95CF7E277A5C26298076DDA5F3EBF7C0958B69E2797ADB
2D6EABDAEE8460CA3BA3C1607FBE729B09B2DC1101FCBA2896726E66650E72D6
996C8C84A0DAA4B5B07457D74C49C4D3174083B094D2ADF6FECCFDE02DB37730
619F2383BB1B61F71B08F4DA30722AF3467D3C35A56047DE5EC4DDEFD549AF7D
5D5EFD1FDDE6> |-
/w <1C60D8A8C9B08A946F6E52356EEEF0FFA76B79CCE580020E02351C4B6A69
308E99AA8E0F26B7233F7E6E9FA74B88830D4F651944EA44316958A7580A0B63
7125DA474084E3222FB65C2CA0DBABF6FBE6E44ACA0CDDB9A6834FB4207AA2FD
003A2BF184B74EEBEC96F0209D49B4262F17E4B7E8351E55A25D41FA829D81A9
E0D249D7ACAD75578649A1372DA4CDC700937FE48172293F170C72980508614C
9F39C6B243A0DEC111BA2690AB7C6067210F6C2DEFDF58A6BEF0021474E0214B
AB267937296F42C94010E2DF4598087D8552E092218B> |-
/y <1C60D8A8C9B08A95CF7E277A5C26524E453276D4045DA011AB109927F843
C0242FB8092A8C21FF0AB1552E311AA79AE59FAEE0D11988B0B80C9DE0714D2E
F36D932C83D2673F1D35D7FC7A36BA973085233017C93438A021E23965B63965
3E34EF8C19975FA9DD14A7754C72BC02A6F87219424C80E640D68831C0AAABF1
AC6391A3E21374ADDF058786A3E947069DB423217D750E704B2466EC42755969
E217003D9AEED5D32BBE68D54FEC> |-
/.notdef <1C60D8A8C9B08A9599C1D3CEECCC8D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFM+CMR9 /ZLQBAA+CMR9 findfont ct_VMDictPut
/REKTFM+CMR9*1 
[12{/.notdef}rp /fi 24{/.notdef}rp /percent 2{/.notdef}rp /parenleft /parenright 2{/.notdef}rp 
/comma /.notdef /period 6{/.notdef}rp /five 3{/.notdef}rp /nine /.notdef 
/semicolon 11{/.notdef}rp /G /.notdef /I 6{/.notdef}rp /P 16{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /j /.notdef /l /m /n /o /p 
/.notdef /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
REKTFM+CMR9 nf
REKTFM+CMR9*1 [8.9664 0 0 -8.9664 0 0 ]msf
127.794 152.685 mo
(Panel\(a\)showsthreefunctionsdrawnatrandomfromaGPprior;)
[6.01649 4.60881 5.1198 4.09766 6.99382 3.5865 4.60881 8.02487 3.63138 5.11981 4.34877 6.66206 
8.06976 3.58649 5.11981 3.60443 4.09766 8.53601 2.81541 5.1198 5.11981 4.09766 3.57753 2.56444 
4.6088 5.11981 8.06973 5.11981 3.6044 4.34882 6.66205 9.55817 4.59985 8.0249 3.6044 4.6088 
5.11981 5.11981 4.6088 12.1136 2.8154 3.60443 4.6088 12.1226 9.03821 7.23587 10.7059 5.11981 
3.60443 2.55545 4.6088 3.60443 0 ]xsh
72 162 mo
(thedotsindicatevaluesof)
[3.5865 5.11981 7.8994 5.11981 4.6088 3.58651 7.4421 2.55545 5.11981 5.1198 2.56442 4.09765 
4.59984 3.5865 7.90837 4.34877 4.6088 2.56442 5.11981 4.09766 7.44211 4.6088 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: VFJBAA+CMMI9 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /VFJBAA+CMMI9 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 121 /y put
def
/UniqueID 5087384 def
/FontBBox {-29 -250 1075 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 442 453 464] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [74] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/y <1C60D8A8C9B08A95D914B8DD618FAA684C2BBD8E293CB2392E903E5F6AC8
8BF23BE6853EC033377CBB7E19F9591AE3FA2158FB476CE3AF6A9D172945B795
A52EF556900100361D62304E5903184D7B6E666513822B94424D3612B9F3ABA7
93DE541AE65F44F1BD841B83427018699B5E60F7818B412CF8218BF277EDDB7F
F3379294AD9649D67A0EE84A06618B786F68AB1A4EAFC3235346C13608056E81
8E9B4F7ECD179FCB24A0746E803E7E56EC995BDE9F4C820016C3533E79BDDBFD
F3ABB51866066D112B3DFE99CD7862499B3511C3229896259C996434082AC7> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFN+CMMI9 /VFJBAA+CMMI9 findfont ct_VMDictPut
/REKTFN+CMMI9*1 
[121{/.notdef}rp /y 134{/.notdef}rp]
REKTFN+CMMI9 nf
REKTFN+CMMI9*1 [8.9664 0 0 -8.9664 0 0 ]msf
184.323 162 mo
(y)sh
REKTFM+CMR9*1 [8.9664 0 0 -8.9664 0 0 ]msf
192.989 162 mo
(actuallygenerated;thetwootherfunctionshave\(less)
[4.6088 4.09766 3.57755 5.1198 4.6088 2.56442 2.55547 8.67056 4.60881 4.09764 5.11981 4.09766 
3.60443 4.6088 3.58652 4.09763 5.11981 6.7338 3.58652 5.11981 7.89938 3.33545 6.3931 8.41953 
4.60876 3.57755 5.11981 4.09766 7.41513 2.81543 5.11981 5.11978 4.09766 3.57755 2.56442 4.6088 
5.11981 7.44208 5.11981 4.34879 4.6088 7.90839 3.57751 2.56442 4.09766 3.63138 0 ]xsh
72 171.315 mo
(correctly\)beendrawnaslinesbyjoiningalargenumberofevaluatedpoints.Panel\(b\))
[4.09765 4.6088 3.60442 3.60443 4.09765 4.09766 3.57754 2.56442 4.85986 5.9357 5.37984 4.09765 
4.09765 7.46901 5.11981 3.60443 4.34875 6.66208 7.46901 4.60881 5.98056 2.55547 2.56442 5.11981 
4.09764 5.98956 4.85977 7.21802 2.8154 4.59984 2.56442 5.11981 2.55545 5.11981 6.95798 6.95799 
2.56442 4.6088 3.60443 4.6088 6.44684 4.8598 5.11981 7.42419 5.37982 4.09766 5.95361 4.6088 
5.16458 4.09766 4.35773 4.59985 2.56442 5.11981 4.6088 3.57751 4.10663 7.46899 5.37085 4.60883 
2.56439 4.8598 3.58649 3.63141 6.41998 6.00751 4.60883 5.11981 4.09766 4.91364 3.58649 5.11981 
0 ]xsh
72 180.63 mo
(showsthreerandomfunctionsdrawnfromtheposterior,i.e.thepriorconditionedon)
[3.63138 5.11981 4.35773 6.65311 6.60822 3.58651 5.1198 3.60443 4.09766 7.07449 3.60442 4.6088 
5.1198 5.11981 4.59982 10.6611 2.81541 5.11981 5.1198 4.08868 3.58652 2.56442 4.59982 5.11981 
6.61719 5.11084 3.60443 4.35774 6.65311 8.09665 2.8154 3.60443 4.6088 10.6521 3.58652 5.11084 
7.07449 5.37982 4.60883 3.63135 3.58652 4.09766 3.60443 2.55545 4.60883 3.6044 5.55923 2.55542 
2.56445 4.09766 5.53229 3.58649 5.11981 7.07452 5.11981 3.60443 2.55542 4.60883 6.5813 4.08868 
4.60876 5.11981 5.11981 2.56439 3.57758 2.56439 4.60883 5.11981 4.09766 8.09662 4.59985 0 
]xsh
72 189.945 mo
(the\014venoisefreeobservationsindicated.Inbothplotstheshadedarearepresentsthe)
[3.5865 5.11981 6.65308 5.1198 4.6088 6.64411 5.1198 4.6088 2.56442 3.63138 6.65308 2.8154 
3.60443 4.09766 6.65308 4.6088 5.11981 3.64035 4.09764 3.60443 4.34877 4.6088 3.58652 2.55545 
4.6088 5.11981 6.1868 2.56442 5.11981 5.11981 2.55545 4.09766 4.60878 3.5865 4.09766 5.11981 
6.48274 3.32655 7.67522 5.37086 4.60883 3.58649 7.66626 5.11981 2.56442 4.6088 3.58649 6.18683 
3.57751 5.11981 6.65308 3.64035 5.11981 4.6088 5.11981 4.09766 7.67523 4.59985 3.60443 4.10657 
7.15527 3.60443 4.09766 5.11981 3.60443 4.10663 3.63135 4.09766 4.86877 3.57751 6.19574 3.57758 
5.11981 0 ]xsh
72 199.261 mo
(pointwisemeanplusandminustwotimesthestandarddeviationforeachinputvalue)
[5.37983 4.59983 2.56443 4.85978 3.32648 6.66208 2.55545 3.64035 6.8324 7.67527 4.09765 4.6088 
7.85457 5.1198 2.55547 5.11981 6.36612 4.60881 5.1198 7.85457 7.68423 2.55547 4.85977 5.11981 
6.37509 3.32648 6.39308 7.34355 3.5865 2.55545 7.68423 4.09766 6.36613 3.5865 5.1198 6.83243 
3.63135 3.58652 4.6088 5.11981 5.11981 4.59985 3.60443 7.85455 5.11981 4.09766 4.86877 2.55548 
4.6088 3.58652 2.55545 4.6088 7.85455 2.81543 4.60876 6.33917 4.09766 4.60883 3.83759 7.85455 
2.55548 5.11981 5.11981 5.11981 6.32123 4.34882 4.60876 2.55548 5.11981 0 ]xsh
72 208.576 mo
(\(correspondingtothe95%con\014denceregion\),forthepriorandposteriorrespectively.)
[3.5865 4.08869 4.6088 3.60443 3.60442 4.10662 3.63138 5.37086 4.6088 5.1198 5.11981 2.56442 
5.11981 7.26285 3.5865 7.26286 3.5865 5.1198 6.76068 4.59982 4.6088 10.3383 4.09766 4.6088 
5.11981 5.11981 5.1198 4.09766 5.1198 4.09767 6.76068 3.60442 4.09766 4.6088 2.55547 4.6088 
5.1198 3.58652 5.29916 2.8154 4.60883 6.25848 3.58649 5.11981 6.76068 5.11981 3.60443 2.55542 
4.60883 6.25848 4.60876 5.11981 7.78284 5.37085 4.60883 3.64032 3.57758 4.09766 3.60443 2.56439 
4.60883 6.25848 3.60443 4.10663 3.63135 5.37085 4.10663 4.08868 3.58655 2.56439 4.59985 4.10657 
2.55548 4.09772 0 ]xsh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 240.705 mo
(whichinformallycanbethoughtofasroughlythedistanceyouhavetomovein)
[7.193 5.5392 2.7696 4.14445 8.34866 2.7696 5.52924 3.04855 4.9813 3.90533 8.29877 4.98131 
2.76959 2.75964 8.0697 4.43335 4.98129 8.34866 5.8082 7.24281 3.86555 5.53922 4.98129 5.5392 
4.98131 5.25027 6.68498 4.98129 5.858 4.98131 6.74464 3.89537 4.98129 5.53922 4.98129 5.53918 
2.75964 8.0697 3.87555 5.53918 7.23285 5.53922 2.76962 3.92523 3.87549 4.98132 5.53918 4.4234 
7.24283 4.98129 4.98129 8.33868 5.53922 4.70236 4.98129 7.2428 3.87552 7.79074 8.2988 4.70233 
4.98129 7.24283 2.76959 0 ]xsh
72 252.66 mo
(inputspacebeforethefunctionvaluecanchangesigni\014cantly,seesection)
[2.7696 5.52924 5.5392 5.52924 6.81449 3.92524 5.53921 4.98129 4.4234 7.36237 5.81816 4.42339 
3.04855 4.98131 3.89536 7.36237 3.87552 5.5392 7.36237 3.03859 5.5392 5.52924 4.43336 3.87552 
2.76961 4.98131 8.4682 4.70235 4.98129 2.76961 5.52924 7.36235 4.43336 4.98129 8.46822 4.14445 
5.53918 4.98132 5.53918 4.98132 7.35239 3.93521 2.76959 4.98129 5.52927 2.76959 5.53918 4.4234 
4.98132 5.26025 3.87552 2.76959 4.4234 5.77829 3.92523 4.43338 7.36234 3.92526 4.43335 4.4234 
3.87552 2.76959 4.98129 0 ]xsh
1 0 0 rgb
true set_gvm
%ADOBeginSubsetFont: FZLBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFE+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A73DC579B9C1587087D4749982A674065F9D4190A646C
4B6AEC0EE9FA16CBD7A614FBA5C7797971DF7C6EA57394603F00B98324AF84E1
D747CBDA8BF6ACE99B270F3634D0598A7799230B2FA53F37697C8FB04996EB79
CA1E39DB1488D8A5A85F57D049C7AE31C6F8A6F15F2EE8FAE7CD4D80767B9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFE+CMR10 /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFE+CMR10*1 
[12{/.notdef}rp /fi 25{/.notdef}rp /ampersand /.notdef /parenleft /parenright 2{/.notdef}rp 
/comma /.notdef /period /.notdef /zero /one /two /three 
/four /five /six /.notdef /eight /.notdef /colon 7{/.notdef}rp 
/B /C /.notdef /E /F /G /.notdef /I 
/.notdef /K /L /M /N /.notdef /P /.notdef 
/R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}rp]
REKTFE+CMR10 nf
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
390.754 252.66 mo
(4.2.1)
[4.98129 2.76962 4.98129 2.76959 0 ]xsh
0 gry
true set_gvm
%ADOBeginSubsetFont: FZLBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFE+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/q <1C60D8A8C9B08A95D222871B45C8677AD60861C3F92152D679EC046FD508
04EE7440261F7F760EFE5BDA37735333B634AEF0E39D128EC81BD50CEED93A00
645B5D6515E247CEC7B0C61191F67893C528A900762C59FAEA845D61ACA5F7E7
B106031460E4734AA4EE85618EEC80B1ED1E754561578DABED479BE37358B263
04EF9BF65844BFE482C31643A7466E43F6E32A0E02E6EBB6652EB71BB9780CA6
2F7BC7305363> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFE+CMR10 /Encoding get
dup 113 /q put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFE+CMR10*1 
[12{/.notdef}rp /fi 25{/.notdef}rp /ampersand /.notdef /parenleft /parenright 2{/.notdef}rp 
/comma /.notdef /period /.notdef /zero /one /two /three 
/four /five /six /.notdef /eight /.notdef /colon 7{/.notdef}rp 
/B /C /.notdef /E /F /G /.notdef /I 
/.notdef /K /L /M /N /.notdef /P /.notdef 
/R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o /p /q /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}rp]
REKTFE+CMR10 nf
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
411.233 252.66 mo
(.)sh
72 264.616 mo
(Foreq.\()
[5.66872 4.9813 7.60145 4.43336 5.26025 6.45576 0 ]xsh
1 0 0 rgb
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
110.28 264.616 mo
(2.16)
[4.9813 2.7696 4.9813 0 ]xsh
0 gry
true set_gvm
%ADOBeginSubsetFont: FZLBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFE+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B08A959E2F69652E8B76AC2AC5B4F1FA8662A86AEED57
846929C2FBC07360B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFE+CMR10 /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFE+CMR10*1 
[12{/.notdef}rp /fi 25{/.notdef}rp /ampersand /.notdef /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen /period /.notdef /zero /one /two /three 
/four /five /six /.notdef /eight /.notdef /colon 7{/.notdef}rp 
/B /C /.notdef /E /F /G /.notdef /I 
/.notdef /K /L /M /N /.notdef /P /.notdef 
/R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
2{/.notdef}rp /l /m /n /o /p /q /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}rp]
REKTFE+CMR10 nf
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
127.992 264.616 mo
(\)thecharacteristiclength-scaleisaroundoneunit.Byreplacing)
[7.57165 3.87553 5.5392 8.11952 4.1544 5.52925 4.98129 3.90532 4.98131 4.43335 3.86557 4.43335 
3.90533 2.75964 3.93518 3.87553 2.75964 8.12949 2.76961 4.42339 5.5392 4.98131 3.87553 5.52924 
3.32742 3.92523 4.43338 4.98129 2.75964 8.12949 2.76959 7.62137 4.98129 3.90533 4.98129 5.53918 
5.52927 9.23532 4.98129 5.52927 8.12946 5.53922 5.52924 2.76962 3.87552 8.32874 7.05344 8.95639 
3.90533 4.42337 5.53922 2.75964 4.98132 4.43335 2.76959 5.52924 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: NXMBAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFF+CMSY10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B08A946182837629008DF7702985522C1BEB432204C2EF
9CAB07AB654895DD8804EF7ED97DE3E2616CBB2FB21BE3D9> |-
/bar <1C60D8A8C9B08A95708109816759180BE2C00E10A5903CE58B7DCAAF4A
44845FD3A70C28E4FAD0EA592930363E80B631EEC36264E9DB0D8F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFF+CMSY10 /Encoding get
dup 32 /minus put
dup 106 /bar put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFF+CMSY10*1 
[13{/.notdef}rp /circlecopyrt 18{/.notdef}rp /minus 73{/.notdef}rp /bar 149{/.notdef}rp]
REKTFF+CMSY10 nf
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 276.571 mo
(j)sh
true set_gvm
%ADOBeginSubsetFont: OQOAAA+CMBX10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFH+CMBX10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B08A95F1118A977C6242CC6F5E327BF4FA5D5A96003A353B9F
5194FC29E209B0E58D492B32361BA463B6BF5C8F5713114044F381A33FC053B0
4264D2166B00A0D46B0483E7D71E6B2BF037C36A33F31F6939D5141C37793F10
64A0F374AFDFD9C87199B35E9C7A6009C599A58421D97E6DEA9C4D9690F018C5
EE3E53343C76D3E513788DA12001E489EB7FF420036E340D26978DF0E5DDDF42
F55B791009CB89C0F4FDC246D837796B093D849043F6C168FB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFH+CMBX10 /Encoding get
dup 120 /x put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFH+CMBX10*1 
[45{/.notdef}rp /hyphen /period 2{/.notdef}rp /one /two 2{/.notdef}rp /five 
16{/.notdef}rp /F 15{/.notdef}rp /V 10{/.notdef}rp /a /.notdef /c 
/.notdef /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o /p 
2{/.notdef}rp /s /t /u /.notdef /w /x 135{/.notdef}rp]
REKTFH+CMBX10 nf
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
74.7674 276.571 mo
(x)sh
true set_gvm
%ADOBeginSubsetFont: SIUBAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /SIUBAA+CMMI7 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 112 /p put
dup 113 /q put
def
/UniqueID 5087382 def
/FontBBox {0 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 683 703 431 441 451 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/p <1C60D8A8C9B08A95FA42B93E17DC19B7F9FDB69E85E1A05CD543323F9E01
77BC092929F30840D222FF943A1823CBB4743D1D60DC4DD78ACD9A2B1D46C2F4
249D621AE571941BB10EDB5361BC1C06B6793143FC7BC4587E230CD83C072625
41D60CA3129F87938B17D9D152A2AC27D8AAEA2C78CB0D51B07FD8AC0CF22BC8
2D538F8B03DC74FE99BFBEE44105F29A07745C40B9FFB0B0CA0CD81195AF4CDC
27AC7070934ED446362A6CD5C3624A76C13AC21481959459D731B8E979C11047
011F9E893CE91A008EF27861772D5B07D7722F1749CBB1810F18391F> |-
/q <1C60D8A8C9B08A950852D00D29EFCD26EB4454BA69C69499195E48157E36
8CB346C18FD570C92E013982B20A7AC10C0B40B7788F2D2BA56989E46A4C2DBB
5949D3D51F151436968FF6D58A586F4B42D582EC6A52D8F33FD63F2D12DFD256
ED18E95C353FB864489F18C88B993B700A4BE2572B3BBA0697C2A18292C08B3E
8D052AE3A85F765CAC045C197AFDC77DB4D980BF2FAA4C874F12B598CA6264B8
93DD522C996F36FDD435C9D095886935248C11EC5997A266C6B6961431B957C2
A083D00A> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFO+CMMI7 /SIUBAA+CMMI7 findfont ct_VMDictPut
/REKTFO+CMMI7*1 
[112{/.notdef}rp /p /q 142{/.notdef}rp]
REKTFO+CMMI7 nf
REKTFO+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
80.8141 278.065 mo
(p)sh
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
86.0158 276.571 mo
( )sh
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
94.3612 276.571 mo
(x)sh
REKTFO+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
100.408 278.065 mo
(q)sh
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
104.808 276.571 mo
(j)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
110.087 276.571 mo
(by)
[5.26025 0 ]xsh
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
123.116 276.571 mo
(j)sh
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
125.883 276.571 mo
(x)sh
REKTFO+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
131.93 278.065 mo
(p)sh
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
137.132 276.571 mo
( )sh
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
145.477 276.571 mo
(x)sh
REKTFO+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
151.524 278.065 mo
(q)sh
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
155.924 276.571 mo
(j)sh
true set_gvm
%ADOBeginSubsetFont: RWSBAA+CMMI10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /RWSBAA+CMMI10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 61 /slash put
dup 96 /lscript put
def
/UniqueID 5087385 def
/FontBBox {-32 -250 1048 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 442 453 466] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/slash <1C60D8A8C9B7A73DB56225352A24C6E389DE2B55CA07FB5710C6DCAE
04F94BC5CAA5785E17ED28271B55834262FD3846E502CB37AB886C6947131546
D475C5E688F02E31C309> |-
/lscript <1C60D8A8C9B08A95BE2B761DD6BD19F5B09B9ADA2121DDBE30642D
D2D5785E265DA615FCDC91D41B472726DE7DB85437EE8B6E0465E7EA2DF21A6C
B27677CD047D8E9D9E1C74B674B76F9C06C2236259BA8F6BDB42E5A77D064983
7EE740D63E1090CF7EE560AE6ADC3C1C37A9F1720C8C6656144AF894EBA91590
41DDE6F6F39E9B07DB8ECB1D0D83F8C341B815BBFAC83AF115BFDE0434138D34
533EC4099E89EA0756E101910B3FB1701D983EC14069031DFD5689CA51AA15> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFP+CMMI10 /RWSBAA+CMMI10 findfont ct_VMDictPut
/REKTFP+CMMI10*1 
[61{/.notdef}rp /slash 34{/.notdef}rp /lscript 159{/.notdef}rp]
REKTFP+CMMI10 nf
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
158.691 276.571 mo
(=`)
[4.98129 0 ]xsh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
170.336 276.571 mo
(ineq.\()
[2.76961 8.04977 4.4234 5.26024 5.28018 0 ]xsh
1 0 0 rgb
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
199.99 276.571 mo
(2.16)
[4.98129 2.76961 4.98131 0 ]xsh
0 gry
true set_gvm
%ADOBeginSubsetFont: FZLBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFE+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B6E3FA234780E51B74F22595A687FBF09EF454D03FB6CE0741
835DFEA276F2BD9DA1E567C1E2AA272C9AF9AA6DE082183B6B06B110AD19A95E
B7E4DF541495BB98EE61CCB080A42D64DF1FC55075E90898D74F5BD66A3B7E79
6EB7D1A2531A03B3A15C447C7878675F786C2958D8D170FECAAEB79653062A89
C24C3F187B500D1CE71547CC2DD4654566FBE73FC2C8B09F> |-
/x <1C60D8A8C9B08A95D222871B45C8170346D4B3692E8D5307651DE3271DD6
AF0FFCDE284DD9CDD3B987BD9A4951E635C7A5CDCF53A699D8D2BA39BF571FED
C61B4760FA01C102B3CF6C44B24A57107DFFEFB711E00B7E6B8A7F332F9AC2C5
3243312E3CD55C94054BCA0B5D37362E138F5DD97019783B5271FD96258D5354
389532FB5D3FC50CB007DF880768FCF0AAEC6D6F5D8AB1559D6270DF0761EAD0
57A9F39E9A718AA16D8D8ECA90D61565C41A9B86CA057EC652FEE1927FFE969C
A046D06A10E75C83320EEEAB290370B870EF0E26D64C8EE9F9FD2B5549> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFE+CMR10 /Encoding get
dup 65 /A put
dup 120 /x put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFE+CMR10*1 
[12{/.notdef}rp /fi 25{/.notdef}rp /ampersand /.notdef /parenleft /parenright 2{/.notdef}rp 
/comma /hyphen /period /.notdef /zero /one /two /three 
/four /five /six /.notdef /eight /.notdef /colon 6{/.notdef}rp 
/A /B /C /.notdef /E /F /G /.notdef 
/I /.notdef /K /L /M /N /.notdef /P 
/.notdef /R /S /T 2{/.notdef}rp /W /X 8{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i 2{/.notdef}rp /l /m /n /o /p /q 
/r /s /t /u /v /w /x /y 
134{/.notdef}rp]
REKTFE+CMR10 nf
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
217.701 276.571 mo
(\)forsomepositiveconstant)
[6.38611 3.04854 4.98131 6.40593 3.93521 4.98129 8.29877 6.94394 5.8082 4.98129 3.93521 2.75961 
3.87555 2.76959 4.98129 6.94394 4.4234 4.98129 5.53922 3.92523 3.87552 4.98129 5.26025 0 
]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
338.108 276.571 mo
(`)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
344.772 276.571 mo
(wecouldchange)
[6.91403 6.94394 4.43338 4.98129 5.52924 2.76959 8.04977 4.14447 5.53918 4.98132 5.52924 4.98129 
0 ]xsh
72 288.526 mo
(thecharacteristiclength-scaleoftheprocess.Also,theoverallvarianceofthe)
[3.87553 5.52924 8.02985 4.15441 5.52924 4.98131 3.90532 4.98129 4.4234 3.87553 4.43336 3.89536 
2.76961 3.9352 3.87552 2.75964 8.02986 2.76961 4.4234 5.53918 4.98131 3.87553 5.52924 3.32742 
3.92525 4.43336 4.98129 2.75964 8.02985 4.98129 6.64507 3.87552 5.52924 8.02986 5.5392 3.89537 
5.26025 4.4234 4.43335 3.92523 3.93521 8.02985 7.47192 2.76962 3.92523 4.98129 6.43585 3.87552 
5.52927 8.02985 4.70233 4.98132 4.43335 3.89536 4.98129 2.76959 6.36612 4.70233 4.98132 3.9053 
2.76962 4.98129 5.53918 4.4234 8.02985 4.98132 6.63507 3.87555 5.53918 0 ]xsh
REKTFM+CMR9*1 [8.9664 0 0 -8.9664 0 0 ]msf
479.503 288.526 mo
(magnitude)
[7.67526 4.6088 4.6088 5.11981 2.56442 3.57755 5.11981 5.11981 0 ]xsh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 300.481 mo
(randomfunctioncanbecontrolledbyapositivepre-factorbeforetheexpin)
[3.90532 4.9813 5.52924 5.5392 4.9813 12.4333 3.03859 5.53921 5.52924 4.43336 3.87553 2.76961 
4.98129 9.66373 4.42339 4.98131 9.6637 5.81816 8.55788 4.4234 4.98129 5.26025 3.87553 3.90532 
4.98129 2.75964 2.76959 4.43336 9.66373 5.26025 9.38477 9.11577 5.8082 4.98129 3.92523 2.76959 
3.87555 2.76959 4.98132 8.55786 5.52924 3.90533 4.43335 3.31747 3.0386 4.98129 4.43335 3.87552 
4.98132 8.02982 5.8082 4.43335 3.0386 4.98129 3.90533 8.55786 3.87552 5.53922 8.55789 4.4234 
5.26025 9.66373 2.76959 0 ]xsh
72 312.436 mo
(eq.\()
[4.42339 5.26025 6.33621 0 ]xsh
1 0 0 rgb
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.892 312.436 mo
(2.16)
[4.9813 2.7696 4.9813 0 ]xsh
0 gry
true set_gvm
%ADOBeginSubsetFont: FZLBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFE+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/ff <1C60D8A8C9B08A95FF8CEA8AF5E07F63E9F1B5E8F4CA1683A21DE95D58D
6C3E29BB233906DDCCD8BFB1899CEB485D08A458F58F7C89DA0E8F7FA2A99EF5
BBF85169B3739B6CE7D7BCC177E28ADCAFF9E7612E422A5FACC2A3820045F970
113E2ECECDB4DEDC4C2BFD1202B58918251821CFAFBB17063F0526B848F9C2D3
235FDD0BCE8FB0612E98650091EE577E3405A8C64E028FC04E263E89BA1DF280
B546CF896C4032381BBC5877FBCF8A65393530D72111F3424F86F277D183FBC7
9A030BB79C66013D11CC2B017E467BB2B8034E9D3B6F68F43CDD67C1CACE7684
B735F961CF345B55743> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFE+CMR10 /Encoding get
dup 11 /ff put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFE+CMR10*1 
[11{/.notdef}rp /ff /fi 25{/.notdef}rp /ampersand /.notdef /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /.notdef /eight /.notdef /colon 
6{/.notdef}rp /A /B /C /.notdef /E /F /G 
/.notdef /I /.notdef /K /L /M /N /.notdef 
/P /.notdef /R /S /T 2{/.notdef}rp /W /X 
8{/.notdef}rp /a /b /c /d /e /f /g 
/h /i 2{/.notdef}rp /l /m /n /o /p 
/q /r /s /t /u /v /w /x 
/y 134{/.notdef}rp]
REKTFE+CMR10 nf
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
109.603 312.436 mo
(\).Wewilldiscussmoreabouthowsuchfactorsa\013ectthepredictions)
[3.87553 7.92027 9.41465 7.99002 7.19299 2.76959 2.76961 6.32625 5.5392 2.76961 3.92523 4.43335 
5.52925 3.9352 7.49185 8.29877 4.98129 3.90533 7.98999 4.98131 5.8082 4.98131 5.53918 7.44214 
5.52924 4.70236 10.7596 3.93518 5.52927 4.15439 9.09586 3.04855 4.98129 4.4234 3.87555 4.98129 
3.9053 7.49185 4.98129 5.81808 4.4234 4.4234 7.44214 3.87552 5.53922 7.98999 5.52924 3.90533 
4.4234 5.53918 2.76962 4.42337 3.87555 2.76959 4.98129 5.52927 0 ]xsh
72 324.391 mo
(insection)
[2.7696 8.69735 3.92523 4.43336 4.42339 3.87553 2.76961 4.98129 0 ]xsh
1 0 0 rgb
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
116.575 324.391 mo
(2.3)
[4.9813 2.7696 0 ]xsh
0 gry
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
129.305 324.391 mo
(,andsaymoreabouthowtosetsuchscaleparametersinchapter)
[5.96759 4.98131 5.52924 8.69736 3.9352 4.70235 8.4184 8.30873 4.98129 3.89537 7.60147 4.98129 
5.8082 4.98129 5.53922 7.03366 5.53922 4.70235 10.3611 3.87552 8.13947 3.93521 4.4234 7.04361 
3.92523 5.53922 4.14444 8.70731 3.92523 4.43335 4.98132 2.75964 7.59149 5.53922 4.98129 3.90533 
4.98129 8.29877 4.4234 3.87552 4.43335 3.89539 7.1033 2.75964 8.70731 4.14447 5.53918 4.98132 
5.52924 3.87549 4.43341 0 ]xsh
1 0 0 rgb
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 336.347 mo
(5)sh
0 gry
true set_gvm
%ADOBeginSubsetFont: FZLBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFE+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/equal <1C60D8A8C9B08A946182837629008D945C50B3BD77B79680F3B07BDA
6301D2521ADF665EADEA779B8650AC6CDB556621631497A3BE00C67036F6EB06
05A36A2C0EE306396247E4A79F8EFAE500D78B59605F041F11> |-
/j <1C60D8A8C9B08A956BA65798425C99F9E21B31AD9D7D46055B6927E0A28A
ECC1418A3336BA4234C7F9442C0DE9BA878C87095F81AC64120B3762338C77D9
8CC6DD27B94A58E67CAB08F514CD98B3B4F9938B9CFB8CA4520BA8B627FC78F8
E0F443F14C065FC4B15A336B544A6B5CE40AFCB7DD46B36B2CD516D6760D561A
7A688A5581533C67A4E63DCC684A62C23527F4> |-
/k <1C60D8A8C9B08A95D222871B45C8170346D4B18ED19B2E2E03D20F864B5D
C5BD82CE186E8865448F19B50359E04C51718F8BDF55D412398F4EF83C05419A
DE886E1536E26F7FC0E53312F110D79646DAD9F1D10B32AFE3698557277E72D5
7B4C7DAD8FF58DCEB52B83B453E4BE2D48D6882B0AECFDF4A8BCF747376E22D9
81F8E1C7CD6E92891501D7EE1AA17A160448D2B40E0899A7693FEF353371FE21
8D3D2DA9622BE1E9110437FDF2C62C6B642301FAF5AD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFE+CMR10 /Encoding get
dup 61 /equal put
dup 106 /j put
dup 107 /k put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFE+CMR10*1 
[11{/.notdef}rp /ff /fi 25{/.notdef}rp /ampersand /.notdef /parenleft /parenright 
2{/.notdef}rp /comma /hyphen /period /.notdef /zero /one /two 
/three /four /five /six /.notdef /eight /.notdef /colon 
2{/.notdef}rp /equal 3{/.notdef}rp /A /B /C /.notdef /E 
/F /G /.notdef /I /.notdef /K /L /M 
/N /.notdef /P /.notdef /R /S /T 2{/.notdef}rp 
/W /X 8{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /j /k /l /m 
/n /o /p /q /r /s /t /u 
/v /w /x /y 134{/.notdef}rp]
REKTFE+CMR10 nf
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
76.9813 336.347 mo
(.)sh
true set_gvm
%ADOBeginSubsetFont: OQOAAA+CMBX10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFH+CMBX10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7FCB6A4F5AE229546C202C5032D8F8EB44882D629B5F50
C400D4D7370FFBFDEE1A7A80D601B7D96A84E71663306395E49353C98889DE37
8DE26DF76984DC1BCB2DE501879767AC3F7E6A6BF4D63C61476EA4E158042F97
224D611A916B12EC87A0E1E7D1A31A3A91928658851BD6EEA872263A3> |-
/N <1C60D8A8C9B58A94F64BDBA971EDC2CE9AE4F7B5DAC5CD7CB3ACF92608B6
6DB8E10263E5EAF7B860062DC37109542490DCC0941CB3543756082F0E286990
C9B1DDA50D171568888A11DCD8B7F6054C4FA0282BFD0D7DB208C66304979BEC
3660DFC3F1E428388FABE045F73E946516267DD35756EA7A9BD4AF2D111DCB23
322D829BF4948E4AD412D56BC147AE48751ABA3D1CF07ECB44D7FC78C4C2B658
D9DF7171FC27DCAA6B5BC7998EB3C1F4> |-
/O <1C60D8A8C9B08A941F6C30AD78BECAC8C215CC4671CFDC7F3097D0B3BCF1
A24C957FF65378357361983EA049F8E13E0254A46CC0640233B6BDB323B19DCE
CDE398A9160423F89383A336AE35550357D985DE74B907F39FA79B9355224025
11C0BD05F86CC335CF3BAD2FAECB24730812666D2E4A17A50CE0575EAD4A3EFE
C0AA9F8158D484BDDC> |-
/P <1C60D8A8C9B08A947DF74810F860E3DC2BD706C8A0214B26436343B3E2C5
0F303171B69E9F5F9C51FC39BC323A2C4A74FEA94FE551484CB5595557E01921
BF618E6AF02ACE31CFB19933406D4CB0C47E16CD5B5E833209091307D818C732
014D40AA035543C9538632C677EE97D8C969460BBCA108D31CC8D096B82B763E
8714F92E49D700D3651040DA24C379EC578922> |-
/b <1C60D8A8C9B08A95E5CBCB515510A1DB76616577E50F74DCA1C14AF3A45F
56B68079033BFC9B24020FE86214EF8A40986EC5154CFDCD4D181A0D1ED87967
45A392E675F13F9C8DC08FA8251DD2AF00B671D0BA25AE9CDE4146F2CE96C536
76558988C69DC1F96D79B7BF982D907B5E7548B766742DEBD2B99C47348594D2
4622CA48B69EA35763427D60A851ED1D332E959E7461738FC58E41032D5076C3
34B1> |-
/d <1C60D8A8C9B08A95E5CBCB515510A1C1813129980C781B5428CBB25C67CC
DC52940BF0C1305B56D2C3CC86238808B00266AD865987A6B9F196EA289C0F98
71A33FAF2286BCCD306D6507B044BDF9DCC4F3B80894682A801755F731B17E9D
829B5D562B454A9C59E272627254120FF07AB977C1DBFC7D9D44F8BC0A5CE323
AC7930F87A2F0C0F72810860D4088FEC5D521358FCF960D28B0AA5A72A45BE21
BAC494B3> |-
/f <1C60D8A8C9B08A95959A8F784B7EF0775E015DD20DEA1213AD0E07AF4C09
CE165F97A542F1C367F48C595DB40CF6E6B8300CB6973944FBD00C22C6A6AFBC
2660BFEACB22B3AF03ED0692DF9FA5566CD16B39BD8283A23F00757229211EA9
9ADBE2518838D861F0B3AC3E7D17FC038D2338472BAAB288CFCEDA2EF5F3AD8D
426A59A3653318C7F4892613A7E918D5CF67C1737A5A> |-
/h <1C60D8A8C9B08A95E5CBCB515510A1C1813129980C781B54288D40018C5B
93853F82E0244B3A80F2AFF47EBF96B35DA26DEC133310C6696AE9311BDCB375
BE0DE07C5DB0707F8F0FC67E647A0932D6F1A6B132F19C039D0B352755D3933E
5FF86EFDFB050094707E014D5945768F10389741F2891022CA4301DFE2F69D64
F95B9AEA9F917E9D944357C00D6954781ADBA230BC7F882BF2F37EED59329208> |-
/r <1C60D8A8C9B08A95A5BEE1199161ADD44E11DF3EE5256B86CB844423336D
E46331FBB74D12BB9F1AEFB0A2D71E0DF1B1DC77B76B07C229AACC6761DB2E5D
20458478ACD0A771C83355B8FC81A73D829FB4F43E6F698652C8F5D32976536B
BF9A5F05ED7F73E5DF2B81BA043D0A8270F63D03627E6ED4C69187B17F057818
B58504577A> |-
/v <1C60D8A8C9B08A95F1118A977C624E83CF27678167D409FB9CBB2CD28A75
267A2384DA90A49D89E5BF350EA89EC55761E77C6CD88C98506090A75A746C46
9B633782EECEAAE16AE01DE681F0545DEBDB656FEF6AD9AE11549D54ABB8EC44
74BF435CA33B8546B420116DBB322401E242FDDDF7BD39456596> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFH+CMBX10 /Encoding get
dup 48 /zero put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 98 /b put
dup 100 /d put
dup 102 /f put
dup 104 /h put
dup 114 /r put
dup 118 /v put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFH+CMBX10*1 
[45{/.notdef}rp /hyphen /period /.notdef /zero /one /two 2{/.notdef}rp 
/five 16{/.notdef}rp /F 7{/.notdef}rp /N /O /P 5{/.notdef}rp 
/V 10{/.notdef}rp /a /b /c /d /e /f 
/.notdef /h /i 4{/.notdef}rp /n /o /p /.notdef 
/r /s /t /u /v /w /x 135{/.notdef}rp]
REKTFH+CMBX10 nf
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 366.494 mo
(PredictionwithNoise-freeObservations)
[7.83056 4.72226 5.25022 6.36618 3.17807 5.0909 4.45335 3.18803 5.72845 10.1819 8.27885 3.17807 
4.45335 10.1918 8.96628 5.72845 3.17807 4.52298 5.25021 3.81563 3.49684 4.72227 5.25023 9.07584 
8.59772 6.36617 4.52298 5.25021 4.72226 5.40965 5.56915 4.45334 3.17807 5.72845 6.36618 0 
]xsh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 389.136 mo
(Weareusuallynotprimarilyinterestedindrawingrandomfunctionsfromthe)
[9.40469 7.82064 4.9813 3.89536 7.81068 5.53921 3.92524 5.5392 4.9813 2.7696 2.76961 8.63757 
5.5392 4.98131 7.25284 5.5392 3.89536 2.76961 8.29877 4.98129 3.90533 2.76959 2.76961 8.63757 
2.76959 5.26025 3.87553 4.42339 3.90533 4.42339 3.93521 3.86555 4.43335 8.91653 2.76961 8.91653 
5.53922 3.89532 4.71234 7.19299 2.76959 5.52924 8.36859 3.90533 4.98129 5.52927 5.53918 4.98129 
11.6861 3.0386 5.53918 5.52927 4.43335 3.87552 2.76959 4.98129 5.52927 7.3125 3.04855 3.89539 
4.98129 11.6861 3.87552 5.53922 0 ]xsh
72 401.091 mo
(prior,butwanttoincorporatetheknowledgethatthetrainingdataprovides)
[5.5392 3.89536 2.7696 4.9813 3.90533 6.82438 5.52924 5.5392 7.79083 6.91405 4.98129 5.26025 
7.78087 3.87552 8.89661 2.76959 5.52924 4.43338 4.98129 3.89536 5.81815 4.98131 3.89536 4.98131 
3.87552 8.3387 3.87552 5.5392 8.3387 5.26025 5.52925 4.70235 7.20296 2.75964 4.43335 5.52927 
4.98126 8.33871 3.87552 5.53922 4.98129 7.78088 3.87549 5.53925 8.33868 3.87552 3.9053 4.98132 
2.75964 5.53918 2.76962 5.52924 8.89661 5.52924 4.98129 3.87555 8.89658 5.52927 3.9053 4.70236 
5.26025 2.76959 5.52924 4.43335 0 ]xsh
72 413.046 mo
(aboutthefunction.Initially,wewillconsiderthesimplespecialcasewherethe)
[4.9813 5.80819 4.9813 5.53921 6.94401 3.87553 5.52924 7.50185 3.03859 5.5392 5.52924 4.43336 
3.87553 2.75964 4.98129 5.53922 7.11328 3.59644 5.52924 2.76959 3.87552 2.76961 4.98131 2.76959 
2.75964 4.43335 5.88789 6.91405 7.49187 7.20297 2.75963 2.76961 5.83809 4.42339 4.98131 5.5392 
3.92523 2.76961 5.53918 4.4234 6.97382 3.87555 5.52924 7.50183 3.92523 2.76959 8.29877 5.53925 
2.75964 7.50183 3.92523 5.81815 4.4234 4.4234 2.76959 4.98129 5.8381 4.4234 4.98129 3.93518 
7.49188 7.19302 5.53918 4.4234 3.90533 7.49185 3.87552 5.53922 0 ]xsh
72 425.001 mo
(observationsarenoisefree,thatisweknow)
[4.9813 5.5392 3.92524 4.4234 3.90532 4.70235 4.98129 3.87553 2.7696 4.9813 5.5392 7.85051 
4.98129 3.90533 8.35861 5.5392 4.98131 2.75963 3.9352 8.35864 3.03857 3.90533 4.42339 4.43336 
6.8443 3.87553 5.5392 4.98131 7.8008 2.76959 7.86046 6.91405 8.35863 5.26025 5.52925 4.70236 
0 ]xsh
true set_gvm
%ADOBeginSubsetFont: NXMBAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFF+CMSY10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/multiply <1C60D8A8C9B08A94618283762900EE64BD6D804E5137A8EB9344B
59E1777DCDE100BEA84A8EBDC2709935C169F4A7A9CD3403BF650925EE8E6286
920546753D7746E1472BAF774A387F5D33BE79C4CA36EDCA5E934D739DECCEEA
F1A4CF24E9252BA491A91F06F55F85FE8C1A2A6BF2CE9B435F5669E4413462F4
7FE7F1E0F0F3BDF0C4B136454999D8E0A8F4448CAAA> |-
/similar <1C60D8A8C9B08A946182837629008D942C9C6EF320F37C8A8C5429
9E8DD1B0875301FA43552CA514F2078FAFDD62F3467F8B7507E16E052EEFD284
3A498009CBFD91C47BB208EAF33DD879FFEECB0E6C1502AC163D4C66B261CBC1
94BE4B022B67D7AD95434D7C337B7F7A44> |-
/N <1C60D8A8C9B08A940EE37CA4DE5D3505A00EF717B674374FF3506B24F339
B37EB7F553EAEBFFFDA86F6C244D84F2A08D6D0BABED1C233E378AA0A6D6DACD
D7F184453092093980FE329BFAD0EF6CC6055EE15F49AFFA3517FDCD51283F80
94C102630E3D3F417CAF011419118D2CC15851B68A4F9A5E33157BAD70A350BA
E53C334D830B55CD5E7FDFEC034A37630439A53D9E43BC1698C993470949E65B
19ED402A41C3AB260FFDE8F7545B362FFECFBAB978647C32103AF2E0D5F65B56
3BED6E7E9830F2CF2E5955BF32FEB2D5BFF8D271853BF881> |-
/braceleft <1C60D8A8C9B7A73DB562253524F5E14A30E2D0BF696ED1EC1832
95A6D99B3BA8FB24DB64474803A26F8962BAE1A2CA5312A983CA8F54B6A2CCE1
BDDA3BE7A71DC65187F905467F2B3DD6E2C46A0678FF636FF8C95A24B30A38BB
558B9114956B55462DFF6E91F237BBD08C7678143FE55B3326F60760923AC3FB
F2607F3A9D9831610688B18ABB03677BA0E9C91ED23BA198C76AB28BE6B2198F
782BEFB9FDC108557F68DBA2CFBE> |-
/braceright <1C60D8A8C9B7A73DB562253524F77EAA0C9D86D36E2A3E5029B
19678C1ADFB7D768C22FC42830CD4BFE33F922A0B35D4B8100996306D034A2AF
376DF52CDC59CEF40F1ADEE3D98D4B2E93796959422FDF4D3C93728708B2A090
9A3A4C863D92FDB9C8A8464E686F14A89B4451B451585AA4EDD696CE8BA342FC
161136031CEC1B831969CCB78C8B2D64DB2426CAEBE5228216AB6FB7F309CADE
26F419F1E2D30640CA1596947438C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFF+CMSY10 /Encoding get
dup 2 /multiply put
dup 24 /similar put
dup 78 /N put
dup 102 /braceleft put
dup 103 /braceright put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFF+CMSY10*1 
[2{/.notdef}rp /multiply 10{/.notdef}rp /circlecopyrt 10{/.notdef}rp /similar 7{/.notdef}rp /minus 
45{/.notdef}rp /N 23{/.notdef}rp /braceleft /braceright 2{/.notdef}rp /bar 149{/.notdef}rp]
REKTFF+CMSY10 nf
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
269.658 425.001 mo
(f)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
274.64 425.001 mo
(\()sh
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
278.514 425.001 mo
(x)sh
true set_gvm
%ADOBeginSubsetFont: SIUBAA+CMMI7 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFO+CMMI7 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B08A95815A5B227B870FFFF4C4C0B4F8778048834443BFCAD6
B993EDD195DC06703CEA0DE031068A057848E5B5DED1133A0A8079C5E208E9DE
E4B78459A9167CC6EE455BFB1096DC5790B66EB4889F8492E36379969C9A84E3
508BBE89B995851364166046AE348187165B183267917A2B944E4D5A171FE0A1
71814BE20051DD45E2BA864A9940A362E73075986328AA3660DC7C3B40F26477
32F933A170C61C13A84CF06AE8B2A1FC77DDE376> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFO+CMMI7 /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFO+CMMI7*1 
[105{/.notdef}rp /i 6{/.notdef}rp /p /q 142{/.notdef}rp]
REKTFO+CMMI7 nf
REKTFO+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
284.561 426.496 mo
(i)sh
true set_gvm
%ADOBeginSubsetFont: RWSBAA+CMMI10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
REKTFP+CMMI10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B08A9570810981675968F2C907C696DFE9BE69433F613
9DF6C45B8165ACC43B6E0B309859F778ABCF0> |-
/comma <1C60D8A8C9B08A9570810981675918D0BCF1CD202F5F15202B7A6E1C
EF0947ED02AAA4C366CA78E08C39B6DD0700901548AC0500952501F57D43D699
1493A7332E9D6FB3B92D3B17F7AFEDFB43B1F0997B51EC481BBA2E83EB27> |-
/K <1C60D8A8C9B08A953DCEAFCDCABC0684184333427866BCB5C5E1455DCD0C
5DAEE76D5A803A990F4755D42D2419F1DEAD1C7D78BECB91A55C3D3D7C618C6D
0B637BE0CD6733073A9735839056E27DCD9FF421B1702900547E16852D296552
E6C207112B296B9ED57662EA3D9E9C39070CC9C2E4C29D72984532B37F181F5C
D72F7501B2B06D4EED1935A1E1C157194B1C215FF345B18CA9F0200910050A15
B8270ABE8E019726597FC6E8AB88DB313806EE5A03706A74F3492F827A4361F8
72E5546B90DBF1102352CAA3C435C458D2313DB7BC4EE75B8F1070A4E3E9009C
6734DD74D9BBB4AE23B0E02D82CA59A99C84A6676DFB29C001CD8C3A9A5E1F38
C48609850920665936AEDACF1EC2F1A57D9DE91372DE1C795A53874971174C3C
000F1610DADC73452D022B32BA0FD45B1347E5C76D6DC0358772E3C927> |-
/X <1C60D8A8C9B08A940D0B235317E910C4E520AE0EAD089E5EA45AAEFD9916
BA68992473BF411A91FC94EC432AF8D53B096E15DB5FD4F7F74AB4F7801898DB
632DDE88D09966E39E3CEF5917637245B1E09C5857D10C6EC2C3B72C44156B22
7947D2C2BAD174D396BBE53553C66510F41FAC76CD58165CC75DD8722E65FD42
8D2AFDDF6DF6BC5C2C63E8AB41323AC9A76D2739893F6401AE8CE50C05E8C70E
77CF6487AF1DA2C7000289E3D653D3787AC4978703AB3C6FBD1F3D909D4EF8A1
2855297A5F9083614E9C43A89F548F0712B48E556E9FEF189D9C6A70021E4EBF
53EAF77F4039506D9FCE722142D585A7463C9EB85BE70DA040E7BB7882A3ABF3
6EAD6E18463FDF95C255C8498855B33CA34FA7CF2D5FD50AF7BCAFE713C873E6
A7CD92AB6C145BA49B6F7763645819BAD2FEC5D156C1F779> |-
/f <1C60D8A8C9B08A95A31CD7D9F217DCBA6071B8E0D5846125EF4CB4EF23CC
4DD09E878CE196EC9B9F1F54A677ADB5C5E9ACDFCDD60FBB7D164F70307F6FF3
E6CF0DB7E2074C1F7921AAD73B6B148990BE29E190748D2E55F76C8DD519464C
4DCA4CE0036FE5445919C3CF6FF6DCAE21D932617F2FE28250D9FD929A5C31EC
01CDB055499E20A4E6ACC9CEE6E4FD03E9282ED811C39CA628CE996E2370CF0C
ADC74D2C4D895E1A9293BFD21891AEF1BAE4A5D07F6F5FCCAD81E4752A24937F
1ABC3CF8652B> |-
/i <1C60D8A8C9B08A959A731E0C497E4A92ECA7E1F9E8F27B95417557B68F87
3C7421EB2FEEE517FC7439284378BBF3ADDCB73BA44A09F971EA54D0742BA8E6
E7D163B9F048777BA2BAC0DF08FFCA0A02E69EB8CCA5A05D76188823DFDB0F10
2FD5B2004BF0359C21E04A38EA6E3BF721237E98B66F7D3C7171EB484B24CF2E
F1E8FAFEF505A11765C6DCFE3B2F13B0C3B87D0934CEFFB60BB3C84DA0FACC1B
8F5C53F864542A29453ECC16B47856C772CF90> |-
/n <1C60D8A8C9B08A95F6672DA0769C65052F6FD555EA9904981F5C5011D740
0A5082B35BECB587DFD6DA7F0BCE52C1D53643C9E5AE1EE7B3F76FF1421B27ED
DE10BCF56E3F98B875933C40A0EC29291E4FA9CC100C10654480D1C5949D7B3B
834EB7CA145C0AD116D2C53ADB026026333E417BD5F646F1A1550FAA50540606
93ABC51D8FFA7F7CF5FBD69164919B519F5CB3072B10F398518E5CC1B3B04E05
3B4794BC00534E2F40A979D7BE44E289EF0DC9F2A34D86ADD625206A1D58B4DA
8C2F407798FFD1DBD3E91F50E0A8469210388B32F7CE9E57D8CB65A5304A2570> |-
systemdict /gcheck known {setglobal} if end {end} if
end
REKTFP+CMMI10 /Encoding get
dup 58 /period put
dup 59 /comma put
dup 75 /K put
dup 88 /X put
dup 102 /f put
dup 105 /i put
dup 110 /n put
pop
%ADOEndSubsetFont
reset_gvm
/REKTFP+CMMI10*1 
[58{/.notdef}rp /period /comma /.notdef /slash 13{/.notdef}rp /K 12{/.notdef}rp 
/X 7{/.notdef}rp /lscript 5{/.notdef}rp /f 2{/.notdef}rp /i 4{/.notdef}rp 
/n 145{/.notdef}rp]
REKTFP+CMMI10 nf
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
287.878 425.001 mo
(;f)
[4.4234 0 ]xsh
REKTFO+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
297.183 426.496 mo
(i)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
300.5 425.001 mo
(\))sh
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
304.374 425.001 mo
(j)sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
307.142 425.001 mo
(i)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
314.355 425.001 mo
(=1)
[11.5267 0 ]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
330.867 425.001 mo
(;:::;n)
[4.4234 4.43335 4.4234 4.43335 4.4234 0 ]xsh
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
358.986 425.001 mo
(g)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
363.967 425.001 mo
(.Thejoint)
[9.01614 7.20297 5.52924 8.35861 3.04855 4.98132 2.75964 5.26022 0 ]xsh
REKTFM+CMR9*1 [8.9664 0 0 -8.9664 0 0 ]msf
481.001 425.001 mo
(jointprior)
[2.8154 4.6088 2.55548 4.86874 6.65302 5.11981 3.6044 2.56445 4.59979 0 ]xsh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
71.9999 436.956 mo
(distributionofthetrainingoutputs,)
[5.5392 2.75964 3.9352 3.87553 3.89536 2.7696 5.53921 5.52924 3.87553 2.76959 4.98131 8.58775 
4.98129 6.10709 3.86555 5.5392 7.48192 3.87553 3.9053 4.98131 2.76961 5.52924 2.76959 5.52924 
8.03983 4.98129 5.53922 3.87552 5.52924 5.5392 3.87553 3.92523 0 ]xsh
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
230.574 436.956 mo
(f)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
235.161 436.956 mo
(,andthetestoutputs)
[5.87793 4.98131 5.52924 8.59772 3.87552 5.52924 7.48193 3.87552 4.43338 3.92523 6.93402 4.98132 
5.52924 3.87552 5.53922 5.52924 3.87552 0 ]xsh
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
332.52 436.956 mo
(f)sh
true set_gvm
%ADOBeginSubsetFont: TDABAA+CMSY7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /TDABAA+CMSY7 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
def
/UniqueID 5000817 def
/FontBBox {-15 -951 1252 782} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-23 0 683 708] def
/OtherBlues [-127 -117] def
/BlueScale 0.039625 def
/StdHW [49] def
/StdVW [93] def
/StemSnapH [49 61] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/asteriskmath <1C60D8A8C9B08A95F808B3EA631C04E342663C0292D4C4AB7
A9D0193A96731F07E601252D4094F690FA8F0BF48B782EE18DE2F956611AB976
8917567B17B9E0DB71E16304C190A8515B02EEA164C7BCBB5D05749DBFE0C855
043E4E8172110DB05B72946065793291225379CB0478D56E0AEF376FE6B0B45A
EEDF7F59B461CDACB9B892493D43BE32049486E91827318E29E5CA03162B9803
446ED5CD8C412E58F70938B7301A921D86257F2FA5E751EC13F296DFB47BD9A9
1> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFQ+CMSY7 /TDABAA+CMSY7 findfont ct_VMDictPut
/REKTFQ+CMSY7*1 
[3{/.notdef}rp /asteriskmath 252{/.notdef}rp]
REKTFQ+CMSY7 nf
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
336.02 438.451 mo
(\003)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
343.656 436.956 mo
(accordingtothe)
[4.98129 4.4234 4.43335 4.98132 3.9053 5.52924 2.76962 5.52924 8.03983 3.87552 8.03983 3.87552 
5.52924 0 ]xsh
71.9999 448.912 mo
(prioris)
[5.5392 3.89536 2.7696 4.9813 7.22287 2.7696 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: KXGAAA+CMEX10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
13 dict dup begin
/FontType 1 def
/FontName /KXGAAA+CMEX10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 18 /parenleftbigg put
dup 19 /parenrightbigg put
dup 20 /bracketleftbigg put
dup 21 /bracketrightbigg put
def
/UniqueID 5000774 def
/FontBBox {-24 -2960 1454 772} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0] def
/OtherBlues [-1159 -1139] def
/BlueScale 0.04796 def
/StdHW [47] def
/StdVW [47] def
/StemSnapH [40 47] def
/StemSnapV [40 47] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/parenleftbigg <1C60D8A8C9B08A9451E2C198C46C84A2927FE84A31A7E1DE
F9426BE1D8287279336A95FC5A71EC79970FBF9FE87049A5122A727BC6180DED
E49B3DE54B29597ED38C6EE2C5E41271FBAEF243070664FAD8E5D6BBC7B1F2F1
2FBF5421F03739862E9100B7774A256C3276E43B73C21DF6E625453C7FCF8C45
91AC6F33449A0B63D642B7DFF08ED7B4ACB01CC13E1D98> |-
/parenrightbigg <1C60D8A8C9B08A9451E2C198C46C84A2927FE84A31A7E1D
EF6EA83D84AE6BC50FA69EFE2850B46E1F2831B1139E30A295CC8C3A2956BBB1
A210AFF7246D4D0D679EC34E324F7CBD7BDA26564D5BC0B94DBD1A6ED248ADB6
69DB9D8816A861D4E2A58487B3D9B1918C0123815A7F5AFEBF24B24A4B0B7EE5
65473A6A7E5804149B70F213E60CB00EFE11CCBEDDCF590> |-
/bracketleftbigg <1C60D8A8C9B08A95D222871B45C8630DD1B90834D73FA7
BB1A1CBAC6E68FC845989FE6117D2F55B4E1CEC6A82EC6201B5D3DE2A11CB33A
DA4D177B0D> |-
/bracketrightbigg <1C60D8A8C9B08A95D222871B45C8630DD1B90834D73FA
7BB1AE0416F9E63121DDE6BD82D536A1ED9767E983991501E1C48CB55634D4F0
6E99924FD7F> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/REKTFR+CMEX10 /KXGAAA+CMEX10 findfont ct_VMDictPut
/REKTFR+CMEX10*1 
[18{/.notdef}rp /parenleftbigg /parenrightbigg /bracketleftbigg /bracketrightbigg 234{/.notdef}rp]
REKTFR+CMEX10 nf
REKTFR+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
141.462 452.244 mo
(\024)sh
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
150.041 460.214 mo
(f)sh
150.041 472.169 mo
(f)sh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
153.541 473.663 mo
(\003)sh
REKTFR+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
161.442 452.244 mo
(\025)sh
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
172.235 466.291 mo
(\030N)
[13.2802 0 ]xsh
REKTFR+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
196.821 452.244 mo
(\022)sh
REKTFH+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
204.155 466.291 mo
(0)sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
209.883 466.291 mo
(;)sh
REKTFR+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
217.078 452.244 mo
(\024)sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
225.657 460.214 mo
(K)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
234.831 460.214 mo
(\()sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
238.706 460.214 mo
(X;X)
[8.4782 4.43336 0 ]xsh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
260.651 460.214 mo
(\))sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
278.84 460.214 mo
(K)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
288.014 460.214 mo
(\()sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
291.888 460.214 mo
(X;X)
[8.47821 4.43335 0 ]xsh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
313.052 461.708 mo
(\003)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
317.632 460.214 mo
(\))sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
225.657 472.169 mo
(K)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
234.831 472.169 mo
(\()sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
238.706 472.169 mo
(X)sh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
246.96 473.663 mo
(\003)sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
251.54 472.169 mo
(;X)
[4.42339 0 ]xsh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
265.003 472.169 mo
(\))sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
278.84 472.169 mo
(K)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
288.014 472.169 mo
(\()sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
291.888 472.169 mo
(X)sh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
300.142 473.663 mo
(\003)sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
304.722 472.169 mo
(;X)
[4.4234 0 ]xsh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
317.404 473.663 mo
(\003)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
321.984 472.169 mo
(\))sh
REKTFR+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
329.179 452.244 mo
(\025\023)
[5.26025 0 ]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
343.431 466.291 mo
(:)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
388.54 466.291 mo
(\(2.18\))
[3.87552 4.98132 2.76959 4.98129 4.98129 0 ]xsh
71.9999 490.201 mo
(Ifthereare)
[3.59642 7.2727 3.87553 5.5392 4.4234 3.90532 8.6575 4.98131 3.90532 0 ]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
126.814 490.201 mo
(n)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
137.025 490.201 mo
(trainingpointsand)
[3.87553 3.90532 4.98129 2.75964 5.5392 2.76961 5.52924 9.21541 5.8082 4.98129 2.76961 5.26024 
3.87553 8.15935 4.98129 5.5392 0 ]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
226.737 490.201 mo
(n)sh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
232.717 491.696 mo
(\003)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
241.528 490.201 mo
(testpointsthen)
[3.87553 4.42339 3.9352 8.09969 5.81815 4.98129 2.76962 5.25027 3.87552 8.15933 3.87555 5.53918 
4.4234 0 ]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
316.323 490.201 mo
(K)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
325.497 490.201 mo
(\()sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
329.371 490.201 mo
(X;X)
[8.47821 4.43335 0 ]xsh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
350.535 491.696 mo
(\003)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
355.115 490.201 mo
(\)denotesthe)
[8.10962 5.52927 4.43335 5.52924 4.98129 3.87552 4.43338 8.15933 3.87552 5.52927 0 ]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 502.157 mo
(n)sh
REKTFF+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
81.0661 502.157 mo
(\002)sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
91.9011 502.157 mo
(n)sh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
97.881 503.651 mo
(\003)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
107.091 502.157 mo
(matrixofthecovariancesevaluatedatallpairsoftrainingandtest)
[8.29877 4.9813 3.87552 3.90533 2.76959 9.8829 4.98129 7.6712 3.87552 5.53922 9.056 4.4234 
4.71231 4.70235 4.98131 3.9053 2.75964 4.98129 5.53922 4.4234 4.43335 8.55786 4.42339 4.7123 
4.98131 2.75964 5.5392 4.98129 3.87552 4.4234 10.1718 4.98132 8.49817 4.98129 2.76962 7.39224 
5.53922 4.98126 2.76962 3.89536 8.55786 4.98129 7.68118 3.87549 3.89539 4.98129 2.76962 5.53918 
2.75964 5.53918 9.61395 4.98126 5.52924 10.1619 3.87555 4.43335 3.92523 0 ]xsh
71.9999 514.112 mo
(points,andsimilarlyfortheotherentries)
[5.80819 4.9813 2.76961 5.26025 3.87553 3.92524 5.93771 4.9813 5.52924 8.66747 3.92523 2.76961 
8.29877 2.76961 2.76959 4.98131 3.90532 2.75964 8.3885 3.04855 4.98129 7.02362 3.87553 5.53918 
7.55167 4.98129 3.87552 5.53922 4.4234 7.03357 4.4234 5.26025 3.87552 3.89536 2.76962 4.43335 
0 ]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
253.887 514.112 mo
(K)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
263.061 514.112 mo
(\()sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
266.935 514.112 mo
(X;X)
[8.47821 4.43335 0 ]xsh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
288.881 514.112 mo
(\),)
[3.87552 0 ]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
298.689 514.112 mo
(K)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
307.863 514.112 mo
(\()sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
311.737 514.112 mo
(X)sh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
319.991 515.606 mo
(\003)sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
324.571 514.112 mo
(;X)
[4.4234 0 ]xsh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
337.252 515.606 mo
(\003)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
341.832 514.112 mo
(\)and)
[7.00378 4.98129 5.52924 0 ]xsh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
368.013 514.112 mo
(K)sh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
377.187 514.112 mo
(\()sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
381.061 514.112 mo
(X)sh
REKTFQ+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
389.315 515.606 mo
(\003)sh
REKTFP+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
393.895 514.112 mo
(;X)
[4.4234 0 ]xsh
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
407.358 514.112 mo
(\).)
[3.87552 0 ]xsh
71.9999 526.067 mo
(Togettheposteriordistributionoverfunctionsweneedtorestrictthisjoint)
[6.3661 9.06596 4.9813 4.43336 7.96019 3.87553 5.52924 8.51802 5.8082 4.98129 3.93521 3.86557 
4.43335 3.90532 2.75963 4.98131 7.98997 5.53922 2.76959 3.92525 3.87553 3.9053 2.75964 5.5392 
5.5392 3.86557 2.76959 4.98131 9.62387 4.70235 4.98129 4.43335 7.98999 3.0386 5.5392 5.52925 
4.43335 3.87552 2.75964 4.98129 5.53922 8.01987 6.91403 8.51804 5.52924 4.43335 4.4234 9.62387 
3.87552 9.06598 3.9053 4.4234 3.93518 3.86557 3.90533 2.76959 4.4234 7.96021 3.87552 5.53922 
2.76959 8.00992 3.04855 4.98129 2.76959 5.25031 0 ]xsh
71.9999 538.022 mo
(priordistributiontocontainonlythosefunctionswhichagreewiththeobserved)
[5.5392 3.89536 2.7696 4.9813 6.58527 5.52924 2.7696 3.92524 3.87553 3.90532 2.76961 5.52924 
5.53922 3.87552 2.76959 4.98131 8.20918 3.87552 7.66125 4.42339 4.98131 5.26025 3.87552 4.98129 
2.76961 8.20918 4.98129 5.5392 2.76961 7.94019 3.86557 5.5392 4.98129 3.92525 7.11331 3.03859 
5.5392 5.53922 4.42337 3.87555 2.76959 4.98132 5.52924 6.61514 7.19299 5.52927 2.76959 4.15439 
8.2092 4.98126 4.98132 3.90533 4.43332 7.10333 7.19299 2.76962 3.87552 8.20917 3.87555 5.53918 
7.10333 4.98129 5.53922 3.92523 4.43335 3.89536 4.98132 4.43335 0 ]xsh
71.9999 549.977 mo
(datapoints.GraphicallyinFigure)
[5.5392 4.9813 3.86557 8.75712 5.81816 4.9813 2.7696 5.25029 3.87553 3.9352 8.55786 7.82068 
3.89537 4.98129 5.5392 5.52925 2.76959 4.43336 4.98129 2.75963 2.76962 9.03607 2.76959 9.30507 
6.50557 2.76961 4.98131 5.52924 3.90532 0 ]xsh
1 0 0 rgb
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
228.816 549.977 mo
(2.2)
[4.98129 2.76961 0 ]xsh
0 gry
REKTFE+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
245.322 549.977 mo
(youmaythinkofgeneratingfunctions)
[4.98129 4.98131 9.31502 8.29877 4.70236 9.03607 3.87552 5.52927 2.76959 5.53918 9.02612 4.98132 
6.82437 4.98129 4.4234 5.53918 4.4234 3.90533 4.98129 3.87552 2.76959 5.52924 8.75714 3.04855 
5.52924 5.53922 4.4234 3.87549 2.76962 4.98129 5.53922 0 ]xsh
72 561.932 mo
(fromtheprior,andrejectingtheonesthatdisagreewiththeobservations,al-)
[3.04855 3.89536 4.98131 11.965 3.87553 5.5392 8.08964 5.52924 3.90532 2.76961 4.98129 3.89536 
6.51555 4.98129 5.5392 9.19548 3.90532 4.4234 3.04855 4.4234 4.43335 3.86557 2.76959 5.53922 
8.63756 3.87553 5.5392 8.08963 4.98131 5.52924 4.43335 7.59148 3.87553 5.52924 4.98132 7.54175 
5.52924 2.76959 3.93521 4.98129 4.98132 3.89532 4.43338 8.08963 7.19299 2.76959 3.87555 9.1955 
3.87552 5.52924 8.08963 4.98129 5.53922 3.92523 4.43335 3.89536 4.71231 4.98129 3.87555 2.75964 
4.98129 5.53922 3.92523 6.51553 4.98129 2.76959 0 ]xsh
REKTFM+CMR9*1 [8.9664 0 0 -8.9664 0 0 ]msf
447.461 561.932 mo
(graphicalrejection)
[4.6088 3.60443 4.6088 5.11981 5.11981 2.55545 4.09766 4.6088 5.63092 3.60443 4.09766 2.8154 
4.09766 4.09766 3.58649 2.55548 4.60876 0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/Procedure [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.29 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
