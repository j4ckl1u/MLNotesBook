%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Urn-Drawing.pdf
%%Creator: Adobe Acrobat 8.0
%%For: shujliu
%%CreationDate: 2017/3/24, 16:30:12
%%BoundingBox: 0 0 414 126
%%HiResBoundingBox: 0 0 414 126
%%CropBox: 0 0 414 126
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	1 index dup/ID get exch/Pattern add_res
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.30 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.30 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.30 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get ne dup
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
				if
				end
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} (% &end XMP packet& %) ReadBypdfmark_5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c316 44.253921, Sun Oct 01 2006 17:14:39">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xap:ModifyDate="2017-03-24T16:30:06+08:00"
   xap:CreateDate="2017-03-24T16:28:54+08:00"
   xap:MetadataDate="2017-03-24T16:30:06+08:00"
   xap:CreatorTool="TeX"
   dc:format="application/pdf"
   xapMM:DocumentID="uuid:c36fae5b-99e7-4988-8c09-8ba2f7c903fa"
   xapMM:InstanceID="uuid:0d73d7c4-671b-4d28-834b-9dd397fbc5c1"
   pdf:Producer="MiKTeX pdfTeX-1.40.9"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
<< /1 
[/CIEBasedA 20 dict
dup /CreationDate (00000000000000) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (Generic Gray Gamma 2.2 Profile) put
dup /ColorSpace (GRAY) put
dup /Copyright (Copyright Apple Inc., 2008) put
dup /ProfileID <E78219170D720FEC3480EA343518DA5D> put
dup /MatrixA [1 1 1] put
dup /DecodeLMN [
{{0 0.00015 0.00029 0.00043 0.00058 0.00073 0.00087 0.00102 0.00117 0.00131
0.00145 0.0016 0.00177 0.00194 0.00211 0.00229 0.00249 0.00269 0.0029 0.00313
0.00336 0.00359 0.00385 0.0041 0.00438 0.00465 0.00494 0.00525 0.00555 0.00589
0.00623 0.00656 0.00691 0.00728 0.00766 0.00806 0.00845 0.00885 0.00928 0.00972
0.01016 0.01062 0.01108 0.01157 0.01205 0.01256 0.01308 0.01361 0.01414 0.01469
0.01526 0.01584 0.01643 0.01703 0.01765 0.01828 0.01892 0.01958 0.02025 0.02092
0.02162 0.02232 0.02304 0.02379 0.02454 0.02528 0.02606 0.02686 0.02765 0.02846
0.0293 0.03014 0.03101 0.03188 0.03276 0.03366 0.03456 0.03549 0.03644 0.0374
0.03838 0.03935 0.04035 0.04137 0.04241 0.04344 0.04451 0.04558 0.04666 0.04778
0.04889 0.05002 0.05118 0.05234 0.05353 0.05472 0.05594 0.05716 0.0584 0.05966
0.06093 0.06223 0.06352 0.06485 0.06619 0.06754 0.06891 0.0703 0.0717 0.07312
0.07456 0.076 0.07747 0.07895 0.08045 0.08196 0.0835 0.08505 0.08661 0.0882
0.08978 0.0914 0.09303 0.0947 0.09636 0.09804 0.09973 0.10146 0.1032 0.10494
0.10671 0.10851 0.11031 0.11212 0.11395 0.11582 0.11769 0.11959 0.12149 0.12341
0.12535 0.12732 0.1293 0.1313 0.1333 0.13535 0.13739 0.13947 0.14156 0.14366
0.14578 0.14792 0.15009 0.15225 0.15445 0.15666 0.15891 0.16115 0.16342 0.16571
0.16802 0.17035 0.17269 0.17505 0.17743 0.17984 0.18225 0.1847 0.18715 0.18962
0.19213 0.19463 0.19718 0.19973 0.2023 0.20488 0.20749 0.21013 0.21277 0.21544
0.21813 0.22084 0.22356 0.22631 0.22908 0.23186 0.23467 0.23749 0.24033 0.2432
0.24608 0.249 0.25191 0.25486 0.25782 0.26081 0.2638 0.26683 0.26987 0.27294
0.27602 0.27913 0.28225 0.28539 0.28856 0.29175 0.29496 0.29818 0.30143 0.30469
0.30799 0.3113 0.31463 0.31797 0.32134 0.32474 0.32815 0.33158 0.33504 0.33851
0.34202 0.34553 0.34907 0.35262 0.35621 0.35981 0.36342 0.36707 0.37073 0.37443
0.37813 0.38186 0.38561 0.38938 0.39316 0.39698 0.40082 0.40468 0.40856 0.41247
0.41639 0.42033 0.42429 0.42828 0.43229 0.43632 0.44038 0.44445 0.44854 0.45266
0.45681 0.46096 0.46514 0.46935 0.47358 0.47784 0.48211}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00015 0.00031 0.00044 0.0006 0.00075 0.0009 0.00105 0.00121 0.00136
0.00151 0.00166 0.00183 0.002 0.00218 0.00238 0.00258 0.00279 0.00301 0.00323
0.00348 0.00372 0.004 0.00426 0.00455 0.00484 0.00513 0.00545 0.00577 0.0061
0.00645 0.00681 0.00717 0.00755 0.00795 0.00835 0.00876 0.00919 0.00963 0.01007
0.01053 0.01102 0.01149 0.01199 0.01251 0.01303 0.01357 0.01411 0.01466 0.01524
0.01584 0.01643 0.01704 0.01767 0.01831 0.01897 0.01962 0.02031 0.021 0.0217
0.02242 0.02316 0.0239 0.02466 0.02544 0.02623 0.02704 0.02785 0.02867 0.02953
0.03038 0.03127 0.03215 0.03305 0.03397 0.0349 0.03584 0.03682 0.0378 0.03879
0.0398 0.04082 0.04186 0.04291 0.04398 0.04506 0.04616 0.04727 0.0484 0.04955
0.05071 0.05188 0.05309 0.05429 0.05551 0.05675 0.05801 0.05928 0.06058 0.06188
0.0632 0.06453 0.06589 0.06726 0.06865 0.07005 0.07147 0.07291 0.07436 0.07584
0.07732 0.07883 0.08034 0.08188 0.08344 0.08501 0.08659 0.0882 0.08983 0.09146
0.09313 0.0948 0.0965 0.09821 0.09993 0.10167 0.10344 0.10523 0.10703 0.10884
0.11067 0.11254 0.1144 0.11629 0.1182 0.12012 0.12206 0.12403 0.12599 0.12799
0.13001 0.13205 0.1341 0.13617 0.13826 0.14037 0.1425 0.14464 0.14681 0.14899
0.15119 0.15341 0.15566 0.15792 0.16019 0.16249 0.1648 0.16715 0.1695 0.17186
0.17426 0.17667 0.1791 0.18155 0.18402 0.18651 0.18903 0.19155 0.19409 0.19667
0.19925 0.20186 0.20449 0.20714 0.20981 0.2125 0.2152 0.21793 0.22068 0.22344
0.22623 0.22904 0.23186 0.23471 0.23758 0.24047 0.24338 0.24631 0.24926 0.25223
0.25522 0.25823 0.26126 0.26432 0.26738 0.27048 0.27359 0.27674 0.2799 0.28307
0.28627 0.28949 0.29273 0.29599 0.29928 0.30259 0.30591 0.30925 0.31263 0.31601
0.31942 0.32285 0.32631 0.32978 0.33327 0.3368 0.34034 0.34389 0.34748 0.35108
0.35471 0.35836 0.36202 0.36571 0.36944 0.37316 0.37693 0.3807 0.3845 0.38833
0.39217 0.39603 0.39992 0.40383 0.40777 0.41172 0.4157 0.4197 0.42373 0.42777
0.43185 0.43594 0.44004 0.44417 0.44834 0.45252 0.45672 0.46094 0.4652 0.46946
0.47376 0.47808 0.48241 0.48678 0.49117 0.49558 0.50001}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00012 0.00024 0.00037 0.0005 0.00063 0.00075 0.00087 0.00099 0.00111
0.00125 0.00137 0.00151 0.00165 0.0018 0.00197 0.00212 0.0023 0.00249 0.00267
0.00287 0.00307 0.0033 0.00351 0.00374 0.00398 0.00424 0.00449 0.00476 0.00504
0.00533 0.00562 0.00592 0.00623 0.00655 0.00688 0.00723 0.00758 0.00793 0.00832
0.00868 0.00908 0.00948 0.00989 0.01031 0.01074 0.01118 0.01164 0.0121 0.01257
0.01306 0.01355 0.01405 0.01457 0.01511 0.01564 0.01619 0.01675 0.01732 0.0179
0.01849 0.0191 0.01971 0.02034 0.02098 0.02164 0.02229 0.02296 0.02365 0.02435
0.02507 0.02579 0.02652 0.02727 0.02802 0.02879 0.02957 0.03036 0.03117 0.032
0.03282 0.03366 0.03452 0.0354 0.03627 0.03717 0.03807 0.03899 0.03993 0.04086
0.04183 0.0428 0.04378 0.04479 0.04579 0.04681 0.04785 0.04891 0.04996 0.05104
0.05214 0.05324 0.05435 0.05548 0.05663 0.05779 0.05896 0.06014 0.06134 0.06255
0.06378 0.06502 0.06627 0.06754 0.06883 0.07012 0.07143 0.07275 0.0741 0.07546
0.07681 0.0782 0.07959 0.08101 0.08244 0.08388 0.08533 0.08681 0.08829 0.08978
0.09129 0.09282 0.09436 0.09592 0.09749 0.09908 0.10069 0.10231 0.10394 0.10558
0.10724 0.10892 0.11063 0.11234 0.11405 0.11579 0.11756 0.11933 0.12111 0.12291
0.12471 0.12656 0.1284 0.13027 0.13214 0.13404 0.13594 0.13788 0.13982 0.14177
0.14374 0.14574 0.14774 0.14977 0.1518 0.15386 0.15593 0.15801 0.16011 0.16223
0.16437 0.16652 0.16869 0.17087 0.17307 0.17528 0.17752 0.17977 0.18204 0.18431
0.18662 0.18894 0.19127 0.19362 0.19599 0.19837 0.20076 0.20317 0.20562 0.20807
0.21053 0.21302 0.21552 0.21804 0.22057 0.22313 0.2257 0.22829 0.23088 0.23351
0.23615 0.2388 0.24147 0.24416 0.24688 0.24961 0.25234 0.2551 0.25788 0.26067
0.26349 0.26633 0.26917 0.27204 0.27492 0.27782 0.28075 0.28368 0.28664 0.2896
0.29261 0.29561 0.29863 0.30169 0.30474 0.30782 0.31093 0.31405 0.31717 0.32033
0.32351 0.3267 0.3299 0.33312 0.33637 0.33963 0.34292 0.34621 0.34954 0.35288
0.35622 0.35961 0.363 0.36642 0.36983 0.37328 0.37675 0.38024 0.38375 0.38726
0.39081 0.39437 0.39794 0.40156 0.40517 0.4088 0.41247}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -126 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 126 li
414 126 li
414 0 li
cp
clp
[1 0 0 1 -99 0 ]ct
gsave
98.3826 121.104 mo
513.333 121.104 li
513.333 4.05365 li
98.3826 4.05365 li
cp
clp
81.0633 139.383 mo
556.263 139.383 li
556.263 -217.017 li
81.0633 -217.017 li
cp
false sop
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
1 1 1 colr
f
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.19 .19 .59 colr
true set_gvm
%ADOBeginSubsetFont: TMEAAA+ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /TMEAAA+ArialMT
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000006546670
676d0000000000000710000005ee676c796600000000000019cc00001c2c
686561640000000000000d0000000036686865610000000000000d380000
0024686d74780000000000000d5c000000486c6f63610000000000000da4
000000266d6178700000000000000dcc000000206e616d65000000000000
0dec00000020707265700000000000000e0c00000bbe6764697200000000
000000000000000005ba001905ba001a05a70019042600180000ffe70000
ffe80000ffe7fe69ffe805ba0019fe69ffe802ea000000b8000000b80000
000000a800ad016900ad00bf00c201f0001800af00b900b400c800170044
009c007c009400870006005a00c80089005200520005004400940119ffb4
002f00a1000300a100cd00170057007e00ba00160118ffe9007f008503d3
00870085000d002200410050006f008d014cff75005c00df04830037004c
006e00700180ff58ff8eff92ffa400a500b903c8fffd000b001a00630063
00cdffee05d8ffdc002d005c0095009900df019209b500400057008000b9
039d0072009a035d0401ff67fffa00030021007700cd0004004d00cd01c0
022b004c006500e70118017c034305d8ffa3ffb0ffc40003001c005d0068
009a00ba013501470221055cff4dffcd0016002d00780080009900b200b6
00b600b800bd00da010c05f0ffa4fff00019002c0049007f00b400ce01c0
03fefd81fe3f000000050018002900390049006f00be00c700d0012301c1
026f050c05320540057affd4001400310055005700a700b400e601f7027e
027e027f03c60446ff42000e0085009100bf00c200c500e1011a012f014f
01560229026f029e03720008002c00310031006400690089009800c700de
012b01b6020c02cf03a304ab04fb061dfee0ff0e00060026009b009d00c1
010d011801200173018201d601e30243025f029b02e2039404a904d20761
001c005e006d008d00ab00f7011201380151015b0168017c018701910199
01cd01d001e802410254026b02ef0368037103bd04420442045304730483
0586058b06e8fe58fec4fed1fef7ff32ff860051007c008100910095009e
00b400b900cf00d900d900df00e20105010b010e010e012001210155017b
017b017e018d01a201a801a901b401d001d001e201e901f201f501fb0200
02000206021b0221022202220223027202770294029c02cf02cf02d002ec
02f903170322032b0335033c0359036f037103870390039003b503e1041a
04cf04ff053205320596059f05a805ab05c205f0060c0782080008ccfca3
fd2afddefe00fe88fe96feb2feb4ffe100150019001a001c001f003c0051
00610061006a0078009600a500af00d3010c0118011a012a013e014c0151
015f016a0171017801820184019a01a501a801a901ae01bc01cd01d701ef
0200020d021c02210222022e02350242024f024f025e0265027102900292
02b402d602fa0307030b030f0315032a0347035d036503740379039603b0
03cc03dd03e203f603fc03fc03ff040a041f04220426042b0447045f0475
049e04e704e7055c05cb05e5060a066d068606b806f10736073e07500751
075d078f07b607d4086000b600c300b500b7000000000000000000000000
01e00381034503b5008e0233041902ce02ce002d005f0064034d023f0000
02a80188027d01b402240578063b023b014e00f00426029402c6029f02f6
023b034d014b0153006a0231000000000000061404aa0000003c04c300ed
04bc026502ce03b50078060c017e02ef060c00b201000239000001c50330
042b03cb00da03df010704a100db040a011701ed02a70350010b01bd043e
05580021039c00ae0371017d00b5024500000afb088c012b014e01aa0087
0054013201f803ff0003024e00b4003703e30083006b02d800ed00770088
009701640467008e0033017c00e700a6029e0329056e062a061501c90269
048a021301b4000204a9000002390124010305140084015d039a06ef02d9
007500cf040a00de03ac04bc02cf02ae034d04f005520168006d007d0086
0071ff810079055804d2016700030156002504e00094007c033204210094
007f0072005c002f00b6001800ba00b80041034d00720018001f004c016a
01550099009a009a009800b200040078006900140057006e00ce00b40654
02b80067050e016500e7000004cbfe52005affa60099ff67006eff92002d
ffd40087ff7c00b800a800e5008f00a80185fe7b0070001e00d900de014c
054602cf0546ff2d028a02d90253029600b7000000000000000000000000
00000125011800ea00ea00ae0000003e05bb008a04d70053003fff8cffd5
00150028002200990062004a00e4006d00ee00e5004803c00033fe4e02b1
ff460370007905df0051ffa7ff1f010a0068ff6c004f00bc00a507050061
072b00ed04b001d200b6007b00650252ff740365fe690094008f005c0040
00860075008900894043555441403f3e3d3c3b3a3938373534333231302f
2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514131211
100f0e0d0c0b0a090807060504030201002c4523466020b02660b0042623
48482d2c452346236120b02661b004262348482d2c45234660b0206120b0
4660b004262348482d2c4523462361b0206020b02661b02061b004262348
482d2c45234660b0406120b06660b004262348482d2c4523462361b04060
20b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd44
2320b8015a51582320b08d44235920b0ed51582320b04d44235920b09051
582320b00d44235921212d2c20204518684420b001602045b04676688a45
60442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0172370
b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b01923
442d2c2045b00325456164b050515845441b2121592d2cb00143632362b0
002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c2069
b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d
2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb0124358
8745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0a0
5158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2cb0022546
608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b00325
45b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b23
5961441cb114008a5279b31940201945208a54582321b03f1b235961442d
2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c
0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4bb06451584569b0
0943608a103a1b212121592d2c01b005251023208af500b0016023edec2d
2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c
20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a
2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b8022323701020b8
02234520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c
21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051
580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb84000
626023212d2cb4000100000015b00826b00826b00826b008260f10161345
683ab001162d2cb4000100000015b00826b00826b00826b008260f101613
4568653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b5458
20458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b
2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b54b01243
5c5a58381b2121592d2cb012435c580cb00425b00425060c6423646164b8
07085158b00425b00425012046b01060482046b0106048590a21211b2121
592d2cb012435c580cb00425b00425060c6423646164b807085158b00425
b00425012046b8fff060482046b8fff06048590a21211b2121592d2c4b53
234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121592d2c
4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426024b54
5a8a8a0ab012435c5a58381b2121592d2c4b5258b00425b0042549b00425
b00425496120b0005458212043b0005558b00325b00325b8ffc038b8ffc0
38591bb04054582043b0005458b00225b8ffc038591b2043b0005458b003
25b00325b8ffc038b8ffc0381bb00325b8ffc03859595959212121212d2c
462346608a8a462320468a608a61b8ff8062232010238ab902c202c28a70
456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb10200
42b123018851b1400188535a58b910000020885458b20201024360425959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00000001
00000005028f92f28cf65f0f3cf5081b080000000000a2e3272a00000000
c3047090faaffd671000080c00000009000100000000000000010000073e
fe4e00431000faaffa7a1000000100000000000000000000000000000012
06000100023900b905c7009e0556009e0556005c05c700a10473004a0400
00500473004b0473008701c7008801c70083047300870473004402aa0085
0400003f023900240400002100000015004300e7016a02bf035104ba0594
0673074507bf083d09200a010a840c580cea0e16000000010000001200f2
003c009d000700020010002f005600000468041d00050002000000010012
0001000000000006000e0000424e57474d452b417269616c4d54b9005403
28b326181fd0bc032900e0032900020329b22b1d1fb90327031db23b1f40
b80323b31215320f412d03200001002f0320000100200320006f032000af
032000bf03200004005f031e00010010031e007f031e0080031e00af031e
00bf031e00d0031e00060000031e0010031e0020031e006f031e009f031e
00e0031e0006031d031cb2201f1041270319007f03190002000f031700ef
031700ff03170003001f0317002f0317004f0317005f0317008f0317009f
03170006000f0317005f0317006f0317007f031700bf031700f003170006
00400317b2923340b80317b28b3340b80317b36a6c3240b80317b2613340
b80317b35c5d3240b80317b357593240b80317b34d513240b80317b34449
3240b80317b23a3340b80317b331343240b80317b32e423240b80317b327
2c3240b80317b312253280b80317b30a0d32c04116031600d00316000200
700316000102c4000f0101001f00a0031500b0031500020306000f010100
1f00400312b32426329fbf03040001030203010064001fffc00301b20d11
32410a02ff02ef0012001f02ee02ed0064001fffc002edb30e11329f414a
02e200af02e200bf02e2000302e202e202e102e1007f02e00001001002e0
003f02e0009f02e000bf02e000cf02e000ef02e0000602e002e002df02df
02de02de000f02dd002f02dd003f02dd005f02dd009f02dd00bf02dd00ef
02dd000702dd02dd001002dc0001000002dc0001001002dc003f02dc0002
02dc02dc001002db000102db02db000f02da000102da02daffc002d3b237
3932b9ffc002d3b22b2f32b9ffc002d3b21f2532b9ffc002d3b2171b32b9
ffc002d3b2121632b802d2b2f9291fb90326031cb23b1f40bb0322003e00
330322b225311fb80318b23c691fb802e3b3202b1fa0413002d400b002d4
0002000002d4001002d4002002d4005002d4006002d4007002d400060060
02d6007002d6008002d6009002d600a002d600b002d60006000002d60010
02d6002002ca002002cc002002d6003002d6004002d6005002d6000802d0
b2202b1fb802cfb226421f411602ce02c70017001f02cd02c80017001f02
cc02c60017001f02cb02c50017001f02c902c5001e001f02ca02c6b21e1f
00410b02c6000002c7001002c6001002c7002f02c5000502c1b324121fff
411102bf0001001f02bf002f02bf003f02bf004f02bf005f02bf008f02bf
000602bf0222b2641f12410b02bb00ca0800001f02b200e90800001f02a6
00a20800406a1f4026434932402043493240263a3d3240203a3d329f209f
26024026969932402096993240268e923240208e92324026848c32402084
8c3240267a813240207a813240266c763240206c76324026646a32402064
6a3240265a5f3240205a5f3240264f543240204f5432b8029eb724271f37
4f6b0120410f0277003002770040027700500277000402770277027700f9
0400001f029bb22a2a1fb8029a402b292a1f80ba0180bc0180520180a201
806501807e01808101803c01805e01802b01801c01801e0180400180bb01
38000100800140b40180400180bb013800010080013940180180ca0180ad
018073018026018025018024018020013740b80221b2493340b80221b245
3340b80221b341423240b80221b33d3e320f410f0221003f0221007f0221
000300bf022100cf022100ff0221000300400221b320223240b80221b319
1e3240b80222b32a3f3240b80221b32e3a326f414802c3007f02c3008f02
c300df02c30004002f02c3006002c300cf02c30003000f02c3003f02c300
5f02c300c002c300ef02c300ff02c3000600df02220001008f0222000100
0f0222002f0222003f0222005f0222007f022200ef0222000600bf022100
ef02210002006f0221007f022100af02210003002f0221003f0221004f02
21000302c302c30222022202210221401d101c102b1048038f1c010f1e01
4f1eff1e023700161600000012110811b8010db6f70df8f70d0009410902
8e028f001d001f0290028f001d001f028fb2f91d1fb80198b226bb1f4115
0197001e0401001f013900260125001f013800730401001f0135001c0801
001f0134001c02ab001f0132b21c561fb8010fb2262c1fba010e001e0401
b61ff91ce41fe91cb80201b61fe81cbb1fd720b80401b21fd51cb802abb6
1fd41c891fc92fb80801b21fbc26b80101b21fba20b80201b61fb91c381f
adcab80401b21f8126b8019ab21f7e26b8019ab61f7d1c471f6b1cb80401
b21f6526b8019ab21f5e73b80401400f1f52265a1f481c891f441c621f40
73b80801b61f3f1c5e1f3c26b8019ab21f351cb80401b61f301cbb1f2b1c
b80401b61f2a1c561f291cb80101b21f231eb80401b21f5537b80168402c
07960758074f07360732072c0721071f071d071b071408120810080e080c
080a080808060804080208000814b8ffe0402b0000010014061000000100
060400000100041000000100100200000100020000000100000201080200
4a00b013034b024b5342014bb0c063004b6220b0f65323b8010a515ab005
234201b0124b004b5442b0382b4bb807ff52b0372b4bb007505b58b10101
8e59b0382bb00288b801005458b801ffb101018e851bb0124358b9000101
11858d1bb900010128858d5959001816763f183f123e113946443e113946
443e113946443e113946443e11394660443e11394660442b2b2b2b2b2b2b
2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59b032
4b5358b0ff1d594bb09353205c58b901f201f04544b901f101f045445958
b9033e01f2455258b901f2033e4459594bb8015653205c58b9002001f145
44b9002601f145445958b9081e0020455258b90020081e4459594bb8019a
53205c58b9002501f24544b9002401f245445958b909090025455258b900
2509094459594bb8040153205c58b173244544b1242445445958b9172000
73455258b9007317204459594bb8040153205c58b1ca254544b125254544
5958b9168000ca455258b900ca16804459594bb03e53205c58b11c1c4544
b11e1c45445958b9011a001c455258b9001c011a4459594bb05653205c58
b11c1c4544b12f1c45445958b90189001c455258b9001c01894459594bb8
030153205c58b11c1c4544b11c1c45445958b90de0001c455258b9001c0d
e04459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b01b33b59635c4565234560
23456560234560b08b766818b080622020b163594565234520b003266062
636820b003266165b059236544b063234420b13b5c4565234520b0032660
62636820b003266165b05c236544b03b2344b1005c455458b15c406544b2
3b403b4523614459b347503437456523456023456560234560b089766818
b080622020b134504565234520b003266062636820b003266165b0502365
44b034234420b147374565234520b003266062636820b003266165b03723
6544b0472344b10037455458b137406544b24740474523614459004b5342
014b5058b108004259435c58b108004259b3020b0a124358601b21594216
10703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342
b0124358b92d412d411bba04000400000b2b59b00e2342b00f2342b01243
58b9187e3b211bba01a80400000b2b59b0102342b0112342002b74757375
00184569444569444569447373737374757374752b2b2b2b74752b2b2b2b
2b737373737373737373737373737373737373737373737373732b2b2b45
b0406144737400004bb02a534bb03f515a58b1070745b040604459004bb0
3a534bb03f515a58b10b0b45b8ffc0604459004bb02e534bb03a515a58b1
030345b040604459004bb02e534bb03c515a58b1090945b8ffc06044592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58b900
8002bbb301401e017400735903b01e4b5402b0124b545ab012435c5a58ba
009f02220001007359002b7473012b01732b2b2b2b2b2b2b2b737373732b
2b2b2b2b002b2b2b2b2b2b00456944734569447345694473747545694473
4569444569444569447374456944456944732b2b2b2b2b732b002b732b74
752b2b2b2b2b2b2b2b2b2b2b2b2b2b737475732b7374757374752b2b2b74
2b2b000000>
[7213 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 42 1 <000200b9000001860426000300070038402004050006070902063c04033c
0106040a023c2f003f000220000100a108a198182b10f45d71ed003f3fed
10ed011112393912393931301335331503353315b9cdcdcd0359cdcdfca7
cdcd>TMEAAA+ArialMT AddT42Char 
1 134 2 <0002009e0000055a05ba000f001d00e5402f201f0143081c1d1e02010211
101e0f000817262009011f400d0d0255092010100255090a0f0f02550918
0d0d025509b8fff440150c0c0655091a1f1d102001200001002010100255
00b8fff6b40f0f025500b8fff6b40d0d025500b8fffab40c0c025500b8ff
f7b40c0c065500b8fff8400a0d0d0655005d1e3b5c182b10f62b2b2b2b2b
2b5d3cfd3c10f62b2b2b2b2b5ded003f3cfd3c3f3cfd3c31304379403603
1b0708060805080408040619181a1802060b0a0c0a0d0a03061516141613
1603061b03172101120e17210118081c2101160a1121002b2b012b2b2a2a
2a2a81015d3311213217161716121514020e022325213236373636353426
272623219e01f9ab5a7e5974734e7a91cd85feb1013991a531454d976c4e
adfecc05ba151d4c62fecfc4a7fefea96132ad363145e9a6e6f72a1e>TMEAAA+ArialMT AddT42Char 
1 462 3 <0002009e000004fd05ba000d001800b2402c65116b14024b104b145b105b
14040b0c1e0f0e0e0017181e02010200081226080a0d0d025508100b0b06
5508b8fff4401b0c0c0655081a201a01201a011a180d2001200001002010
10025500b8fff6b40f0f025500b8fff6b40d0d025500b8fffa400b0c0c02
55000c0b0b065500b8fffab40c0c065500b8fff0400a0d0d0655005d193b
5c182b10f62b2b2b2b2b2b2b5d3cfd3c4e10715df62b2b2b4ded003f3f3c
fd3c12392f3cfd3c3130015d005d33112132171e02151402212111112132
36353426272623219e0229924d6c9259eefec9fe88017bbc9e5d4c3184fe
8905ba0e1265b66dbbfefdfdac03018c7f5c83150d00>TMEAAA+ArialMT AddT42Char 
1 724 4 <0001005cffe704eb05d30030021540276303630473037404042527350339
1c430349074c1d451f44244627530359075c1d572889130e23b8fff2b410
10025524b8fff2b41010025525b8fff2b41010025526b8fff2b410100255
27b8fff2b41010025523b8fff6b40d10025524b8fff6b40d10025525b8ff
f6b40d10025526b8fff6b40d10025527b8fff640460d100255280d262402
24032725360f34234425452f5a20562355256c0b6a0d6b0e66146518790b
7a0d7a0f7d107524732586038a0b890d8a0f8d1085248325920d960f9615
1eb10602435458402d2126121b261a09262901260000291a120432312600
650002000d2d791b891b021b25160d2d1e27250125051605b8fff4400c0c
0c0655051e2d091e1e1603003fed3fed2b1112395d1112391112395d1112
395d01111217392fed2fed2fed2fed1b402d25240e0d0b05211c1d1e1b08
070604030206012524220e0d0b06051e1b2d1a400c0c02558f1a011aed16
002d01b8ffc040120c0c02551001200150016001700190010601b801b040
132d1e1e1603051e2d091b261a4a092600290129b8ffeab40e0e025529b8
fff4400d0c0c0255291a32212612012612b8ffecb40e0e025512b8fff6b4
0d0d025512b8fff8400f0c0c02551254200001001931635b182b4e10f45d
4de42b2b2bed10ed4e10f62b2b5d4dedf4ed003fed3fed10fd5d2be410fd
5d2bf4111217391117391112393901121739593130005d712b2b2b2b2b2b
2b2b2b2b015d7113371e0233323636353426272624272626353436363332
161617072626232206151417160417161615140606232224265cb70d5fc8
7d6faa53505c3bfe6c5169677ef294a3f98605ba0fada9b0a1393801d958
807a86fb9dc7fef39901d7106e8d5742734445672317612b37a3656fc164
69cc810e8b8e815b4f33336b283bb57675cf7374e900>TMEAAA+ArialMT AddT42Char 
1 1406 5 <000100a1ffe7052205ba001400d9400a260f58045808c9080416b8ffc040
1613153434043b0846044a08760fa605e80f070c000211b802bbb4060914
2602b8ffecb40f0f025502b8fff2400b0d0d025502100c0c025502b8ffe0
401c0b0b0655025d201601201650160260167016801603160d26200a010a
b8ffc0400a1315340a20101002550ab8fff6b40f0f02550ab8fff6b40d0d
02550ab8fffa400b0c0c02550a040b0b06550ab8fff7b40c0c06550ab8ff
f8400a0d0d06550a5d153b59182b4e10f42b2b2b2b2b2b2b2b5ded4d105d
5d71f62b2b2b2b4ded003fed3f3c3130015d2b005d013311140204232224
0235113311141616333236110460c264fefbd4cefefa70c247ad7dd6b605
bafcb1ddfefca38e010de9034ffcb2bfb562c2011400>TMEAAA+ArialMT AddT42Char 
1 1698 6 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>TMEAAA+ArialMT AddT42Char 
1 2420 7 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>TMEAAA+ArialMT AddT42Char 
1 2856 8 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>TMEAAA+ArialMT AddT42Char 
1 3302 9 <00010087000003e805ba00140161b90016ffc0b315173403b8ffe0400e0d
0d0655250435034503ba0d0403b8ffe0403a1719341708110c1114030501
000f1c0507140b0a0c250940333634ff0901c0090116400b0b0255164010
10025509281010025509140e0e025509b8ffec40110d0d025509040c0c02
55091a0b0b025509b8fff6400b0b0b065509141010065509b8fff8400b0d
0d0655090a0f0f065509b8fff6b60c0c0655094e16b8ffc04017343634b0
16f016027016a016b016ff1604160214250100b8ffc04010333634f00001
00002000d000e0000400b8fffab41010025500b8fffa40170e0e02550004
0c0c025500080b0b025500040b0b065500b8fffa40160f0f065500020c0c
065500020d0d0655004e154750182b10f62b2b2b2b2b2b2b2b5d712b3cfd
3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b5d712bed003f3c3fed3f1139
113901123931304379400e060e07250e060c1b010d080f1b01002b012b2b
81002b5d2b012b33113311363332161615112311342623220606151187b4
7ec076ae4bb4756b508d3c05bafdf2925da49cfd5f02a1877b538e7dfdbb
>TMEAAA+ArialMT AddT42Char 
1 3722 10 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>TMEAAA+ArialMT AddT42Char 
1 3966 11 <000100830000013705ba000300e3b605360b0b025505b8ffc0b337383405
b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ffc0402515
17340f051f059f05df05044f05df05f005031f0570058005ff0504010000
0a0203250100b8ffc0b337383400b8ffc040153335349f0001c000f00002
00002000d000e0000400b8fff8b41010025500b8fffa401d0e0e02550004
0c0c0255000a0b0b025500140b0b065500081010065500b8fffeb40d0d06
5500b8ffffb40c0c065500b8fffc400a0c0c0655004e044750182b10f62b
2b2b2b2b2b2b2b2b5d71722b2b3cfd3c003f3f3130015d71722b2b2b2b2b
2b3311331183b405bafa4600>TMEAAA+ArialMT AddT42Char 
1 4218 12 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>TMEAAA+ArialMT AddT42Char 
1 4672 13 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>TMEAAA+ArialMT AddT42Char 
1 5122 14 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>TMEAAA+ArialMT AddT42Char 
1 5384 15 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>TMEAAA+ArialMT AddT42Char 
1 6320 16 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>TMEAAA+ArialMT AddT42Char 
1 6612 17 <00010021fe5103ee0426001a01f7b10202435458401d0a140f030b031c19
0f12060b061340120f200b400c200f180f0f02550f192f2b1add1a18cd1a
1910dd1a18cd003f3f3fed12173931301bb30f1c010fb8ffde406d1c3928
14560faf0a03400d400f020f202830341020283034070c0912160d181227
0b270c270d360c360d350e99110b28122813481659125913591569126913
69157906760d79117a147a15850d8a118c128c138914980aa80bbc10bb11
ba14ea0ae714f50dfd10f914ff1c1e12b106024354584016130b1c1b040f
440f840f030f190b031c190f12060b06003f3f3fed1112395d0111123939
1b40370f0f0c101112120a00031914131325120a1412120a0f0c0f110c25
0b0a140b0b0a1312120c0c0b06031c190f001c101c022f1cbf1c021cb802
3fb50f1340124014b80254400b3f124012025f12bf120212b80142b60f01
2200451b0ab8025440120f200b4040200c300c4f0c03500cff0c020cb801
42b32f0f010fb8023fb41b207c66182b1a1910fd71f45d711a18ed1a1910
ed1810f4e41910e45d71ed1a1810ed1910e45d7100183fed3f3c103c103c
87052e2b087d10c487052e182b0e7d10c400111239870e103c3c08c44bb0
0e534bb018515a58bb000cffe8000bffe80138385959313001435c58b900
14ffdeb637390a2237390eb8ffe8b51539112215392b2b2b2b595d712b2b
00715d2b015d591327163332363736373637013313161736371333010607
060623227f143b2c3c48171126050bfe6dc2dd2b221f2be3b4fe6c412430
7c5634fe67a91028241b6b0f1d0428fd9975817c76026bfbc8af42595300
>TMEAAA+ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>TMEAAA+ArialMT AddT42Char 
TMEAAA+ArialMT /CharStrings get begin
/colon 1 def
/D 2 def
/P 3 def
/S 4 def
/U 5 def
/a 6 def
/c 7 def
/e 8 def
/h 9 def
/i 10 def
/l 11 def
/n 12 def
/o 13 def
/r 14 def
/s 15 def
/t 16 def
/y 17 def
end
TMEAAA+ArialMT /Encoding get
dup 58 /colon put
dup 68 /D put
dup 80 /P put
dup 83 /S put
dup 85 /U put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVO+ArialMT /TMEAAA+ArialMT findfont ct_VMDictPut
/JXZOVO+ArialMT*1 
[58{/.notdef}rp /colon 9{/.notdef}rp /D 11{/.notdef}rp /P 2{/.notdef}rp /S 
/.notdef /U 11{/.notdef}rp /a /.notdef /c /.notdef /e 
2{/.notdef}rp /h /i 2{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s /t 4{/.notdef}rp /y 134{/.notdef}rp]
JXZOVO+ArialMT nf
JXZOVO+ArialMT*1 [21.1398 0 0 -21.1398 0 0 ]msf
108.235 -179.133 mo
(Dirichlets)
[15.2629 4.69303 7.0394 4.69304 10.591 11.7114 4.67191 11.7115 5.77116 0 ]xsh
195.355 -179.133 mo
(:the)
[11.7114 5.87686 11.6903 0 ]xsh
242.215 -179.133 mo
(Polya)
[14.0158 11.7115 4.67191 10.6122 0 ]xsh
300.955 -179.133 mo
(UrnStory)
[15.2629 7.06052 17.5038 14.1004 5.85571 11.7114 7.03943 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: MVGBAA+Helvetica-Oblique Initial
ct_T42Dict begin
-0.93 -0.48 1.57 1.137
 256 array 0 1 255 {1 index exch /.notdef put} for  /MVGBAA+Helvetica-Oblique
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000036c6670
676d000000000000042800000a1d676c79660000000000001334000009f4
686561640000000000000e4800000036686865610000000000000e800000
0024686d74780000000000000ea40000004c6c6f63610000000000000ef0
000000286d6178700000000000000f18000000206e616d65000000000000
0f380000002c707265700000000000000f64000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0401bb000598a8a20b003265358
2321b0808a8a1b8a235920b0032653582321b800c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db8005c2c4b535845441b2121592d00000000010000
000000009bcb09da5f0f3cf500110800000000005f4d8f0000000000c621
bcc5f88afc270c92091b000200090001000000000000000100000629fe29
00000c01f88afc350c92080001b300000000000000000000000000130512
004202aa00d702aaffef0473019b04730064047301170473008005560097
06aa0097063900a404730070040000750473006f0473007d0400008001c7
008904730084047300ab05c700f5000000340066009600b4012a015601ae
020c025202aa0326036803ac03fc04320448048204be04fa000100000013
006f0009006a0007000200100010005d000007e80a1d0004000100000001
0012000100000000000600180000564b5a4c4e4b2b48656c766574696361
2d4f626c697175650000b800532bb800492bb8003f2bb800352bb8002b2b
4118008001a6009001a600a001a600030069018b0079018b0089018b0099
018b00040089018b0099018b00a9018b00b9018bb2040840ba0179001a01
4a400b041f5414191f180a0b1fd2b80106b49e1fd918e3bb0119000d00e1
0119b20d0009410a01a0019f0064001f01a50025017a00480028019ab329
6c1f60410a01a9007001a9008001a90003008001a9000101a9b21e321fbe
012c00250401001f0126001e0401b61fe7312d1fe531b80201b21fc227b8
0401b21fc11eb80201400f1fc01d9e1fbf1d671fbe1d671fab27b80401b2
1faa29b80401b61fa91d6c1f931eb8019ab21f921db80101b21f911db801
01b21f751db80201b61f6d29961f6431b8019ab21f4c96b802abb21f391d
b80156400b1f3638211f351de41f2f27b80801400b1f2d1d4c1f2a31cd1f
241db802abb21f201eb8012540111f1c1d931f3a1d4c1f1e1d45273a1d45
27bb01aa019b002a019bb2254a1fba019b0025017ab349293896b8017bb3
48283125b8017a403648289629482725294c1f252946272729482756c807
84075b07410732072b072807260721071b071408120810080e080c080a08
080807b801acb23f1f06bb01ab003f001f01abb308060805b801aeb23f1f
04bb01ad003f001f01adb70804080208000814b8ffe0b40000010014b801
abb41000000100b801abb606100000010006b801adb300000100b801ad40
1f0400000100041000000100100200000100020000000100000201080200
4a00b0018db806008516763f183f123e113946443e113946443e11394644
3e113946443e113946443e11394660443e11394660443e11394660442b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18011db096
4b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475
2b2b2b65422b2b4b5279b376706a66456523456023456560234560b08b76
6818b080622020b16a704565234520b003266062636820b003266165b070
236544b06a234420b176664565234520b003266062636820b003266165b0
66236544b0762344b10066455458b166406544b27640764523614459b362
42725d456523456023456560234560b089766818b080622020b172424565
234520b003266062636820b003266165b042236544b072234420b1625d45
65234520b003266062636820b003266165b05d236544b0622344b1005d45
5458b15d406544b262406245236144592b2b2b2b456953427374b8019a20
45694b20b02853b049515a58b020615944b801a620456944750000>
[2549 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 104 1 <000100d7fe5e039b05d50014000fb800532b00b800002fb800082f303101
0207060302171613232e01272637363712373613039bde4e753d3e1e1358
79622b12190e08103f8e5bf905d5fecf90dbfee1fedef094feeae47e6c94
a8574f0128e793012500>MVGBAA+Helvetica-Oblique AddT42Char 
1 204 2 <0001ffeffe5e02ae05d50013000fb800532b00b800082fb800002f303103
1237361312272603331e01171606070207060311e04c733e3d1e12587966
2811150b183f8f5bf7fe5e01368ed701210121f0940116f673657df471fe
d8e895fede00>MVGBAA+Helvetica-Oblique AddT42Char 
1 300 3 <0001019b0000040405920008000fb800532b00b800042fb800062f303101
373e013733012313019b1dc7ad4a8efed1c0d703f68a1359a6fa6e03f600
>MVGBAA+Helvetica-Oblique AddT42Char 
1 360 4 <00010064ffd904ea059a00310051b800532b00ba0005002f00562bba0022
001900562bba0012000b00562bb8002f10b80001dcb8000b10b8000ed0b8
000e2fb8001210b8000fd0b8000f2fb8002210b8001ddcba0029000b0012
1112393031133306171633323637362623220607371e0133323736373626
23220706072336373621321607060706071e010706002322028ebc121b2e
b78ecc1a1f9ca1122513221b261665487d1f178065b45e341fb222589801
15dbc7271d58374c6a5a1b2cfebbf8fea901b88b3f719878947601019f03
022038906b7478427aa070c8c3b98452331d1fb180cdfefe0117>MVGBAA+Helvetica-Oblique AddT42Char 
1 596 5 <000101170000055a0580000f0013b800532b00b800082fba0000000d0056
2b303101070600070607060723120136372137055a2253fed5817f4e325c
c79b013ebcbbfce82705809d43feb4c0bb9a63dc019a0196eeadb500>MVGBAA+Helvetica-Oblique AddT42Char 
1 684 6 <00020080ffd804e4059a001b00270027b800532b00ba0004001800562bba
0010001f00562bba0025000a00562bb8001810b80000dc30310106171633
3236130e0123220237360033201316070207022122263701362623220607
06163332360159185f314581e46c51c166cfba2b29012de801393b213138
7acbfec7d2ab230365227f7b84c0201d65956bcf015a95391ed701495f4d
0102cbc30128fee69be9fef9cbfeaedca602639e9bb1948ca58d>MVGBAA+Helvetica-Oblique AddT42Char 
1 860 7 <00030097000005c105bd000a001500280029b800532b00ba000b00270056
2bba0017000800562bba0000001300562bba001f00130000111239303101
323736373627262321030132373637362726232103132120171607060706
0716171607060706290103787e4d7a1e1f6a3d82fe9d60011db7643f1522
83457dfe756e51027701024c2d1a1d623355672d4f241e72a9fedefd9303
5023378f90321cfe39fd5a6a435fa03a1ffdfb05139a5b778b592f272b36
60a98e73ac000000>MVGBAA+Helvetica-Oblique AddT42Char 
1 1048 8 <000100970000074f05bd00130039b800532b00b800002fb800032fb80005
2fb8000b2fb800122fba000200050000111239ba000a00050000111239ba
000d00050000111239303101211301210123133e0137012303070e010703
2301cf011d9e02ab011afec8bdb8093119fd56c59f0a0b2a0bb8be05bdfb
2604dafa4303632dd077fb2904d72d36dd34fc9d>MVGBAA+Helvetica-Oblique AddT42Char 
1 1188 9 <000200a4ff8b06ca05e500150027001bb800532b00b800012fba00250005
00562bba000d001f00562b30312507270e01232027261312371221201716
030607060725273717361237120223220003021221323605dc7dbf5bcb71
feaa927d463fc1f8017401858669411e3f5f99feee867ea071781937cbeb
eefea94338c801023e700479ad2d36e0da0148012ad40110fac3fed08e83
c87e107e7b95680102760103013cfed1fec5fef7fec611000000>MVGBAA+Helvetica-Oblique AddT42Char 
1 1364 10 <00020070ffdc049a0449000f003b003bb800532b00ba0027003500562bba
001f001700562bb8002710b80000d0b800002fb8002710b8002ad0b8002a
2fb8003510b8002ed0b8002e2f3031253237363f010e010f010607060706
16013637363736262322070607233624333217160703061633323637070e
0123222726370e01232226373e013701e65f63a5241e256e337065375d16
115f01b3401f110914727a8d4b2a1ba82f0118a3bd66662083060f250c1f
121d2c2d265d1c0f0547e47c95971d20dd9b752c49a691151c060e0d1c2f
674e5a0214082c182d5c534c2a53c69b484898fd971c220303850c064223
40486ab58895a413>MVGBAA+Helvetica-Oblique AddT42Char 
1 1612 11 <00010075ffe1047d044e001a0027b800532b00ba000b001200562bba0018
000400562bb8001810b80001dcb8001210b8000edc303101233626232207
06070616333236373306042322023712003332160467af05567eac6e4722
235a9270a032af4bfee6bbd2b9313c0155d4b5bd02c76383a86da0a1dc89
77d5c50133e6011a013ab000>MVGBAA+Helvetica-Oblique AddT42Char 
1 1744 12 <0002006fffda052605c2000b001d001bb800532b00b8000f2fba00000016
00562bba001c000600562b30312532363736262322060706160116171333
0123370e01232202373600333202427dce2b2b7c7a88d52b2561020e2a2d
73adfec7a21f54bf6fb3c636310138de7b77d7c9cbc3d0caace803971e4b
021dfa3e956358012dfaea0157000000>MVGBAA+Helvetica-Oblique AddT42Char 
1 1880 13 <0002007dffda04a60447001c0024001fb800532b00ba0008001400562bba
001a002100562bba001d000400562b303101160716072106163332373637
330e01070607062322021312003332160336272623220607048125050123
fcef1e67978d673c23b1146d3b637f4552c8d83837015ce272c0780e192e
ad7cce230387516c4aa2a3c55d36473b912e501c1001230106010201426b
fe91754682b38a000000>MVGBAA+Helvetica-Oblique AddT42Char 
1 2040 14 <00010080000004c405bd000b0031b800532b00b800002fb800062fb8000a
2fba000200060000111239ba000400060000111239ba0008000600001112
39303101330301330901230307032301b8adb6022fe6fe110123e6dcb455
ad05bdfcab01c7fe6ffd62021c8afe6e0000>MVGBAA+Helvetica-Oblique AddT42Char 
1 2148 15 <000100890000027505bd0003000fb800532b00b800002fb800022f303101
33012301c1b4fec8b405bdfa4300>MVGBAA+Helvetica-Oblique AddT42Char 
1 2192 16 <00010084000004a1044700190017b800532b00b8000a2fb800182fba0005
001000562b30310133073e01333217160703231336272623220706070e01
0703230167ab2060bb68e42e1a2292b78f15101b7e402c4f4638331677b4
042f985e529f57a2fd5102a3623c640d1642357169fdcf000000>MVGBAA+Helvetica-Oblique AddT42Char 
1 2308 17 <000100abffe304c1042f0017001fb800532b00b800002fb8000a2fba0005
001200562bb8000510b8000ddc3031010306171633323736371333032337
060706232227263713021b97110f1b83bc68382170b4e3aa23303d7993e5
321c1d9b042ffd39523460a85a9d020efbd19e3d2a5499528902d8000000
>MVGBAA+Helvetica-Oblique AddT42Char 
1 2428 18 <000100f500000684042f000c0039b800532b00b800002fb800022fb80005
2fb800072fb8000a2fba000100070000111239ba000400070000111239ba
00090007000011123930310113013313013301230301230301ba1b0184ca
20018db4fde6bb2afe7dbb52042ffcb4034cfcb90347fbd1033dfcc3042f
>MVGBAA+Helvetica-Oblique AddT42Char 
1 0 0 <00020042000004d005bd00030007003fb800532bb800082fb800092fb800
0810b80000d0b800002fb8000910b80003dcb80004dcb8000010b80007dc
00ba0007000000562bba0002000500562b3031331121112711211142048e
b8fce205bdfa43b8044dfbb30000>MVGBAA+Helvetica-Oblique AddT42Char 
MVGBAA+Helvetica-Oblique /CharStrings get begin
/parenleft 1 def
/parenright 2 def
/one 3 def
/three 4 def
/seven 5 def
/nine 6 def
/B 7 def
/M 8 def
/Q 9 def
/a 10 def
/c 11 def
/d 12 def
/e 13 def
/k 14 def
/l 15 def
/n 16 def
/u 17 def
/w 18 def
end
MVGBAA+Helvetica-Oblique /Encoding get
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 51 /three put
dup 55 /seven put
dup 57 /nine put
dup 66 /B put
dup 77 /M put
dup 81 /Q put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 107 /k put
dup 108 /l put
dup 110 /n put
dup 117 /u put
dup 119 /w put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVP+Helvetica-Oblique /MVGBAA+Helvetica-Oblique findfont ct_VMDictPut
/JXZOVP+Helvetica-Oblique*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one /.notdef /three 3{/.notdef}rp 
/seven /.notdef /nine 8{/.notdef}rp /B 10{/.notdef}rp /M 3{/.notdef}rp 
/Q 15{/.notdef}rp /a /.notdef /c /d /e 5{/.notdef}rp 
/k /l /.notdef /n 6{/.notdef}rp /u /.notdef /w 
136{/.notdef}rp]
JXZOVP+Helvetica-Oblique nf
JXZOVP+Helvetica-Oblique*1 [10.5336 0 0 -10.5336 0 0 ]msf
395.995 -179.133 mo
(\(Blackwelland)
[3.48654 6.9733 2.38065 5.78293 5.30893 5.3089 7.60529 5.78293 2.29636 5.3089 5.85672 5.85663 
0 ]xsh
466.615 -179.133 mo
(MacQueen)
[8.71121 5.85669 5.39319 8.23727 5.85669 5.85666 5.86722 0 ]xsh
521.395 -179.133 mo
(1973\))
[5.85669 5.85669 5.86719 5.85669 0 ]xsh
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
true set_gvm
%ADOBeginSubsetFont: WSCAAA+Cmmi10 Initial
ct_T42Dict begin
-0.031 -0.25 1.047 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /WSCAAA+Cmmi10
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000001166670
676d00000000000001d4000001d8676c7966000000000000049c00000686
6865616400000000000003ac000000366868656100000000000003e40000
0024686d747800000000000004080000001c6c6f63610000000000000424
000000106d6178700000000000000434000000206e616d65000000000000
045400000020707265700000000000000474000000266764697200000000
000000000000000000060008000e001f002d005efe5cfe73ffd300000389
038b057705a40110010400e100cf00be00a8009e009c009a009600930091
008d0085007f006d00660064005c0052004e004a00480042003d003b0037
003500330021001f080a07f4071906d306c5069c05f805ec05d705d105cf
05b605b40581057b05750550050e04e304dd0489046003fe03f403e703cd
03be038b036a03190277022f022701be0193013b011d00e900e100df00cf
00c900c700c500c300be00bc00ba00b800b600b200ae00ac00a800a600a4
00a0009e009c009a009800960093008f008d008b00890087008500830081
007d007b0079007500730071006d00660060005e00520050004c00480046
00440042003f003d003b003700350021000040161514131211100f0e0d0c
0b0a090807060504030201002cb200800043208a628a234266562d2cb22a
0000435478b0002b58173959b0002b58173c59b0002b58b00a2a59b00143
10b0002b58173c59b0002b58b00a2a592d2c2b2d2c2bb0022a2d2cb0022a
2d2cb00162b0002342b101032542204620686164b0032546206820b00443
23612064b140408a545821212121b100211c5950582121b1000425204668
b007254561b0005158211bb0054338591b6164595358232f23f91b2f23e9
59b0012b2d2cb00162b0002342b101032542204620686164b00325462068
61645358232f23f91b2f23e959b0012b2d2cb00162b0002342b101052542
3fe9b0012b2d2cb00162b0002342b1010325423ff9b0012b2d2c11121739
2d2cc12d2cb2000100432020b004438a45b003436169604460422d2c4520
b0032342b201020543764323438a23616960b004234218b00b2a2d2cb000
2342184569b0406120b000515821b0411bb04061b0005158b0461bb04859
59b00523424520b001234269b0022342b00c2a182d2c204568442d2cba00
110005ffc0422b2d2cb2110500422b2d2c2020b102038a4223b001614246
6820b0405458b0406059b00423422d2cb1020343114312173931002d2c2e
2d2cc52d2c3fb0142a2d00010000000100005f41f16b5f0f3cf500030800
00000000000000000000000000000000ffbafe0008620600000000060002
0000000000000001000005a4fe4800000800ffbafcfe0862000100000000
00000000000000000000000706000100051d00520423002107c3005403e9
006d061200500406ffba00000025009900f4018d021002bc034300010000
000700630003000000000002000c00060016000000bc005e000400010000
000100120001000000000006000d0000444548504d532b436d6d69313000
401c072903240521101c0429580e0d0f87116e0b6833580458582d0d3500
8db8033c851d2b2b000000>
[1671 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 794 4 <0001006dfe5c046a05a400430049403f00010702092422021c0e150c0108
2a01310107240c0a0a0802293807000703043e320d07031f41092a012d22
0257191f05060a01000157413b1106024510032b2b31002e2b2b30131633
3237361b01232235363b01373e02373e0133321e01151406232226353436
372623220607060f013332150e022b01030e032322263534363332161514
06c72636492e13555eb0140812b7180c1417172377452d55364531212f3d
2d26381f37080d2c19d31401060b08db5f122f55845a456d4333222e41fe
ae1da24e01b401f61b2d853e594c2f435721422d344d29212d43051d3a21
34e6871b05190ffe0c6de1eda04f41344d29212c4900>WSCAAA+Cmmi10 AddT42Char 
1 1400 6 <0002ffbafe7303ee0389003400470042403b1512020c352d070227040209
1f011c0140010c29190a0e082a013528270910072f010424000708070304
45312d150a02061269233c000501490f032b2b2b2a300322353633323637
1336353423220607142b012226353e02333216173e0133321e0115140206
23222627030607143332150e0123133236373e0235342e01232206071503
16163313071440330ee70f3c403e1d1118050c16295741466a0f38884856
7f4087e7843c611b5d05018715070913a4477a261c312419392f4b853671
0e50fe731a2d172f039a263c5899750d0f06597c664f4441525c955684fe
e6bb4437fe941e051b1a1b1201ac7549379fb4352f52376b4f07fe3c4967
>WSCAAA+Cmmi10 AddT42Char 
1 306 2 <00010021fe460456038900300026401f2723020a15180a010801042f1d11
0313251402120001861d060406013210032b2b2a2b3001343e0137363534
2e0123220e0107062b01223d013e0233321e0215123f01363b013215140f
010602070e020722025c293b150834908144876112040c19101775a95e60
8c542567801f06081910041f599535082d40201ffe6f2eb0c740663484e3
993a68420c12075cab6b82c8cc5a0118fa420613040840b1fe94a945f0cf
0400>WSCAAA+Cmmi10 AddT42Char 
1 74 1 <00020052ffe904d10389002c003b003c40351b170d03351d091301352908
0a04082a22022d0127011d2800091a070204241502121b012f2a026b0c32
11056639040006023d0f032b2b2b2b3005222e013534122433321e011517
3e0137363b01321514070e02071433323e01373332151406232226270606
2732372e013d011023220602151416019c6197529b01018d689e52024661
1a040c181302184861393b26312505191075394a621260e06edbc90104c8
78b45b5b175c9c638b0110aa6db5678961d1700c1302045eada242fe2d42
0114335f604d525b36b40c2302dd0173cdfee376597c>WSCAAA+Cmmi10 AddT42Char 
1 1056 5 <00020050ffd3060a057700520061004f40470f0111544f4b3634270a0807
462e02095e011124180c0208210129544601062e293a0900070304000953
4f49130d0206123601571d5910053d21022b2702612442050602630f032b
2b3f2b2a303322353e0233323736370136353427262322353e023321321e
0215140e01071e011514060f010e0115141633323637363b0132150e0223
222635343f01363534262b010306151417163332150e0123033332373e01
35342e012b01220607641401060b087d321a0c01190418276d1401060b08
026d4aa0865688d06250660101100204213140610f090b13140f41633a78
a9082d087357fc870519276c1507081406e3df71343d59834f8938240f1b
05190f0e092e046514081603081b05190f2249795167a26d161d7f530b0b
07b628381138437746121b3b6a446b722b21b619215561fde3110c150308
1b1d1002d77134a1504c56201333>WSCAAA+Cmmi10 AddT42Char 
1 0 0 <00020100000005000500000300070022401b2b02060006042b0009000702
048a030500058a0701000602090f032b31002b3021112111271121110100
040021fc420500fb002104befb42>WSCAAA+Cmmi10 AddT42Char 
WSCAAA+Cmmi10 /CharStrings get begin
/g4 4 def
/g6 6 def
/g2 2 def
/g1 1 def
/g5 5 def
end
WSCAAA+Cmmi10 /Encoding get
dup 33 /g4 put
dup 34 /g6 put
dup 35 /g2 put
dup 36 /g1 put
dup 37 /g5 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVQ+Cmmi10 /WSCAAA+Cmmi10 findfont ct_VMDictPut
/JXZOVQ+Cmmi10*1 
[33{/.notdef}rp /g4 /g6 /g2 /g1 /g5 218{/.notdef}rp]
JXZOVQ+Cmmi10 nf
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
100.315 -123.033 mo
(!)sh
true set_gvm
%ADOBeginSubsetFont: CLAAAA+Cmr10 Initial
ct_T42Dict begin
-0.043 -0.25 1.008 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /CLAAAA+Cmr10
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000000da6670
676d0000000000000198000001d8676c7966000000000000052c00001aba
686561640000000000000370000000366868656100000000000003a80000
0024686d747800000000000003cc000000a46c6f63610000000000000470
000000546d61787000000000000004c4000000206e616d65000000000000
04e400000020707265700000000000000504000000286764697200000000
000000000000000000060008000e001d002b0042fe5afe73ffd300000373
03a0057705a401cd00e100db00d500b000a800a600a400980093008d007f
006d006a0068005e00560052004e004a00480042003d003b003700350033
002f002107fe07ee05ec05c305b005a0057b0552050804df040803fe03e9
031902fc02f402e302aa026d025a0227021f01e901c10185017f016d0125
00ee00e100df00db00d900d500cf00c500c300c100be00ba00b800b400b2
00ae00a600a400a200a000960091008f008b0087007f007d00790073006f
006a0062005200480042003b00350021000040161514131211100f0e0d0c
0b0a090807060504030201002cb200800043208a628a234266562d2cb22a
0000435478b0002b58173959b0002b58173c59b0002b58b00a2a59b00143
10b0002b58173c59b0002b58b00a2a592d2c2b2d2c2bb0022a2d2cb0022a
2d2cb00162b0002342b101032542204620686164b0032546206820b00443
23612064b140408a545821212121b100211c5950582121b1000425204668
b007254561b0005158211bb0054338591b6164595358232f23f91b2f23e9
59b0012b2d2cb00162b0002342b101032542204620686164b00325462068
61645358232f23f91b2f23e959b0012b2d2cb00162b0002342b101052542
3fe9b0012b2d2cb00162b0002342b1010325423ff9b0012b2d2c11121739
2d2cc12d2cb2000100432020b004438a45b003436169604460422d2c4520
b0032342b201020543764323438a23616960b004234218b00b2a2d2cb000
2342184569b0406120b000515821b0411bb04061b0005158b0461bb04859
59b00523424520b001234269b0022342b00c2a182d2c204568442d2cba00
110005ffc0422b2d2cb2110500422b2d2c2020b102038a4223b001614246
6820b0405458b0406059b00423422d2cb1020343114312173931002d2c2e
2d2cc52d2c3fb0142a2d0001000000010000768278165f0f3cf500030800
00000000000000000000000000000000ffa6fe0008120600000000060002
0000000000000001000005a4fe4600000837ffa6ff8e0812000100000000
00000000000000000000002906000100023700ac04000039031b00270237
00ac063700730237003f0437002706370073061b00440400006603c70073
0471007306aa003d023700f20471003504000039031b0073083700250237
002d04710044043700440271004203270044023700ac060000420471003d
0471003d05c70025040000b20571003f0237003f04370027040000560400
00520471003d031b00c7038d004404710035038d00390321003500000025
005c01010146016901c102000240027c02cd033703a4042b04a404c6051f
056905a4060d062f069506f1074607c207fd084a089d08ed0952098109e3
0a0c0a6a0af60b700bc40c050c5a0cbc0d130d5d00010000002900600004
000000000002000c00060016000000c40062000400010000000100120001
000000000006000c0000444e4d564e582b436d7231300000401e07270322
0b1f080f04275d0e0d076a0c5d07550551234a055d5d2b0d35008db8033c
851d2b2b00>
[6843 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 6024 36 <000100c7fe0002a8060000200016400f1f0d1b100212601705000501220f
032b2b2e2e30012e010a0135341a013637343b0132161514070e02021510
01161514062b0122027b72a56934346ba66f0a13060a0464855124015c06
0b05130afe045ae90108012091930120010ae857040b07090462e0fdfef1
93fd75feae060b050d00>CLAAAA+Cmr10 AddT42Char 
1 2770 17 <00010073fe0002540600001b0016400f0e000a0202126014060005011d0f
032b2b2e2e30132235343700111001263534363b013217161a0115140a01
06070623851204015efea6080b0713060493c45b316ba4720406fe001209
040156028b028b0152050c070b0474feb4fe88c491fee7feefe75a04>CLAAAA+Cmr10 AddT42Char 
1 1152 8 <00020073011005c502f0000d001b002040191f150e00061f070000060204
18011101320a030a05011d0f032b31002b30132226353436332132161514
062301222635343633213216151406239a1116161105060f16160ffafa11
16161105060f16160f01101a0f111818110f1a018e18110f1a1a0f111800
>CLAAAA+Cmr10 AddT42Char 
1 722 5 <00020073ffd305c505a40011002a0023401c2024090c0008152400090007
02044a0e1b00054a27040006022c0f032b31002b30052224023534123e01
33321e011215140204011e0133323e0137361110272e01232206070e0215
141616031dc3fec9b065b5fe9291ffb662b0fec8fdec3cb068438169257a
7a3cb36364b43c30351615392dcf0157bd8c0112d47c7dd6fef691bdfea9
cf010a5e6f365e39b801420127ac566868564397a2575db1aa00>CLAAAA+Cmr10 AddT42Char 
1 5856 35 <0001003d0000044c038900280035402b0b010c0120270f0a0c0801041809
0a0a0009170119015b121d140528010a01020b015b24051506022a0f032b
31003f3f3f2b30333532363511342e01233525153e013332161511141633
1521353236351134262322061511141633153d465a213e41012929a15f8e
8f5a46fe2b465a3a5a77995a4548162b022f37310b4816c85870888cfe14
2b164848162b01e66481be79fe6c2b164800>CLAAAA+Cmr10 AddT42Char 
1 6520 39 <00020039ffe903520396002000280033402b1e1c020f14092626080a0008
28220f000614240009000703040d015c1e22080521015411041006022a0f
032b31002b2b3005222e0135343e0133321e021514232115141633323e01
373e013b01321506060121342e0123220601fe7dd1776dc3785e8b5a2e15
fdaf899b3f6b4f0e020b0712151dc0fe7901d32b6451747f1783db7a78d8
853f70985b1b16aaf4386439070b1a749502234d9e69d900>CLAAAA+Cmr10 AddT42Char 
1 6324 38 <00020035fe73042d0389001d002d003e403408012a21090a010b012a250e
0a0c0818012126160910070204090a000755122600051d011e010901020a
015b19051d06022f0f032b31003f3f2b2b30133532363511342623352515
3e0133321e0115140e012322271114163315031e0133323e0235342e0123
22060735465a5050012f38955479c26d79d17d95675b45a024804c476d4a
233b7956538b29fe7347182a03db381c48167f3e4183d5777cd67f79fe9a
2a18470254495f4c808d4252bf835549>CLAAAA+Cmr10 AddT42Char 
1 5612 34 <00020052ffe903f203960032003e0047403e0b010904090926170a000811
01240127043b14062c1f0236262f091007030429096a252200053b012c01
5b1b0503060e0133011401570b00190603400f032b31003f2b2b30373436
243335342e01232207321615140623222635343633321e01151114163332
363d013315140e01232226270e012322262637141633323e013d01220606
52c0010d7934623b884727333a28293ac47653a86b222422213c30512f3c
57052694544e9765a66a48426c405dc380c97a993f543b6f473d3b27293a
3a296c69478458fe332843442783832e53315d404d5b2e634f486242723f
d53d8200>CLAAAA+Cmr10 AddT42Char 
1 6694 40 <00010035000002e903890023002e40260b01150c021b270f0a0c0801040a
0a00091a1812031223010a01020b015d2005150501250f032b2b3f3f2b30
333532363511342e01233525153e0133321615140623222635343723220e
01151114331535465a213e410125217a573d6035272636270c53692cc748
162b022f37310b4816c8596f483b25373626371778b251feb0414800>CLAAAA+Cmr10 AddT42Char 
1 2134 13 <0001003d000006850389003f0047403c0f0b02110c0237012627140a0e08
01042f091e090a0a00091d011f015b182314052e01300111015b2a341506
3f010a01020b015b3b05150603410f032b31003f3f3f3f2b303335323635
11342e01233525153e013332173e0133321e011511141633152135323635
11342623220615111416331521353236351134262322061511141633153d
465a213e41012929a15fec29299e5e5d7f405b45fe2b465a3a5a769a5a46
fe2b465a3a5a77995a4548162b022f37310b4816c85870c0566a3c7b5dfe
142b164848162b01e6677ebe79fe6c2b164848162b01e66481be79fe6c2b
1648>CLAAAA+Cmr10 AddT42Char 
1 514 3 <00010027ffe902a804ec001b0037402e1401010f090a0103010122080a03
080f24190900070204070a016a151201050c01030106015b07000d06021d
0f032b31002e2b2b303711233532363533112115211114163332363d0133
15140e01232226d1aa867e3b0121fedf394a463e3b2f5c427b8ff6023535
fa92fe8748fdcf5580874e797d407d509300>CLAAAA+Cmr10 AddT42Char 
1 3724 23 <00010044ffe902e103960040004c4042302f240f0e060407290809170119
0129291d0a0c083b013f0108263909120702041a0a3b302f190f0e060b2c
09211a0265340b010501010601652c13030602420f032b2b31003f2b2b30
1711343b013217123332363534262f012e0235343e0133321737343b0132
161511142b01223534262322061514161f011e0215140e0223222707142b
01224412190c0439db61836646894571485f9858694e3b0a0f060a101912
776b5c8761418b467947335b7c44805b4b0b0c1206014e1010fed7585c42
5d111b0f3e67445a73333833050b06fef413136b8244533949101a104c74
494a6d4822565105>CLAAAA+Cmr10 AddT42Char 
1 6154 37 <00010044ffe903520396002a003040282824140e04161e091624080a0008
1e24000900070204280114014e0b111105551a040006022c0f032b31002b
2b3005222e0135343e01333216151406232226353436372623220e011514
1e0133323637343b0132161d01060601fe7cca7473cb7c78c5392929392e
2247806278303b83636188191019060a1fb81781d77979de855e6b283b3b
282435072d82c05e63b97977600c0b0706798e00>CLAAAA+Cmr10 AddT42Char 
1 898 6 <0002003f000001fe055a000f001c0025401c1a0f130c000801040a0a0009
170f02100901035c0a051405011e0f032b31003f3f2b3033353236351134
26233525111416331501343633321e011514062322263f465a3d5a01274e
41fe98442c1d361e442d2c4448162b022f4f244816fd002b164804e92d44
1e361d2c4444>CLAAAA+Cmr10 AddT42Char 
1 1024 7 <00010027ffe904100373001d002140170c1c09140a060a130f0c0b090706
3715050105011f0f032b31003f3f3f2e3021012e0123352115221514171b
01363534262335211522060701062b012201f4fed5134f4001ae7302e6cf
063b2801543f5f1afeec08190f1902f026154848310804fdbe020a101127
2d48483a39fd4817>CLAAAA+Cmr10 AddT42Char 
1 74 1 <000100acfe7301a400e100180020401806010e0f08090107010416070b00
026b11060405011a0f032b31003f2b301334373e013d0106232226353436
3332161514060706232226cb084a5221312f42422f493e5b5308050a14fe
8f090847ba671921422f3040875272cd52041200>CLAAAA+Cmr10 AddT42Char 
1 1272 9 <00020044000005a8057700120028002a402424010622080c020817010122
000908070204070102124c0d1d00055313040006022a0f032b2b2b303335
32351134233521321e011215140e02232514163b013236373e0135342627
2e012b01220e011544d3d302f38ce8a4595aa9e787fe983236cb69bd3e41
2c2c413dbc6bcb25291a48410465414879caff008682f5c572892c155b51
56d58f95e058575d061d1e00>CLAAAA+Cmr10 AddT42Char 
1 4244 26 <0001003d0000044c058d0028003340290c0120270f0a0408010418090b0c
0009170119015b121d140528010a01020b015b24051506022a0f032b3100
3f3f3f2b30333532363511342e01233525113e0133321615111416331521
353236351134262322061511141633153d465a213e4101302b9a5d8e8f5a
46fe2b465a3a5a77995a4548162b043337310b4816fd405567888cfe142b
164848162b01e66481be79fe6c2b1648>CLAAAA+Cmr10 AddT42Char 
1 5062 31 <0001003f0000020e058d0010001a40120b0c000910010a01025c0b051405
01120f032b31003f3f30333532363511342e0123352511141633153f465a
213e4101305a4548162b043337310b4816fafc2b1648>CLAAAA+Cmr10 AddT42Char 
1 0 0 <00020100000005000500000300070022401b2a02060006042a0009000702
046c030500056c0701000602090f032b31002b3021112111271121110100
040021fc420500fb002104befb42>CLAAAA+Cmr10 AddT42Char 
CLAAAA+Cmr10 /CharStrings get begin
/g36 36 def
/g17 17 def
/g8 8 def
/g5 5 def
/g35 35 def
/g39 39 def
/g38 38 def
/g34 34 def
/g40 40 def
/g13 13 def
/g3 3 def
/g23 23 def
/g37 37 def
/g6 6 def
/g7 7 def
/g1 1 def
/g9 9 def
/g26 26 def
/g31 31 def
end
CLAAAA+Cmr10 /Encoding get
dup 33 /g36 put
dup 34 /g17 put
dup 35 /g8 put
dup 36 /g5 put
dup 37 /g35 put
dup 38 /g39 put
dup 39 /g38 put
dup 40 /g34 put
dup 41 /g40 put
dup 42 /g13 put
dup 43 /g3 put
dup 44 /g23 put
dup 45 /g37 put
dup 46 /g6 put
dup 47 /g7 put
dup 48 /g1 put
dup 49 /g9 put
dup 50 /g26 put
dup 51 /g31 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVR+Cmr10 /CLAAAA+Cmr10 findfont ct_VMDictPut
/JXZOVR+Cmr10*1 
[33{/.notdef}rp /g36 /g17 /g8 /g5 /g35 /g39 /g38 
/g34 /g40 /g13 /g3 /g23 /g37 /g6 /g7 
/g1 /g9 /g26 /g31 204{/.notdef}rp]
JXZOVR+Cmr10 nf
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
108.235 -123.033 mo
(!)sh
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
113.515 -123.033 mo
(")sh
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
120.115 -123.033 mo
(")sh
128.695 -123.033 mo
(#)sh
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
142.555 -123.033 mo
(#)sh
true set_gvm
%ADOBeginSubsetFont: YNSBAA+Cmmi7 Initial
ct_T42Dict begin
0 -0.25 1.168 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /YNSBAA+Cmmi7
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000010a6670
676d00000000000001c8000001d8676c7966000000000000048000000370
6865616400000000000003a0000000366868656100000000000003d80000
0024686d747800000000000003fc000000106c6f6361000000000000040c
0000000a6d6178700000000000000418000000206e616d65000000000000
043800000020707265700000000000000458000000266764697200000000
000000000000000000060008000e001f002d0058fe5efe73ffd700000387
0389057705a00168012900f400df00cd00c700b600b200ac00aa00a800a6
009e00960091008700770075006800640062005a005600540052004c004a
004600440042002108c3088d07db074e072b071406870675066006460635
0617060805fc05d705ba058f0568053f04e904cb046d0454041f040403ec
03d303b0036d02b80277026f01d101a4016d014800f400f200e700df00db
00d900d700d500d300d100cf00cd00cb00c900c700c300be00bc00ba00b8
00b400b200b000ae00ac00aa00a400a200a0009e009c0098008b00850083
0081007f007d007900730071006400600058005600520050004e004c004a
00420021000040161514131211100f0e0d0c0b0a09080706050403020100
2cb200800043208a628a234266562d2cb22a0000435478b0002b58173959
b0002b58173c59b0002b58b00a2a59b0014310b0002b58173c59b0002b58
b00a2a592d2c2b2d2c2bb0022a2d2cb0022a2d2cb00162b0002342b10103
2542204620686164b0032546206820b0044323612064b140408a54582121
2121b100211c5950582121b1000425204668b007254561b0005158211bb0
054338591b6164595358232f23f91b2f23e959b0012b2d2cb00162b00023
42b101032542204620686164b0032546206861645358232f23f91b2f23e9
59b0012b2d2cb00162b0002342b1010525423fe9b0012b2d2cb00162b000
2342b1010325423ff9b0012b2d2c111217392d2cc12d2cb2000100432020
b004438a45b003436169604460422d2c4520b0032342b201020543764323
438a23616960b004234218b00b2a2d2cb0002342184569b0406120b00051
5821b0411bb04061b0005158b0461bb0485959b00523424520b001234269
b0022342b00c2a182d2c204568442d2cba00110005ffc0422b2d2cb21105
00422b2d2c2020b102038a4223b0016142466820b0405458b0406059b004
23422d2cb1020343114312173931002d2c2e2d2cc52d2c3fb0142a2d0001
00000001000033a37a575f0f3cf500030800000000000000000000000000
00000000fffafe00095e06000000000600020000000000000001000005a2
fe4a0000091bfffafca6095e000100000000000000000000000000000004
0600010005f0007b08b60093033b005c0000002500a5014601b800000001
0000000400650003000000000002000c00060016000000e0007000040001
0000000100120001000000000006000c000055584d4247542b436d6d6937
0000401c052b05260521101c042b5c0e0d0d800d6d0a66345c045c5c2d0d
31008db8033c851d2b2b000000>
[881 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 330 2 <0001009300000921057700510047403c1b014c3b2f034335024501062600
091b07010446401f0c170c514e4c494645403d3b3834312d2b2826241b1a
16130f0d0906192e21030106015310032b31003f3f2e2e2b303322263537
3637323637013e0137342726232635373637213216171301363321161507
060722070607010615141716331615070607212226353736373237363709
0106232227030106151416331615070607ac081109051356771201070203
011127701b08021701770d1501c8030f161d016619080215772b230efeec
041025721b080514fddb090f080514762b230d0122fca212232306d9feed
045a401b090513150c210c04364b0419051106100508071a200c05100dfb
71048f1d0718210d050a0a34fbae14081005080718210e04150c210c040a
0a340489fafa1d1d04f1fbb71a09331d0817210e0400>YNSBAA+Cmmi7 AddT42Char 
1 652 3 <0002005cffec02d3054e0031003d003940322b261b110d02060720091335
3b0006072b150a0008202b2f09000703041100021229011e05021b19025d
38321505013f0f032b2b2b2b303734371336353423220607062b0122263d
013e0233321e011514070306151433323637363b0132161514070e022322
26133436333216151406232226e10fac162f526f1a031220090e14527b4a
355a380fac162f5171170710200a0d0212527b4a5176ee4b2e21314b2e21
319a2b1e01bb3b29449f61131207084c8b5c2a50342b1ffe46313344a25e
120f090404498d5d5f048e2d482f232e472f>YNSBAA+Cmmi7 AddT42Char 
1 74 1 <0002007bffec0568038700300043003d403617130a033c1b090f013c2b04
0a04082a200231012d011b2b27091a07020423130212170137342a036a09
381105664100000602450f032b2b2b2b301334122433321e021517363736
3b0132161d010e0207141e0133323e013733321615140e01232226270e01
232226260532363734262f01342e0123220e021514167bae01149053916c
3d0489340410210b0b1749633f08201e2930250921090d405d255070196a
f18068ac63017d78ea6201010a2c6853619b69376e01529101079d3a6990
5273b3d2110e0b065aa69a47306761273e010e0a2641285f4f525c5aa3bc
63530c0f08d752a6716cb0ca585e7d00>YNSBAA+Cmmi7 AddT42Char 
1 0 0 <00020100000005000500000300070022401b2c02060006042c0009000702
048403050005840701000602090f032b31002b3021112111271121110100
040021fc420500fb002104befb42>YNSBAA+Cmmi7 AddT42Char 
YNSBAA+Cmmi7 /CharStrings get begin
/g2 2 def
/g3 3 def
/g1 1 def
end
YNSBAA+Cmmi7 /Encoding get
dup 33 /g2 put
dup 34 /g3 put
dup 35 /g1 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVS+Cmmi7 /YNSBAA+Cmmi7 findfont ct_VMDictPut
/JXZOVS+Cmmi7*1 
[33{/.notdef}rp /g2 /g3 /g1 220{/.notdef}rp]
JXZOVS+Cmmi7 nf
JXZOVS+Cmmi7*1 [9.2598 0 0 -9.2598 0 0 ]msf
155.755 -138.873 mo
(!)sh
true set_gvm
%ADOBeginSubsetFont: SJNAAA+Cmex10 Initial
ct_T42Dict begin
-0.023 -2.957 1.453 0.77
 256 array 0 1 255 {1 index exch /.notdef put} for  /SJNAAA+Cmex10
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000000926670
676d0000000000000150000001d8676c79660000000000000400000000d2
686561640000000000000328000000366868656100000000000003600000
0024686d74780000000000000384000000086c6f6361000000000000038c
000000066d6178700000000000000394000000206e616d65000000000000
03b4000000207072657000000000000003d40000002c6764697200000000
000000000000000000060004000a001800220027fff2000000000014016d
015c01330123011000f600f000c900b600b200a8009a009600850075006f
006d00640062005800520050003500210b980b8b0aa60952080e07fe07fc
078b0773074805c30596048d047b0471043903df03b80348025c01a8016d
015c01420133012300f600ec00cf00b200a800a400960085007500620058
00520021000040161514131211100f0e0d0c0b0a09080706050403020100
2cb200800043208a628a234266562d2cb22a0000435478b0002b58173959
b0002b58173c59b0002b58b00a2a59b0014310b0002b58173c59b0002b58
b00a2a592d2c2b2d2c2bb0022a2d2cb0022a2d2cb00162b0002342b10103
2542204620686164b0032546206820b0044323612064b140408a54582121
2121b100211c5950582121b1000425204668b007254561b0005158211bb0
054338591b6164595358232f23f91b2f23e959b0012b2d2cb00162b00023
42b101032542204620686164b0032546206861645358232f23f91b2f23e9
59b0012b2d2cb00162b0002342b1010525423fe9b0012b2d2cb00162b000
2342b1010325423ff9b0012b2d2c111217392d2cc12d2cb2000100432020
b004438a45b003436169604460422d2c4520b0032342b201020543764323
438a23616960b004234218b00b2a2d2cb0002342184569b0406120b00051
5821b0411bb04061b0005158b0461bb0485959b00523424520b001234269
b0022342b00c2a182d2c204568442d2cba00110005ffc0422b2d2cb21105
00422b2d2c2020b102038a4223b0016142466820b0405458b0406059b004
23422d2cb1020343114312173931002d2c2e2d2cc52d2c3fb0142a2d0001
000000010000873429485f0f3cf500030800000000000000000000000000
00000000ffcfe8520ba2062d00000006000200000000000000010000062d
e83e00000c17ffcffce60ba2000100000000000000000000000000000002
060001000a37007300000025006900000001000000020064000500000000
0002000c00060016000000bc005e00040001000000010012000100000000
0006000d0000524c4d5841542b436d657831300040220220031e021c0318
011702160b13071e420a0d04470442023f1d3e044242220d30008db8033c
851d2b2b00>
[211 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 74 1 <00010073f4cd09c5000000190037403015090206190807020818110e0310
011901000a0602040f0907010412191102141609390c1400053916040006
021b0f032b2b2b2b30133520351134213521152015111421152135203511
2111142115730150feb00952feb00150fc1e0150fbd10150f4cd6ecd08bd
cc6f6fccf743cd6e6ecd0989f677cd6e>SJNAAA+Cmex10 AddT42Char 
1 0 0 <00020100000005000500000300070022401b210206000604210007000702
044803050005480701000602090f032b31002b3021112111271121110100
040021fc420500fb002104befb42>SJNAAA+Cmex10 AddT42Char 
SJNAAA+Cmex10 /CharStrings get begin
/g1 1 def
end
SJNAAA+Cmex10 /Encoding get
dup 33 /g1 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVT+Cmex10 /SJNAAA+Cmex10 findfont ct_VMDictPut
/JXZOVT+Cmex10*1 
[33{/.notdef}rp /g1 222{/.notdef}rp]
JXZOVT+Cmex10 nf
JXZOVT+Cmex10*1 [13.2198 0 0 -13.2198 0 0 ]msf
152.455 -134.913 mo
(!)sh
JXZOVS+Cmmi7*1 [9.2598 0 0 -9.2598 0 0 ]msf
152.455 -107.193 mo
(")sh
true set_gvm
%ADOBeginSubsetFont: YFNAAA+Cmr7 Initial
ct_T42Dict begin
-0.027 -0.25 1.121 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /YFNAAA+Cmr7
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000000ea6670
676d00000000000001a8000001d8676c79660000000000000460000001a4
686561640000000000000380000000366868656100000000000003b80000
0024686d747800000000000003dc000000106c6f636100000000000003ec
0000000a6d61787000000000000003f8000000206e616d65000000000000
041800000020707265700000000000000438000000286764697200000000
000000000000000000060008000e001e002c0049fe5cfe73ffd700000373
039c057705a001f400f400e500e300cd00ba00b600b000aa00a800a2009a
0093009100870083007b006a0064005a00560052004c004a004600440042
003d0039002108d908bc06850660063d06230608060405e3058705640477
046a0464044c036d03500344032f02f202b402a00266025e025a022101d1
01aa01a0015c00f400ec00e500e300e100db00d500d300d100cf00cd00cb
00c500c300be00bc00ba00b600b400b200ae00ac00aa00a200a0009c009a
00980093008f0089008700850083007d007b0075006400560052004e0042
0021000040161514131211100f0e0d0c0b0a090807060504030201002cb2
00800043208a628a234266562d2cb22a0000435478b0002b58173959b000
2b58173c59b0002b58b00a2a59b0014310b0002b58173c59b0002b58b00a
2a592d2c2b2d2c2bb0022a2d2cb0022a2d2cb00162b0002342b101032542
204620686164b0032546206820b0044323612064b140408a545821212121
b100211c5950582121b1000425204668b007254561b0005158211bb00543
38591b6164595358232f23f91b2f23e959b0012b2d2cb00162b0002342b1
01032542204620686164b0032546206861645358232f23f91b2f23e959b0
012b2d2cb00162b0002342b1010525423fe9b0012b2d2cb00162b0002342
b1010325423ff9b0012b2d2c111217392d2cc12d2cb2000100432020b004
438a45b003436169604460422d2c4520b0032342b201020543764323438a
23616960b004234218b00b2a2d2cb0002342184569b0406120b000515821
b0411bb04061b0005158b0461bb0485959b00523424520b001234269b002
2342b00c2a182d2c204568442d2cba00110005ffc0422b2d2cb211050042
2b2d2c2020b102038a4223b0016142466820b0405458b0406059b0042342
2d2cb1020343114312173931002d2c2e2d2cc52d2c3fb0142a2d00010000
00010000d759fcf25f0f3cf5000308000000000000000000000000000000
0000ffc1fdfe08fa06000000000600020000000000000001000005a2fe48
00000933ffc1ff9e08fa0001000000000000000000000000000000040600
01000704008f0704008f048d00db00000025006100a200d2000000010000
0004005d0004000000000002000c00060016000000d00068000400010000
000100120001000000000006000b000055584d4247542b436d7237000000
401e072804230b20080f0428550e0d0273067213600a55244d0555552c0d
31008db8033c851d2b2b00>
[421 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 74 1 <0002008f00ec06730312000d00190020401920140e000620070000060204
16011101340a030a05011b0f032b31002b30372e0135343637211e011514
0607012e01353437211615140607be141b1b140586141b1b14fa7a141b2f
05862f1b14ec031b15131b03031b13151b0301c2031b152a07072a151b03
>YFNAAA+Cmr7 AddT42Char 
1 324 3 <000100db000003cd055000110025401e0b01040123070611060104000911
070103120b0a025e0d04010501130f032b2b3f2b30333520351106233532
363733161711142115e9011b73b67ad54b251305011b523d042337523b48
0514fb583d52>YFNAAA+Cmr7 AddT42Char 
1 194 2 <0001008fff0a067304f4001b0026401e0f0115012007010a060104190c12
050212160100016f0e080a05011d0f032b2b2e2e2b300511212e01353437
21113e01333217112116151406072111062322260350fd6e141b2f029203
1b152a0702902f1b14fd70072a151bc70294031b152a070294141b2ffd6c
072a151b03fd6c2f1b00>YFNAAA+Cmr7 AddT42Char 
1 0 0 <00020100000005000500000300070022401b2b02060006042b0009000702
047403050005740701000602090f032b31002b3021112111271121110100
040021fc420500fb002104befb42>YFNAAA+Cmr7 AddT42Char 
YFNAAA+Cmr7 /CharStrings get begin
/g1 1 def
/g3 3 def
/g2 2 def
end
YFNAAA+Cmr7 /Encoding get
dup 33 /g1 put
dup 34 /g3 put
dup 35 /g2 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVU+Cmr7 /YFNAAA+Cmr7 findfont ct_VMDictPut
/JXZOVU+Cmr7*1 
[33{/.notdef}rp /g1 /g3 /g2 220{/.notdef}rp]
JXZOVU+Cmr7 nf
JXZOVU+Cmr7*1 [9.2598 0 0 -9.2598 0 0 ]msf
156.415 -107.193 mo
(!)sh
164.335 -107.193 mo
(")sh
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
171.595 -123.033 mo
(")sh
JXZOVS+Cmmi7*1 [9.2598 0 0 -9.2598 0 0 ]msf
178.195 -128.313 mo
(#)sh
true set_gvm
%ADOBeginSubsetFont: YMCBAA+Cmmi5 Initial
ct_T42Dict begin
0 -0.25 1.348 0.75
 256 array 0 1 255 {1 index exch /.notdef put} for  /YMCBAA+Cmmi5
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000001146670
676d00000000000001d0000001d8676c7966000000000000047c0000012e
6865616400000000000003a8000000366868656100000000000003e00000
0024686d74780000000000000404000000086c6f6361000000000000040c
000000066d6178700000000000000414000000206e616d65000000000000
043400000020707265700000000000000454000000266764697200000000
000000000000000000060008000e001d002b005ffe5cfe73ffd300000389
038b057705a4014c010200f200ec00db00c900c700be00b800b400b000a8
00a2009c0085008300790075007300680062005e005c005600540052004e
004c002109cb096208e307fa07d107b0075c0727071706fe06e906cd06bc
06b806a8067b0660064e062f061b05d3057d0558053504fa04dd0489046f
04140412040603e3032302d902be020601d1018f01710108010200fe00f6
00f200f000ee00ec00e900e700e500e300e100df00dd00db00d700d500cf
00cd00cb00c900c700c500c300c100be00bc00ba00b800b600b400b200b0
00ae00ac00aa009c00930091008b00850083007f00770073006800660062
0060005e005c00540052004c002140161514131211100f0e0d0c0b0a0908
07060504030201002cb200800043208a628a234266562d2cb22a00004354
78b0002b58173959b0002b58173c59b0002b58b00a2a59b0014310b0002b
58173c59b0002b58b00a2a592d2c2b2d2c2bb0022a2d2cb0022a2d2cb001
62b0002342b101032542204620686164b0032546206820b0044323612064
b140408a545821212121b100211c5950582121b1000425204668b0072545
61b0005158211bb0054338591b6164595358232f23f91b2f23e959b0012b
2d2cb00162b0002342b101032542204620686164b0032546206861645358
232f23f91b2f23e959b0012b2d2cb00162b0002342b1010525423fe9b001
2b2d2cb00162b0002342b1010325423ff9b0012b2d2c111217392d2cc12d
2cb2000100432020b004438a45b003436169604460422d2c4520b0032342
b201020543764323438a23616960b004234218b00b2a2d2cb00023421845
69b0406120b000515821b0411bb04061b0005158b0461bb0485959b00523
424520b001234269b0022342b00c2a182d2c204568442d2cba00110005ff
c0422b2d2cb2110500422b2d2c2020b102038a4223b0016142466820b040
5458b0406059b00423422d2cb1020343114312173931002d2c2e2d2cc52d
2c3fb0142a2d0001000000010000945e19995f0f3cf50003080000000000
0000000000000000000000000000fe000acb060000000006000200000000
00000001000005a4fe4800000ae3004efc080acb00010000000000000000
000000000000000206000100044400b60000002500970000000100000002
00730003000000000002000c00060016000000c000600004000100000001
00120001000000000006000c0000524c4d5841542b436d6d69350000401c
03290425032205200e1a05295d0e0d1d71096a395d035d5d2b0d35008db8
033c851d2b2b000000>
[303 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 74 1 <000200b6ffe9038f0556002f003b003a4033282419110d0206071e093912
330c00080729140a00081e292d09000703040f00021226011c0502191702
5e36301505013d0f032b2b2b2b3025343713363534232206070607232635
34373e013332161514070306151433323637363733161514070e03232226
133436333216151406232226015e11b41239537d1a03152b19021fb7745a
8b10b4133a537e1803142b1a020d40526f3b598df052332735523325379e
272201bb2b27499a610f040716020a78b95d572525fe46282a4a9d5f0e05
0914020a3771533760048c334e3327334e33>YMCBAA+Cmmi5 AddT42Char 
1 0 0 <00020100000005000500000300070022401b2a02060006042a0009000702
048903050005890701000602090f032b31002b3021112111271121110100
040021fc420500fb002104befb42>YMCBAA+Cmmi5 AddT42Char 
YMCBAA+Cmmi5 /CharStrings get begin
/g1 1 def
end
YMCBAA+Cmmi5 /Encoding get
dup 33 /g1 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVV+Cmmi5 /YMCBAA+Cmmi5 findfont ct_VMDictPut
/JXZOVV+Cmmi5*1 
[33{/.notdef}rp /g1 222{/.notdef}rp]
JXZOVV+Cmmi5 nf
JXZOVV+Cmmi5*1 [6.5736 0 0 -6.5736 0 0 ]msf
185.455 -126.993 mo
(!)sh
true set_gvm
%ADOBeginSubsetFont: CNHBAA+Cmsy7 Initial
ct_T42Dict begin
-0.012 -0.949 1.254 0.785
 256 array 0 1 255 {1 index exch /.notdef put} for  /CNHBAA+Cmsy7
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000000b86670
676d0000000000000174000001d8676c7966000000000000042000000092
68656164000000000000034c000000366868656100000000000003840000
0024686d747800000000000003a8000000086c6f636100000000000003b0
000000066d61787000000000000003b8000000206e616d65000000000000
03d8000000207072657000000000000003f8000000286764697200000000
000000000000000000060006000c001a00260036fffe0000ffbc00000000
0000013d01290125011000f400d300cd00b400ac00a600a0008f008d0087
0085007b006d00640060005400520050004e00460042002108c5082d07db
0714070c06f206e506d3069a06850664065405e505e305b6056804ec04e7
046a044a0437036d0344020201f601930154013b012700f400db00cd00c7
00c500c300be00b000a600a0008f008d006d00660064005e005c00580052
0050004e004c00460042002140161514131211100f0e0d0c0b0a09080706
0504030201002cb200800043208a628a234266562d2cb22a0000435478b0
002b58173959b0002b58173c59b0002b58b00a2a59b0014310b0002b5817
3c59b0002b58b00a2a592d2c2b2d2c2bb0022a2d2cb0022a2d2cb00162b0
002342b101032542204620686164b0032546206820b0044323612064b140
408a545821212121b100211c5950582121b1000425204668b007254561b0
005158211bb0054338591b6164595358232f23f91b2f23e959b0012b2d2c
b00162b0002342b101032542204620686164b0032546206861645358232f
23f91b2f23e959b0012b2d2cb00162b0002342b1010525423fe9b0012b2d
2cb00162b0002342b1010325423ff9b0012b2d2c111217392d2cc12d2cb2
000100432020b004438a45b003436169604460422d2c4520b0032342b201
020543764323438a23616960b004234218b00b2a2d2cb0002342184569b0
406120b000515821b0411bb04061b0005158b0461bb0485959b005234245
20b001234269b0022342b00c2a182d2c204568442d2cba00110005ffc042
2b2d2cb2110500422b2d2c2020b102038a4223b0016142466820b0405458
b0406059b00423422d2cb1020343114312173931002d2c2e2d2cc52d2c3f
b0142a2d00010000000100009f95d35f5f0f3cf500030800000000000000
00000000000000000000ffe1f8640a0e064a000000060002000000000000
0001000005a4f85000000abcffe1fa390a0e000100000000000000000000
00000000000206000100072300dd0000002500490000000100000002008b
0005000000000002000c00060016000000f6007b00040001000000010012
0001000000000006000c0000524c4d5841542b436d7379370000401e0324
0422031d031a0d17051d510c0d08570551054b2447045151260d51008db8
033c851d2b2b00>
[147 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 74 1 <000100dd01cd06460231000b001740101d0600000601043508030005010d
0f032b31002b30012e01353437211615140607010c141b2f050b2f1b1401
cd031b152a07072a151b0300>CNHBAA+Cmsy7 AddT42Char 
1 0 0 <00020100000005000500000300070022401b250206000604250007000702
045b030500055b0701000602090f032b31002b3021112111271121110100
040021fc420500fb002104befb42>CNHBAA+Cmsy7 AddT42Char 
CNHBAA+Cmsy7 /CharStrings get begin
/g1 1 def
end
CNHBAA+Cmsy7 /Encoding get
dup 33 /g1 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVW+Cmsy7 /CNHBAA+Cmsy7 findfont ct_VMDictPut
/JXZOVW+Cmsy7*1 
[33{/.notdef}rp /g1 222{/.notdef}rp]
JXZOVW+Cmsy7 nf
JXZOVW+Cmsy7*1 [9.2598 0 0 -9.2598 0 0 ]msf
189.415 -128.313 mo
(!)sh
JXZOVU+Cmr7*1 [9.2598 0 0 -9.2598 0 0 ]msf
197.335 -128.313 mo
(")sh
JXZOVS+Cmmi7*1 [9.2598 0 0 -9.2598 0 0 ]msf
178.195 -119.073 mo
(")sh
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
100.315 -154.053 mo
($)sh
110.875 -154.053 mo
(%)sh
118.135 -154.053 mo
(&)sh
128.035 -154.053 mo
(')sh
135.955 -154.053 mo
(\()sh
141.895 -154.053 mo
(\))sh
147.175 -154.053 mo
(\()sh
153.775 -154.053 mo
(*)sh
164.995 -154.053 mo
(&)sh
170.935 -154.053 mo
(+)sh
175.555 -154.053 mo
(&)sh
181.495 -154.053 mo
(\))sh
191.395 -154.053 mo
(')sh
198.655 -154.053 mo
(&)sh
204.595 -154.053 mo
(\))sh
209.875 -154.053 mo
(,)sh
215.155 -154.053 mo
(')sh
223.075 -154.053 mo
(&)sh
228.355 -154.053 mo
(-)sh
234.295 -154.053 mo
(+)sh
239.575 -154.053 mo
(.)sh
242.875 -154.053 mo
(/)sh
249.475 -154.053 mo
(&)sh
255.415 -154.053 mo
(0)sh
263.335 -154.053 mo
(1)sh
273.895 -154.053 mo
(.)sh
277.195 -154.053 mo
(\))sh
282.475 -154.053 mo
(.)sh
286.435 -154.053 mo
(-)sh
291.715 -154.053 mo
(2)sh
298.975 -154.053 mo
(3)sh
302.275 -154.053 mo
(&)sh
308.215 -154.053 mo
(+)sh
318.115 -154.053 mo
(2)sh
325.375 -154.053 mo
(\()sh
331.975 -154.053 mo
(,)sh
341.215 -154.053 mo
(')sh
348.475 -154.053 mo
(\()sh
355.075 -154.053 mo
(\))sh
360.355 -154.053 mo
(\()sh
366.955 -154.053 mo
(*)sh
378.175 -154.053 mo
(&)sh
384.115 -154.053 mo
(+)sh
388.735 -154.053 mo
(&)sh
394.675 -154.053 mo
(\))sh
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
404.575 -154.053 mo
($)sh
true set_gvm
%ADOBeginSubsetFont: QPOBAA+Cmsy10 Initial
ct_T42Dict begin
-0.027 -0.957 1.121 0.777
 256 array 0 1 255 {1 index exch /.notdef put} for  /QPOBAA+Cmsy10
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000000ac6670
676d0000000000000168000001d8676c79660000000000000410000000f2
686561640000000000000340000000366868656100000000000003780000
0024686d7478000000000000039c000000086c6f636100000000000003a4
000000066d61787000000000000003ac000000206e616d65000000000000
03cc000000207072657000000000000003ec000000226764697200000000
000000000000000000060006000c001800240032fffe0000ffbc00000000
00000127010e00f800e100c500a800a6009a00930091008500790073006d
0060005c0052004e00480042003b003900350021080e07730719067f063f
0629060e05ec05db05c705540552055004e30473046f03fe03dd03d30319
02f401dd01c701750125010c00e100cf00b600b200ae00a8009e00910083
007d007900730062005a00540052004e004a00480046003b003900350021
40161514131211100f0e0d0c0b0a090807060504030201002cb200800043
208a628a234266562d2cb22a0000435478b0002b58173959b0002b58173c
59b0002b58b00a2a59b0014310b0002b58173c59b0002b58b00a2a592d2c
2b2d2c2bb0022a2d2cb0022a2d2cb00162b0002342b10103254220462068
6164b0032546206820b0044323612064b140408a545821212121b100211c
5950582121b1000425204668b007254561b0005158211bb0054338591b61
64595358232f23f91b2f23e959b0012b2d2cb00162b0002342b101032542
204620686164b0032546206861645358232f23f91b2f23e959b0012b2d2c
b00162b0002342b1010525423fe9b0012b2d2cb00162b0002342b1010325
423ff9b0012b2d2c111217392d2cc12d2cb2000100432020b004438a45b0
03436169604460422d2c4520b0032342b201020543764323438a23616960
b004234218b00b2a2d2cb0002342184569b0406120b000515821b0411bb0
4061b0005158b0461bb0485959b00523424520b001234269b0022342b00c
2a182d2c204568442d2cba00110005ffc0422b2d2cb2110500422b2d2c20
20b102038a4223b0016142466820b0405458b0406059b00423422d2cb102
0343114312173931002d2c2e2d2cc52d2c3fb0142a2d0001000000010000
9c61a9335f0f3cf50003080000000000000000000000000000000000ffc5
f85208fc063b0000000600020000000000000001000005a6f83e0000099a
ffc5fae508fc000100000000000000000000000000000002060001000554
00aa0000002500790000000100000002008d0005000000000002000c0006
00160000010c0086000400010000000100120001000000000006000d0000
524c4d5841542b436d737931300040180522051c0e17031c4d0c0d05520b
4d2240034d4d240d51008db8033c851d2b2b000000>
[243 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 74 1 <000100aaffae04aa0452002a002840221c131900061c202700060a1c0207
00080304241606031228014c200e0805012c0f032b2b2b30251633213216
1514062321222402353412243321321615140623212206070e0115213216
1514062321141601b29ad3016610151510fe94a3fee0acac0120a3016c10
151510fe9a64bd4c4b69038710151510fc7969818118110f1a9c0111a5a5
01119c1a0f1118423f3fbd5a1a0f0f1a59be>QPOBAA+Cmsy10 AddT42Char 
1 0 0 <00020100000005000500000300070022401b230206000604230007000702
045503050005550701000602090f032b31002b3021112111271121110100
040021fc420500fb002104befb42>QPOBAA+Cmsy10 AddT42Char 
QPOBAA+Cmsy10 /CharStrings get begin
/g1 1 def
end
QPOBAA+Cmsy10 /Encoding get
dup 33 /g1 put
pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVX+Cmsy10 /QPOBAA+Cmsy10 findfont ct_VMDictPut
/JXZOVX+Cmsy10*1 
[33{/.notdef}rp /g1 222{/.notdef}rp]
JXZOVX+Cmsy10 nf
JXZOVX+Cmsy10*1 [13.2198 0 0 -13.2198 0 0 ]msf
416.455 -154.053 mo
(!)sh
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
428.995 -154.053 mo
(%)sh
JXZOVU+Cmr7*1 [9.2598 0 0 -9.2598 0 0 ]msf
438.895 -158.673 mo
(#)sh
JXZOVS+Cmmi7*1 [9.2598 0 0 -9.2598 0 0 ]msf
446.815 -158.673 mo
(!)sh
463.203 -94.2567 mo
459.956 -94.2567 457.263 -91.5639 457.263 -88.3167 cv
457.263 -85.0695 459.956 -82.3767 463.203 -82.3767 cv
466.45 -82.3767 469.143 -85.0695 469.143 -88.3167 cv
469.143 -91.5639 466.45 -94.2567 463.203 -94.2567 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.59 0 .19 colr
ef
.4686 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
463.203 -94.2567 mo
459.956 -94.2567 457.263 -91.5639 457.263 -88.3167 cv
457.263 -85.0695 459.956 -82.3767 463.203 -82.3767 cv
466.45 -82.3767 469.143 -85.0695 469.143 -88.3167 cv
469.143 -91.5639 466.45 -94.2567 463.203 -94.2567 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
486.963 -94.2567 mo
483.716 -94.2567 481.023 -91.5639 481.023 -88.3167 cv
481.023 -85.0695 483.716 -82.3767 486.963 -82.3767 cv
490.21 -82.3767 492.903 -85.0695 492.903 -88.3167 cv
492.903 -91.5639 490.21 -94.2567 486.963 -94.2567 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
486.963 -94.2567 mo
483.716 -94.2567 481.023 -91.5639 481.023 -88.3167 cv
481.023 -85.0695 483.716 -82.3767 486.963 -82.3767 cv
490.21 -82.3767 492.903 -85.0695 492.903 -88.3167 cv
492.903 -91.5639 490.21 -94.2567 486.963 -94.2567 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
447.363 -94.2567 mo
444.116 -94.2567 441.423 -91.5639 441.423 -88.3167 cv
441.423 -85.0695 444.116 -82.3767 447.363 -82.3767 cv
450.61 -82.3767 453.303 -85.0695 453.303 -88.3167 cv
453.303 -91.5639 450.61 -94.2567 447.363 -94.2567 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
447.363 -94.2567 mo
444.116 -94.2567 441.423 -91.5639 441.423 -88.3167 cv
441.423 -85.0695 444.116 -82.3767 447.363 -82.3767 cv
450.61 -82.3767 453.303 -85.0695 453.303 -88.3167 cv
453.303 -91.5639 450.61 -94.2567 447.363 -94.2567 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
451.323 -106.137 mo
448.076 -106.137 445.383 -103.444 445.383 -100.197 cv
445.383 -96.9495 448.076 -94.2567 451.323 -94.2567 cv
454.57 -94.2567 457.263 -96.9495 457.263 -100.197 cv
457.263 -103.444 454.57 -106.137 451.323 -106.137 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
451.323 -106.137 mo
448.076 -106.137 445.383 -103.444 445.383 -100.197 cv
445.383 -96.9495 448.076 -94.2567 451.323 -94.2567 cv
454.57 -94.2567 457.263 -96.9495 457.263 -100.197 cv
457.263 -103.444 454.57 -106.137 451.323 -106.137 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
431.523 -94.2567 mo
428.276 -94.2567 425.583 -91.5639 425.583 -88.3167 cv
425.583 -85.0695 428.276 -82.3767 431.523 -82.3767 cv
434.77 -82.3767 437.463 -85.0695 437.463 -88.3167 cv
437.463 -91.5639 434.77 -94.2567 431.523 -94.2567 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.59 0 .19 colr
ef
431.523 -94.2567 mo
428.276 -94.2567 425.583 -91.5639 425.583 -88.3167 cv
425.583 -85.0695 428.276 -82.3767 431.523 -82.3767 cv
434.77 -82.3767 437.463 -85.0695 437.463 -88.3167 cv
437.463 -91.5639 434.77 -94.2567 431.523 -94.2567 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
439.443 -106.137 mo
436.196 -106.137 433.503 -103.444 433.503 -100.197 cv
433.503 -96.9495 436.196 -94.2567 439.443 -94.2567 cv
442.69 -94.2567 445.383 -96.9495 445.383 -100.197 cv
445.383 -103.444 442.69 -106.137 439.443 -106.137 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
439.443 -106.137 mo
436.196 -106.137 433.503 -103.444 433.503 -100.197 cv
433.503 -96.9495 436.196 -94.2567 439.443 -94.2567 cv
442.69 -94.2567 445.383 -96.9495 445.383 -100.197 cv
445.383 -103.444 442.69 -106.137 439.443 -106.137 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
1.4982 lw
0 lj
108.783 8.70334 mo
122.643 95.8233 li
150.363 95.8233 li
164.223 8.70334 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.39 .19 0 colr
@
490.923 -106.137 mo
487.676 -106.137 484.983 -103.444 484.983 -100.197 cv
484.983 -96.9495 487.676 -94.2567 490.923 -94.2567 cv
494.17 -94.2567 496.863 -96.9495 496.863 -100.197 cv
496.863 -103.444 494.17 -106.137 490.923 -106.137 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.59 0 .19 colr
ef
.4686 lw
1 lj
490.923 -106.137 mo
487.676 -106.137 484.983 -103.444 484.983 -100.197 cv
484.983 -96.9495 487.676 -94.2567 490.923 -94.2567 cv
494.17 -94.2567 496.863 -96.9495 496.863 -100.197 cv
496.863 -103.444 494.17 -106.137 490.923 -106.137 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
443.403 -118.017 mo
440.156 -118.017 437.463 -115.324 437.463 -112.077 cv
437.463 -108.829 440.156 -106.137 443.403 -106.137 cv
446.65 -106.137 449.343 -108.829 449.343 -112.077 cv
449.343 -115.324 446.65 -118.017 443.403 -118.017 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
443.403 -118.017 mo
440.156 -118.017 437.463 -115.324 437.463 -112.077 cv
437.463 -108.829 440.156 -106.137 443.403 -106.137 cv
446.65 -106.137 449.343 -108.829 449.343 -112.077 cv
449.343 -115.324 446.65 -118.017 443.403 -118.017 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
419.643 -94.2567 mo
416.396 -94.2567 413.703 -91.5639 413.703 -88.3167 cv
413.703 -85.0695 416.396 -82.3767 419.643 -82.3767 cv
422.89 -82.3767 425.583 -85.0695 425.583 -88.3167 cv
425.583 -91.5639 422.89 -94.2567 419.643 -94.2567 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
419.643 -94.2567 mo
416.396 -94.2567 413.703 -91.5639 413.703 -88.3167 cv
413.703 -85.0695 416.396 -82.3767 419.643 -82.3767 cv
422.89 -82.3767 425.583 -85.0695 425.583 -88.3167 cv
425.583 -91.5639 422.89 -94.2567 419.643 -94.2567 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
423.603 -106.137 mo
420.356 -106.137 417.663 -103.444 417.663 -100.197 cv
417.663 -96.9495 420.356 -94.2567 423.603 -94.2567 cv
426.85 -94.2567 429.543 -96.9495 429.543 -100.197 cv
429.543 -103.444 426.85 -106.137 423.603 -106.137 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.59 0 .19 colr
ef
423.603 -106.137 mo
420.356 -106.137 417.663 -103.444 417.663 -100.197 cv
417.663 -96.9495 420.356 -94.2567 423.603 -94.2567 cv
426.85 -94.2567 429.543 -96.9495 429.543 -100.197 cv
429.543 -103.444 426.85 -106.137 423.603 -106.137 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
483.003 -114.057 mo
479.756 -114.057 477.063 -111.364 477.063 -108.117 cv
477.063 -104.869 479.756 -102.177 483.003 -102.177 cv
486.25 -102.177 488.943 -104.869 488.943 -108.117 cv
488.943 -111.364 486.25 -114.057 483.003 -114.057 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
483.003 -114.057 mo
479.756 -114.057 477.063 -111.364 477.063 -108.117 cv
477.063 -104.869 479.756 -102.177 483.003 -102.177 cv
486.25 -102.177 488.943 -104.869 488.943 -108.117 cv
488.943 -111.364 486.25 -114.057 483.003 -114.057 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
true set_gvm
%ADOBeginSubsetFont: CLAAAA+Cmr10 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CLAAAA+Cmr10 gcheck setglobal} if
1 4866 30 <0001003f000005370577002d0044403d1a0106151c01210102090f010622
080c02080a012c012215211406260101220009080703042c09070104121c
016a1b19020522015114040806022f0f032b2b2b2a303335323511342335
2113232e022b01220e01151133323e0135331123342e012b011114163b01
323e023733033fd3d30486393b164faeaec925291a976867273c3c276768
973236d98eaf6135173b56484104654148fe2bb1a03c061d1efe0c236369
fdda686423fdd72c152d69a794fde700>CLAAAA+Cmr10 AddT42Char 
1 2622 16 <00020039ffe903c50396001000240023401c1b26090a0008112400090007
0204540d140005542104000602260f032b31002b3005222e0135343e0233
321e0115140606273236353426272e02232206070e011514161602007bd2
7a437da6617ecf787ad17aa46e162517474f2a40732626152879177dd27c
5eae894d85df7e7bd37d3ceeb867873722331b3a363a8b6073b77c00>CLAAAA+Cmr10 AddT42Char 
1 3554 22 <00010042000002e305a40028003d403419011b070914011b270e0c040820
0122010522070a0a0802040009282219035211170106070102050120015c
24080706022a10032b31003f2b2b3033353236351123353335343e023332
161514062322263534372623220e011d01331523111416331542455a9d9d
375d7941456f3527273737211a3c552aece5784e48162b02a248f5427356
3152442735352740160b557a3cf148fd5e2a1748>CLAAAA+Cmr10 AddT42Char 
1 184 2 <00030039fe5a03e103a0003b004b0057005b4052210802514c0914011a11
021f0151260f0a15082a01264c28100603012f1948090107402638070007
04042a014e3c0917011f1d02633444110521110259244e0106542c080304
0a0602633c00110603590f032b2b31002b2b30173436372e013534372635
343e023332173e0133321615140623222635343722071e0115140e012322
27061514163b01321e0115140e012322262637141e0133323e013534262b
01220606013235342623220615141616396a49292b3d5e3762783f7a612a
733e2c3826191a26196a4c252d609d53705d1d4736a87ac48598d35a5bd4
9873709e46459e6fc48ca82f4f30011bae4a64644a1c4ca0496d171f5e35
604a5c774070522b472d313f2c19262619260f49256b35578b4d3d283236
512c84795a773535775a455d2d2d5d456b3f2d5101d8f86b8b8b6b446e46
>CLAAAA+Cmr10 AddT42Char 
1 4410 27 <0001003dffe9044c03890023003240281e0121010c261d09120701041c09
160a070a1c0115011d015b1610150506015b0700040602250f032b31003f
3f3f2b303711342e0123352511141e013332363511342e0123352511141e
01331505350e01232226dd213e410136174b526e82223d410135213e41fe
d126885293adf401c437310b4816fd6b50592cb875016c37310b4816fd31
36310b4817ad4d607d00>CLAAAA+Cmr10 AddT42Char 
1 3370 21 <00020044fe73043b0389001b002b0034402c110114012325160a0c080501
1c2608091007020400071b010101201514035b1605150655280d0006022d
10032b31003f2b300135323635110e0123222e0235343e01333216173733
111416331501323637112e0123220e02151416160266465a3092505c9e75
4178d17957942c49365a45fdc55b8f2215845c466e49243a78fe7347182a
017b404e4c82ab587ad77e6252b4fb732a184701ac795c016862904a7c90
4052c186>CLAAAA+Cmr10 AddT42Char 
1 652 4 <000100ac0000018d00e1000c00184011030f0a0900070104480700000501
0e0f032b31002b3037343633321e01151406232226ac442d1c361e422e2d
44712e421e361c2d4444>CLAAAA+Cmr10 AddT42Char 
1 1864 12 <00010073ffd303fe05a400490045403c3627131204052f0a091a011c012f
23200c0c08440148010a2240091207020444361c1312050e070924015e3c
0e0105330116016a07011206024b0f032b2b31002b2b301711343b013216
15141633323e0135342e0127252e0135343e0133321737363b0132161511
142b012235342e01272623220e0115141617051e0315140e0123222e0127
07062b0122731219060af9ca477843325e3bfef684a76cb76acd79540608
0e060b111813233e2463a34676466d58010a42754e2c66b96e448e783156
06090c121d01de100a06c9dd5285473e75560e4123d9876aba6c8b850609
08fe251212347c722464477a43588f174110536e87486fc5781e3e318706
>CLAAAA+Cmr10 AddT42Char 
1 4570 28 <00010025ffe905a003730032003140252d1a0d031331092a09220a140a06
0a211d1a191715130e0d0c09070c312305010501340f032b31003f3f3f3f
3f2a3021012e012335211522151e01151b01272e0123352115221514171b
01363534262335211522060703062b0122270b01062b012201c5fef71244
4101a6790101c5aa1b10464001947902cdba04492d015c3e5915f4071810
1807cfcf0a160f1902e92d15484833030606fdd801e1472d154848330807
fdbf020a100d2b3148484138fd4e17170248fdb81700>CLAAAA+Cmr10 AddT42Char 
1 2444 15 <00020035ffe9042d058d0019002a0033402a080127270c0a040818011d26
150910070204070c000955112100050601191807035b1a000506022c0f03
2b31003f3f2b303311342e01233525113e0233321e0215140e0123222627
07371e0133323e013534272e0223220607d5213e41012f225b68365c9d74
4179d17d4e9230465a22804e6a83342d1445552f528c2904bc37310b4816
fd7f26391e4a82a95a7cd67f50427bc94b5f7aba67ad5a2844275749>CLAAAA+Cmr10 AddT42Char 
1 2888 18 <00010025ffd30812057700300039402f211202221f131007050422060c0a
0801042b190b03132f092809201c19181513110c0b0a070b2c2205010501
320f032b31003f3f2a2b3005012e0123352115221d010901272e01233521
15221514161509013635342623352115220701062b0122270901062b0122
027dfe5e105c4a0225ac014701172f105c4a0224ae040146013302723e01
b6a226fe7007170f1707feaefeac07180e181705052b164848370afc1003
5e922b16484837030c02fc1703b8060d3630484879fb3316160413fbed16
>CLAAAA+Cmr10 AddT42Char 
1 3166 20 <00020044ffe9043b058d001c002e003d403317012820090b012827080a04
081a01000120261909120702041809120c1801110124010c015b12191705
552c04000602300f032b31003f3f2b2b3005222e0135343e013332161711
342e0123352511141e01331505350606251e0133323637112e0223220e01
15141601f479c86f79d07d4b8631213d41012f213d41fecb3592fee42375
45558e2318495b336b8234111783d6787cd57e3f3801aa37310b4816fb2d
36310b4817813d44c94350624e01eb2d472679bc67527a00>CLAAAA+Cmr10 AddT42Char 
1 5144 32 <00010027fe5c04100373002f002e4024022723070007010429111a0a0b0a
1b19140c0505120e010a010001542d26130501310f032b2b3f3f2e2e2b30
131633323f01012e0123352115221514171b013635342e01233521152206
07010e0223222635343633321e011514068d272f815246fecd134e4101ae
7102e4cd061b2b1b01543f5f1afe9e1c4b6c404b7134261a29172cfeb01f
c3ac02f026154848310804fdd001f8101319251448483a39fc9c426f4763
49263417281b2134>CLAAAA+Cmr10 AddT42Char 
1 1646 11 <000200730000035205a4000c003a0035402d221b021803091827290c0008
3801030f0a0910070204552d1400050e0148070001061b014e1f25010603
3c0f032b31002b2b3025343633321e0115140623222613353412373e0135
342e012322060733321615140623222635343e0133321e01151406070e01
1d0114062b0122260156442d1c361e422e2d4454625a1e1c265e554f8926
0c29393a28283a639e5361b5753833758d0c0619050b712e421e361c2d44
440154688601025d20593154602c403f392a283a3a28547f44337e663c6f
2452ec8464070c0d>CLAAAA+Cmr10 AddT42Char 
CLAAAA+Cmr10 /CharStrings get begin
/g30 30 def
/g16 16 def
/g22 22 def
/g2 2 def
/g27 27 def
/g21 21 def
/g4 4 def
/g12 12 def
/g28 28 def
/g15 15 def
/g18 18 def
/g20 20 def
/g32 32 def
/g11 11 def
end
CLAAAA+Cmr10 /Encoding get
dup 52 /g30 put
dup 53 /g16 put
dup 54 /g22 put
dup 55 /g2 put
dup 56 /g27 put
dup 57 /g21 put
dup 58 /g4 put
dup 59 /g12 put
dup 60 /g28 put
dup 61 /g15 put
dup 62 /g18 put
dup 63 /g20 put
dup 64 /g32 put
dup 65 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JXZOVR+Cmr10*1 
[33{/.notdef}rp /g36 /g17 /g8 /g5 /g35 /g39 /g38 
/g34 /g40 /g13 /g3 /g23 /g37 /g6 /g7 
/g1 /g9 /g26 /g31 /g30 /g16 /g22 /g2 
/g27 /g21 /g4 /g12 /g28 /g15 /g18 /g20 
/g32 /g11 190{/.notdef}rp]
JXZOVR+Cmr10 nf
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
100.315 -53.0727 mo
(4)sh
109.555 -53.0727 mo
(\()sh
116.155 -53.0727 mo
(-)sh
121.435 -53.0727 mo
(2)sh
133.315 -53.0727 mo
(5)sh
139.915 -53.0727 mo
(6)sh
148.495 -53.0727 mo
(+)sh
153.115 -53.0727 mo
(2)sh
160.375 -53.0727 mo
(&)sh
true set_gvm
%ADOBeginSubsetFont: WSCAAA+Cmmi10 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal WSCAAA+Cmmi10 gcheck setglobal} if
1 488 3 <000100540000085e057700530040403519014e3c30034436024601062400
091b07010447411d0c160c504b474641403e38322e2a27251918110d0b12
2d1f020106015510032b31003f3f2e2e2b303322353e0233323701363534
27262322353e0233213217130136332132150e022322070607010615141e
0117163332150e01232122353e02333237363709010623222703010e0107
14163332150e0123681401060a0ac320010a0418276d1401060b08016917
03a002ea0e19015c1401060b087d311b0cfee70405090a276d14070813fd
e91401060b087d311b0c0127fcc50c1d1a03aefee70202025d4315070913
1b0518107d042d14081603081b05190f17fb6b0495171b05190f0e092ffb
9c1409080b0302081b1d101b05190f0e092e04a2fae817170508fb9d050f
0a35211b1b12>WSCAAA+Cmmi10 AddT42Char 
WSCAAA+Cmmi10 /CharStrings get begin
/g3 3 def
end
WSCAAA+Cmmi10 /Encoding get
dup 38 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JXZOVQ+Cmmi10*1 
[33{/.notdef}rp /g4 /g6 /g2 /g1 /g5 /g3 217{/.notdef}rp]
JXZOVQ+Cmmi10 nf
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
170.935 -53.0727 mo
(&)sh
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
189.415 -53.0727 mo
(-)sh
195.355 -53.0727 mo
(5)sh
201.955 -53.0727 mo
(*)sh
213.175 -53.0727 mo
(')sh
220.435 -53.0727 mo
(5)sh
227.035 -53.0727 mo
(%)sh
234.295 -53.0727 mo
(&)sh
240.235 -53.0727 mo
(%)sh
246.835 -53.0727 mo
(+)sh
252.115 -53.0727 mo
(,)sh
262.015 -53.0727 mo
(5)sh
268.615 -53.0727 mo
(6)sh
276.535 -53.0727 mo
(+)sh
281.815 -53.0727 mo
(2)sh
289.075 -53.0727 mo
(&)sh
299.635 -53.0727 mo
(')sh
306.895 -53.0727 mo
(*)sh
318.115 -53.0727 mo
(6)sh
326.035 -53.0727 mo
(7)sh
332.635 -53.0727 mo
(&)sh
338.575 -53.0727 mo
(+)sh
343.855 -53.0727 mo
(,)sh
353.095 -53.0727 mo
(\()sh
364.315 -53.0727 mo
(8)sh
371.575 -53.0727 mo
(%)sh
378.835 -53.0727 mo
(.)sh
382.135 -53.0727 mo
(9)sh
389.395 -53.0727 mo
(8)sh
396.655 -53.0727 mo
(&)sh
407.215 -53.0727 mo
(-)sh
413.155 -53.0727 mo
(5)sh
419.095 -53.0727 mo
(3)sh
423.055 -53.0727 mo
(5)sh
429.655 -53.0727 mo
(\))sh
434.935 -53.0727 mo
(:)sh
100.315 -37.2327 mo
(;)sh
108.235 -37.2327 mo
(+)sh
112.855 -37.2327 mo
(\()sh
119.455 -37.2327 mo
(\))sh
124.735 -37.2327 mo
(+)sh
133.975 -37.2327 mo
(<)sh
143.875 -37.2327 mo
(.)sh
147.175 -37.2327 mo
(+)sh
152.455 -37.2327 mo
(2)sh
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
164.335 -37.2327 mo
($)sh
JXZOVS+Cmmi7*1 [9.2598 0 0 -9.2598 0 0 ]msf
172.255 -35.2527 mo
(")sh
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
181.495 -37.2327 mo
(=)sh
188.755 -37.2327 mo
(\()sh
195.355 -37.2327 mo
(3)sh
198.655 -37.2327 mo
(3)sh
202.615 -37.2327 mo
(,)sh
211.855 -37.2327 mo
(5)sh
218.455 -37.2327 mo
(6)sh
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
227.035 -37.2327 mo
(")sh
JXZOVS+Cmmi7*1 [9.2598 0 0 -9.2598 0 0 ]msf
233.635 -35.2527 mo
(")sh
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
238.255 -37.2327 mo
(,)sh
247.495 -37.2327 mo
(-)sh
253.435 -37.2327 mo
(5)sh
260.035 -37.2327 mo
(3)sh
263.995 -37.2327 mo
(5)sh
270.595 -37.2327 mo
(\))sh
279.835 -37.2327 mo
(.)sh
283.135 -37.2327 mo
(%)sh
295.015 -37.2327 mo
(+)sh
300.295 -37.2327 mo
(2)sh
307.555 -37.2327 mo
(&)sh
318.115 -37.2327 mo
(8)sh
325.375 -37.2327 mo
(\))sh
329.995 -37.2327 mo
(%)sh
337.915 -37.2327 mo
(:)sh
100.315 -21.3927 mo
(1)sh
110.875 -21.3927 mo
(\))sh
115.495 -21.3927 mo
(\()sh
122.095 -21.3927 mo
(<)sh
135.955 -21.3927 mo
(\()sh
146.515 -21.3927 mo
(=)sh
153.775 -21.3927 mo
(\()sh
160.375 -21.3927 mo
(3)sh
164.335 -21.3927 mo
(3)sh
168.295 -21.3927 mo
(0)sh
176.215 -21.3927 mo
(+)sh
181.495 -21.3927 mo
(2)sh
188.755 -21.3927 mo
(&)sh
194.035 -21.3927 mo
(%)sh
205.915 -21.3927 mo
(\))sh
211.195 -21.3927 mo
(&)sh
217.135 -21.3927 mo
(')sh
224.395 -21.3927 mo
(3)sh
227.695 -21.3927 mo
(\()sh
234.295 -21.3927 mo
(-)sh
240.235 -21.3927 mo
(&)sh
250.795 -21.3927 mo
(.)sh
254.095 -21.3927 mo
(+)sh
263.995 -21.3927 mo
(<)sh
273.235 -21.3927 mo
(.)sh
277.195 -21.3927 mo
(+)sh
281.815 -21.3927 mo
(2)sh
293.695 -21.3927 mo
(\()sh
300.295 -21.3927 mo
(%)sh
307.555 -21.3927 mo
(5)sh
314.155 -21.3927 mo
(+)sh
319.435 -21.3927 mo
(2)sh
326.695 -21.3927 mo
(&)sh
332.635 -21.3927 mo
(\))sh
341.875 -21.3927 mo
(5)sh
348.475 -21.3927 mo
(6)sh
357.055 -21.3927 mo
(.)sh
360.355 -21.3927 mo
(+)sh
365.635 -21.3927 mo
(,)sh
375.535 -21.3927 mo
(,)sh
380.155 -21.3927 mo
(\()sh
387.415 -21.3927 mo
(*)sh
397.975 -21.3927 mo
(&)sh
407.875 -21.3927 mo
(-)sh
413.815 -21.3927 mo
(5)sh
420.415 -21.3927 mo
(3)sh
424.375 -21.3927 mo
(5)sh
430.975 -21.3927 mo
(\))sh
436.255 -21.3927 mo
(:)sh
100.315 -5.55266 mo
(>)sh
114.175 -5.55266 mo
(2)sh
121.435 -5.55266 mo
(\()sh
128.035 -5.55266 mo
(+)sh
137.275 -5.55266 mo
(')sh
144.535 -5.55266 mo
(*)sh
155.755 -5.55266 mo
(6)sh
164.335 -5.55266 mo
(5)sh
170.275 -5.55266 mo
(/)sh
176.875 -5.55266 mo
(&)sh
182.815 -5.55266 mo
(\))sh
192.055 -5.55266 mo
(+)sh
197.335 -5.55266 mo
(2)sh
204.595 -5.55266 mo
(&)sh
JXZOVQ+Cmmi10*1 [13.2198 0 0 -13.2198 0 0 ]msf
215.155 -5.55266 mo
(&)sh
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
233.635 -5.55266 mo
(-)sh
239.575 -5.55266 mo
(5)sh
246.175 -5.55266 mo
(3)sh
249.475 -5.55266 mo
(5)sh
256.075 -5.55266 mo
(\))sh
261.355 -5.55266 mo
(,)sh
270.595 -5.55266 mo
(?)sh
278.515 -5.55266 mo
(5)sh
289.075 -5.55266 mo
(@)sh
295.675 -5.55266 mo
(5)sh
302.275 -5.55266 mo
(8)sh
314.155 -5.55266 mo
(&)sh
320.095 -5.55266 mo
(%)sh
327.355 -5.55266 mo
(?)sh
338.575 -5.55266 mo
(8)sh
345.835 -5.55266 mo
(')sh
357.715 -5.55266 mo
(<)sh
367.615 -5.55266 mo
(.)sh
370.915 -5.55266 mo
(+)sh
376.195 -5.55266 mo
(2)sh
383.455 -5.55266 mo
(A)sh
130.563 83.9433 mo
127.316 83.9433 124.623 86.6361 124.623 89.8833 cv
124.623 93.1305 127.316 95.8233 130.563 95.8233 cv
133.81 95.8233 136.503 93.1305 136.503 89.8833 cv
136.503 86.6361 133.81 83.9433 130.563 83.9433 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
130.563 83.9433 mo
127.316 83.9433 124.623 86.6361 124.623 89.8833 cv
124.623 93.1305 127.316 95.8233 130.563 95.8233 cv
133.81 95.8233 136.503 93.1305 136.503 89.8833 cv
136.503 86.6361 133.81 83.9433 130.563 83.9433 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
126.603 72.0633 mo
123.356 72.0633 120.663 74.7561 120.663 78.0033 cv
120.663 81.2505 123.356 83.9433 126.603 83.9433 cv
129.85 83.9433 132.543 81.2505 132.543 78.0033 cv
132.543 74.7561 129.85 72.0633 126.603 72.0633 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.59 0 .19 colr
ef
126.603 72.0633 mo
123.356 72.0633 120.663 74.7561 120.663 78.0033 cv
120.663 81.2505 123.356 83.9433 126.603 83.9433 cv
129.85 83.9433 132.543 81.2505 132.543 78.0033 cv
132.543 74.7561 129.85 72.0633 126.603 72.0633 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
122.643 60.1833 mo
119.396 60.1833 116.703 62.8761 116.703 66.1233 cv
116.703 69.3705 119.396 72.0633 122.643 72.0633 cv
125.89 72.0633 128.583 69.3705 128.583 66.1233 cv
128.583 62.8761 125.89 60.1833 122.643 60.1833 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
122.643 60.1833 mo
119.396 60.1833 116.703 62.8761 116.703 66.1233 cv
116.703 69.3705 119.396 72.0633 122.643 72.0633 cv
125.89 72.0633 128.583 69.3705 128.583 66.1233 cv
128.583 62.8761 125.89 60.1833 122.643 60.1833 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
true set_gvm
%ADOBeginSubsetFont: CLAAAA+Cmr10 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CLAAAA+Cmr10 gcheck setglobal} if
1 3972 24 <000200ac0000018d0373000c001a0022401b180f110a0008030f0a090007
020415010d014807000a05011c0f032b31002b3037343633321e01151406
23222611343e0133321e01151406232226ac442d1c361e422e2d441e351e
1d351e412f2e43712e421e361c2d444402be1d342020341d2e434300>CLAAAA+Cmr10 AddT42Char 
1 2376 14 <000100f2fe00020a06000007002040191f02030006001f05070008020407
0302670501100501090f032b31002b301311211523113315f20118c6c6fe
00080052f8a45200>CLAAAA+Cmr10 AddT42Char 
1 1434 10 <0001006600000398055400320044403b2e2918030d2b091210020d22200c
0408310103012b140009110702042901091509310132302e034f24090905
1b012a100303481501030602340f032b2b31002b2b3033353437013e0335
342e01232206073633321615140623222635343e0233321e0115140e020f
0133323637363733036604013e485a58333e7b57598e1d080e2e41412e30
413a6d894d75ca764e7abe1ee8c591c30618193c3a37050601604e6a8a8f
5054995c6b55023e312f41432d4d87693863b57959a083a61cdf05051aa3
fe93>CLAAAA+Cmr10 AddT42Char 
1 4772 29 <000100b20000035e055400110024401d0a01040122070611060104000911
0701031209015a0d04010501130f032b2b3f2b3033352035110623353237
3332161511142115be01006aa2fb801d070d0100484104333348830b07fb
47414800>CLAAAA+Cmr10 AddT42Char 
1 3098 19 <0001002dfe00014606000007002040191f06030006001f01070008020405
0102670703040501090f032b31002b3013353311233521112dc7c70119fe
0052075c52f80000>CLAAAA+Cmr10 AddT42Char 
CLAAAA+Cmr10 /CharStrings get begin
/g24 24 def
/g14 14 def
/g10 10 def
/g29 29 def
/g19 19 def
end
CLAAAA+Cmr10 /Encoding get
dup 66 /g24 put
dup 67 /g14 put
dup 68 /g10 put
dup 69 /g29 put
dup 70 /g19 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JXZOVR+Cmr10*1 
[33{/.notdef}rp /g36 /g17 /g8 /g5 /g35 /g39 /g38 
/g34 /g40 /g13 /g3 /g23 /g37 /g6 /g7 
/g1 /g9 /g26 /g31 /g30 /g16 /g22 /g2 
/g27 /g21 /g4 /g12 /g28 /g15 /g18 /g20 
/g32 /g11 /g24 /g14 /g10 /g29 /g19 185{/.notdef}rp]
JXZOVR+Cmr10 nf
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
100.315 116.547 mo
(;)sh
108.235 116.547 mo
(+)sh
112.855 116.547 mo
(\()sh
119.455 116.547 mo
(\))sh
124.735 116.547 mo
(+)sh
130.015 116.547 mo
(B)sh
139.255 116.547 mo
(1)sh
149.155 116.547 mo
(.)sh
153.115 116.547 mo
(\))sh
158.395 116.547 mo
(!)sh
163.675 116.547 mo
(C)sh
166.975 116.547 mo
(D)sh
178.195 116.547 mo
(E)sh
188.755 116.547 mo
(E)sh
195.355 116.547 mo
(F)sh
199.315 116.547 mo
(")sh
142.443 83.9433 mo
139.196 83.9433 136.503 86.6361 136.503 89.8833 cv
136.503 93.1305 139.196 95.8233 142.443 95.8233 cv
145.69 95.8233 148.383 93.1305 148.383 89.8833 cv
148.383 86.6361 145.69 83.9433 142.443 83.9433 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
142.443 83.9433 mo
139.196 83.9433 136.503 86.6361 136.503 89.8833 cv
136.503 93.1305 139.196 95.8233 142.443 95.8233 cv
145.69 95.8233 148.383 93.1305 148.383 89.8833 cv
148.383 86.6361 145.69 83.9433 142.443 83.9433 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
1.4982 lw
0 lj
239.463 8.70334 mo
253.323 95.8233 li
281.043 95.8233 li
294.903 8.70334 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.39 .19 0 colr
@
257.283 72.0633 mo
254.036 72.0633 251.343 74.7561 251.343 78.0033 cv
251.343 81.2505 254.036 83.9433 257.283 83.9433 cv
260.53 83.9433 263.223 81.2505 263.223 78.0033 cv
263.223 74.7561 260.53 72.0633 257.283 72.0633 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.59 0 .19 colr
ef
.4686 lw
1 lj
257.283 72.0633 mo
254.036 72.0633 251.343 74.7561 251.343 78.0033 cv
251.343 81.2505 254.036 83.9433 257.283 83.9433 cv
260.53 83.9433 263.223 81.2505 263.223 78.0033 cv
263.223 74.7561 260.53 72.0633 257.283 72.0633 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
257.283 83.9433 mo
254.036 83.9433 251.343 86.6361 251.343 89.8833 cv
251.343 93.1305 254.036 95.8233 257.283 95.8233 cv
260.53 95.8233 263.223 93.1305 263.223 89.8833 cv
263.223 86.6361 260.53 83.9433 257.283 83.9433 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
257.283 83.9433 mo
254.036 83.9433 251.343 86.6361 251.343 89.8833 cv
251.343 93.1305 254.036 95.8233 257.283 95.8233 cv
260.53 95.8233 263.223 93.1305 263.223 89.8833 cv
263.223 86.6361 260.53 83.9433 257.283 83.9433 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
273.123 83.9433 mo
269.876 83.9433 267.183 86.6361 267.183 89.8833 cv
267.183 93.1305 269.876 95.8233 273.123 95.8233 cv
276.37 95.8233 279.063 93.1305 279.063 89.8833 cv
279.063 86.6361 276.37 83.9433 273.123 83.9433 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
273.123 83.9433 mo
269.876 83.9433 267.183 86.6361 267.183 89.8833 cv
267.183 93.1305 269.876 95.8233 273.123 95.8233 cv
276.37 95.8233 279.063 93.1305 279.063 89.8833 cv
279.063 86.6361 276.37 83.9433 273.123 83.9433 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
true set_gvm
%ADOBeginSubsetFont: CLAAAA+Cmr10 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CLAAAA+Cmr10 gcheck setglobal} if
1 4090 25 <00020042000005bc05ba001c001f00314028221e1500061b100d030f0101
2200090a0702041f071f1e1d1c181514131009310e01010501210f032b31
002e2e2b303335323701363b013217011e0133152135323d010321030615
1416331503210342b72a01ae061b1a1b0601c1136b50fdc5aa6ffe0f5c02
61382301c1e1487904e31616fae52b164848370a0140fef8070e33314802
10028e00>CLAAAA+Cmr10 AddT42Char 
CLAAAA+Cmr10 /CharStrings get begin
/g25 25 def
end
CLAAAA+Cmr10 /Encoding get
dup 71 /g25 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JXZOVR+Cmr10*1 
[33{/.notdef}rp /g36 /g17 /g8 /g5 /g35 /g39 /g38 
/g34 /g40 /g13 /g3 /g23 /g37 /g6 /g7 
/g1 /g9 /g26 /g31 /g30 /g16 /g22 /g2 
/g27 /g21 /g4 /g12 /g28 /g15 /g18 /g20 
/g32 /g11 /g24 /g14 /g10 /g29 /g19 /g25 
184{/.notdef}rp]
JXZOVR+Cmr10 nf
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
230.995 117.207 mo
(G)sh
240.895 117.207 mo
(6)sh
244.855 117.207 mo
(+)sh
250.135 117.207 mo
(&)sh
256.075 117.207 mo
(\))sh
265.315 117.207 mo
(E)sh
276.535 117.207 mo
(?)sh
283.795 117.207 mo
(\))sh
289.075 117.207 mo
(\()sh
295.015 117.207 mo
(<)sh
1.4982 lw
0 lj
465.183 -169.497 mo
479.043 -82.3767 li
506.763 -82.3767 li
520.623 -169.497 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.39 .19 0 colr
@
273.123 72.0633 mo
269.876 72.0633 267.183 74.7561 267.183 78.0033 cv
267.183 81.2505 269.876 83.9433 273.123 83.9433 cv
276.37 83.9433 279.063 81.2505 279.063 78.0033 cv
279.063 74.7561 276.37 72.0633 273.123 72.0633 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
.4686 lw
1 lj
273.123 72.0633 mo
269.876 72.0633 267.183 74.7561 267.183 78.0033 cv
267.183 81.2505 269.876 83.9433 273.123 83.9433 cv
276.37 83.9433 279.063 81.2505 279.063 78.0033 cv
279.063 74.7561 276.37 72.0633 273.123 72.0633 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
265.203 64.1433 mo
261.956 64.1433 259.263 66.8361 259.263 70.0833 cv
259.263 73.3305 261.956 76.0233 265.203 76.0233 cv
268.45 76.0233 271.143 73.3305 271.143 70.0833 cv
271.143 66.8361 268.45 64.1433 265.203 64.1433 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
265.203 64.1433 mo
261.956 64.1433 259.263 66.8361 259.263 70.0833 cv
259.263 73.3305 261.956 76.0233 265.203 76.0233 cv
268.45 76.0233 271.143 73.3305 271.143 70.0833 cv
271.143 66.8361 268.45 64.1433 265.203 64.1433 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
1.4982 lw
0 lj
338.463 8.70334 mo
352.323 95.8233 li
380.043 95.8233 li
393.903 8.70334 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.39 .19 0 colr
@
356.283 72.0633 mo
353.036 72.0633 350.343 74.7561 350.343 78.0033 cv
350.343 81.2505 353.036 83.9433 356.283 83.9433 cv
359.53 83.9433 362.223 81.2505 362.223 78.0033 cv
362.223 74.7561 359.53 72.0633 356.283 72.0633 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.59 0 .19 colr
ef
.4686 lw
1 lj
356.283 72.0633 mo
353.036 72.0633 350.343 74.7561 350.343 78.0033 cv
350.343 81.2505 353.036 83.9433 356.283 83.9433 cv
359.53 83.9433 362.223 81.2505 362.223 78.0033 cv
362.223 74.7561 359.53 72.0633 356.283 72.0633 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
356.283 83.9433 mo
353.036 83.9433 350.343 86.6361 350.343 89.8833 cv
350.343 93.1305 353.036 95.8233 356.283 95.8233 cv
359.53 95.8233 362.223 93.1305 362.223 89.8833 cv
362.223 86.6361 359.53 83.9433 356.283 83.9433 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
356.283 83.9433 mo
353.036 83.9433 350.343 86.6361 350.343 89.8833 cv
350.343 93.1305 353.036 95.8233 356.283 95.8233 cv
359.53 95.8233 362.223 93.1305 362.223 89.8833 cv
362.223 86.6361 359.53 83.9433 356.283 83.9433 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
372.123 83.9433 mo
368.876 83.9433 366.183 86.6361 366.183 89.8833 cv
366.183 93.1305 368.876 95.8233 372.123 95.8233 cv
375.37 95.8233 378.063 93.1305 378.063 89.8833 cv
378.063 86.6361 375.37 83.9433 372.123 83.9433 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
372.123 83.9433 mo
368.876 83.9433 366.183 86.6361 366.183 89.8833 cv
366.183 93.1305 368.876 95.8233 372.123 95.8233 cv
375.37 95.8233 378.063 93.1305 378.063 89.8833 cv
378.063 86.6361 375.37 83.9433 372.123 83.9433 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
372.123 72.0633 mo
368.876 72.0633 366.183 74.7561 366.183 78.0033 cv
366.183 81.2505 368.876 83.9433 372.123 83.9433 cv
375.37 83.9433 378.063 81.2505 378.063 78.0033 cv
378.063 74.7561 375.37 72.0633 372.123 72.0633 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
372.123 72.0633 mo
368.876 72.0633 366.183 74.7561 366.183 78.0033 cv
366.183 81.2505 368.876 83.9433 372.123 83.9433 cv
375.37 83.9433 378.063 81.2505 378.063 78.0033 cv
378.063 74.7561 375.37 72.0633 372.123 72.0633 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
364.203 64.1433 mo
360.956 64.1433 358.263 66.8361 358.263 70.0833 cv
358.263 73.3305 360.956 76.0233 364.203 76.0233 cv
367.45 76.0233 370.143 73.3305 370.143 70.0833 cv
370.143 66.8361 367.45 64.1433 364.203 64.1433 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
364.203 64.1433 mo
360.956 64.1433 358.263 66.8361 358.263 70.0833 cv
358.263 73.3305 360.956 76.0233 364.203 76.0233 cv
367.45 76.0233 370.143 73.3305 370.143 70.0833 cv
370.143 66.8361 367.45 64.1433 364.203 64.1433 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
329.995 117.207 mo
(G)sh
339.895 117.207 mo
(6)sh
343.855 117.207 mo
(+)sh
349.135 117.207 mo
(&)sh
355.075 117.207 mo
(\))sh
364.315 117.207 mo
(D)sh
375.535 117.207 mo
(?)sh
382.795 117.207 mo
(\))sh
388.075 117.207 mo
(\()sh
394.015 117.207 mo
(<)sh
403.915 117.207 mo
(,)sh
376.083 60.1833 mo
372.836 60.1833 370.143 62.8761 370.143 66.1233 cv
370.143 69.3705 372.836 72.0633 376.083 72.0633 cv
379.33 72.0633 382.023 69.3705 382.023 66.1233 cv
382.023 62.8761 379.33 60.1833 376.083 60.1833 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
376.083 60.1833 mo
372.836 60.1833 370.143 62.8761 370.143 66.1233 cv
370.143 69.3705 372.836 72.0633 376.083 72.0633 cv
379.33 72.0633 382.023 69.3705 382.023 66.1233 cv
382.023 62.8761 379.33 60.1833 376.083 60.1833 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
1.4982 lw
0 lj
441.423 7.43613 mo
455.283 94.5561 li
483.003 94.5561 li
496.863 7.43613 li
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.39 .19 0 colr
@
459.243 70.7961 mo
455.996 70.7961 453.303 73.4889 453.303 76.7361 cv
453.303 80.0625 455.996 82.6761 459.243 82.6761 cv
462.49 82.6761 465.183 80.0625 465.183 76.7361 cv
465.183 73.4889 462.49 70.7961 459.243 70.7961 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.59 0 .19 colr
ef
.4686 lw
1 lj
459.243 70.7961 mo
455.996 70.7961 453.303 73.4889 453.303 76.7361 cv
453.303 80.0625 455.996 82.6761 459.243 82.6761 cv
462.49 82.6761 465.183 80.0625 465.183 76.7361 cv
465.183 73.4889 462.49 70.7961 459.243 70.7961 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
459.243 82.6761 mo
455.996 82.6761 453.303 85.3689 453.303 88.6161 cv
453.303 91.9425 455.996 94.5561 459.243 94.5561 cv
462.49 94.5561 465.183 91.9425 465.183 88.6161 cv
465.183 85.3689 462.49 82.6761 459.243 82.6761 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
459.243 82.6761 mo
455.996 82.6761 453.303 85.3689 453.303 88.6161 cv
453.303 91.9425 455.996 94.5561 459.243 94.5561 cv
462.49 94.5561 465.183 91.9425 465.183 88.6161 cv
465.183 85.3689 462.49 82.6761 459.243 82.6761 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
475.083 82.6761 mo
471.836 82.6761 469.143 85.3689 469.143 88.6161 cv
469.143 91.9425 471.836 94.5561 475.083 94.5561 cv
478.33 94.5561 481.023 91.9425 481.023 88.6161 cv
481.023 85.3689 478.33 82.6761 475.083 82.6761 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
475.083 82.6761 mo
471.836 82.6761 469.143 85.3689 469.143 88.6161 cv
469.143 91.9425 471.836 94.5561 475.083 94.5561 cv
478.33 94.5561 481.023 91.9425 481.023 88.6161 cv
481.023 85.3689 478.33 82.6761 475.083 82.6761 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
475.083 70.7961 mo
471.836 70.7961 469.143 73.4889 469.143 76.7361 cv
469.143 80.0625 471.836 82.6761 475.083 82.6761 cv
478.33 82.6761 481.023 80.0625 481.023 76.7361 cv
481.023 73.4889 478.33 70.7961 475.083 70.7961 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
475.083 70.7961 mo
471.836 70.7961 469.143 73.4889 469.143 76.7361 cv
469.143 80.0625 471.836 82.6761 475.083 82.6761 cv
478.33 82.6761 481.023 80.0625 481.023 76.7361 cv
481.023 73.4889 478.33 70.7961 475.083 70.7961 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
467.163 62.8761 mo
463.916 62.8761 461.223 65.5689 461.223 68.8161 cv
461.223 72.1425 463.916 74.7561 467.163 74.7561 cv
470.41 74.7561 473.103 72.1425 473.103 68.8161 cv
473.103 65.5689 470.41 62.8761 467.163 62.8761 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
.73 .87 .88 colr
ef
467.163 62.8761 mo
463.916 62.8761 461.223 65.5689 461.223 68.8161 cv
461.223 72.1425 463.916 74.7561 467.163 74.7561 cv
470.41 74.7561 473.103 72.1425 473.103 68.8161 cv
473.103 65.5689 470.41 62.8761 467.163 62.8761 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
479.043 58.9161 mo
475.796 58.9161 473.103 61.6089 473.103 64.8561 cv
473.103 68.1825 475.796 70.7961 479.043 70.7961 cv
482.29 70.7961 484.983 68.1825 484.983 64.8561 cv
484.983 61.6089 482.29 58.9161 479.043 58.9161 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
479.043 58.9161 mo
475.796 58.9161 473.103 61.6089 473.103 64.8561 cv
473.103 68.1825 475.796 70.7961 479.043 70.7961 cv
482.29 70.7961 484.983 68.1825 484.983 64.8561 cv
484.983 61.6089 482.29 58.9161 479.043 58.9161 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
true set_gvm
%ADOBeginSubsetFont: CLAAAA+Cmr10 AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal CLAAAA+Cmr10 gcheck setglobal} if
1 5332 33 <00010056ffd303a80554004b00504047250119124400020b0302091f1c02
19252c0c0408350124120b010603233d09000703041211021622094a3906
000535014e311604061c0f00034b222801064748410006044d0f032b2b31
002b2a30371e0133323635342e022b01223d01343337323e013534262322
06073e0133321615140623222635343e0133321e0215140e01071e021514
0e0123222e0135343633321e0115140623c330a25d77641532573f881212
71485f2c5c5e4e8e2a0406042e3e3e2e2d406aa7543e8a70474d865059a0
617cca7060c17b443321371f46319e4644cb813a74643c131210096c9b46
627e3b3c0101402d2c40402c58824325456c4556926a1a11649c5a71b767
49926633441f38203244>CLAAAA+Cmr10 AddT42Char 
CLAAAA+Cmr10 /CharStrings get begin
/g33 33 def
end
CLAAAA+Cmr10 /Encoding get
dup 72 /g33 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/JXZOVR+Cmr10*1 
[33{/.notdef}rp /g36 /g17 /g8 /g5 /g35 /g39 /g38 
/g34 /g40 /g13 /g3 /g23 /g37 /g6 /g7 
/g1 /g9 /g26 /g31 /g30 /g16 /g22 /g2 
/g27 /g21 /g4 /g12 /g28 /g15 /g18 /g20 
/g32 /g11 /g24 /g14 /g10 /g29 /g19 /g25 
/g33 183{/.notdef}rp]
JXZOVR+Cmr10 nf
JXZOVR+Cmr10*1 [13.2198 0 0 -13.2198 0 0 ]msf
432.955 115.887 mo
(G)sh
442.855 115.887 mo
(6)sh
446.815 115.887 mo
(+)sh
452.095 115.887 mo
(&)sh
458.035 115.887 mo
(\))sh
467.275 115.887 mo
(H)sh
478.495 115.887 mo
(?)sh
485.755 115.887 mo
(\))sh
491.035 115.887 mo
(\()sh
496.975 115.887 mo
(<)sh
506.875 115.887 mo
(,)sh
467.163 52.2633 mo
463.916 52.2633 461.223 54.9561 461.223 58.2033 cv
461.223 61.4505 463.916 64.1433 467.163 64.1433 cv
470.41 64.1433 473.103 61.4505 473.103 58.2033 cv
473.103 54.9561 470.41 52.2633 467.163 52.2633 cv
cp
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 .19 0 colr
ef
467.163 52.2633 mo
463.916 52.2633 461.223 54.9561 461.223 58.2033 cv
461.223 61.4505 463.916 64.1433 467.163 64.1433 cv
470.41 64.1433 473.103 61.4505 473.103 58.2033 cv
473.103 54.9561 470.41 52.2633 467.163 52.2633 cv
<< /CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 colr
@
176.103 48.0657 mo
208.417 48.0657 li
208.654 48.1449 li
208.654 48.4617 li
208.417 48.5409 li
176.103 48.5409 li
175.866 48.3033 li
176.103 48.0657 li
cp
207.783 46.3233 mo
211.743 48.3033 li
207.783 50.2833 li
207.783 46.3233 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 colr
f
298.863 48.0657 mo
331.177 48.0657 li
331.414 48.1449 li
331.414 48.4617 li
331.177 48.5409 li
298.863 48.5409 li
298.626 48.3033 li
298.863 48.0657 li
cp
330.543 46.3233 mo
334.503 48.3033 li
330.543 50.2833 li
330.543 46.3233 li
cp
f
401.823 48.0657 mo
434.137 48.0657 li
434.374 48.1449 li
434.374 48.4617 li
434.137 48.5409 li
401.823 48.5409 li
401.586 48.3033 li
401.823 48.0657 li
cp
433.503 46.3233 mo
437.463 48.3033 li
433.503 50.2833 li
433.503 46.3233 li
cp
f
grestore
false sop
/2 
[/DeviceGray] /CSA add_res
0 gry
true set_gvm
%ADOBeginSubsetFont: PFJBAA+CMR10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PFJBAA+CMR10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
def
/FontBBox {-251 -250 1009 969} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 448 666 677] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [69] def
/StemSnapH [22 31] def
/StemSnapV [69 89] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
57 dict dup begin
/ff <1C60D8A8C9B08A95FF8CEA8AF5E07F63E9F1B5E8F4CA1683A21DE95D58D
6C3E29BB233906DDCCD8BFB1899CEB485D08A458F58F7C89DA0E8F7FA2A99EF5
BBF85169B3739B6CE7D7BCC177E28ADCAFF9E7612E422A5FACC2A3820045F970
113E2ECECDB4DEDC4C2BFD1202B58918251821CFAFBB17063F0526B848F9C2D3
235FDD0BCE8FB0612E98650091EE577E3405A8C64E028FC04E263E89BA1DF280
B546CF896C4032381BBC5877FBCF8A65393530D72111F3424F86F277D183FBC7
9A030BB79C66013D11CC2B017E467BB2B8034E9D3B6F68F43CDD67C1CACE7684
B735F961CF345B55743> |-
/fi <1C60D8A8C9B08A95C5897169EED9664BED359E1B6FA8046F967D286B5C3
15A2CE47E3043EA3526C6192449635F2DA5AE3EE73919B52D525C096ECB55C63
DDB789A7F918074FC45E4ACDE6751656039844BA59107A293FBC6F9D2FA57995
2076F62E9DABA5CEDE9C9326D1250FF5FA67CCED67DFAA3C183BF1B9C26748E0
DDFEEE8F8464B1DCA14FE4BD296DEF29C921827AB4EDDC974773DB09417C4F23
2E6AD283B19FF29059BF9379DF784AAAD95EC606450E2256F10C70E5A28F3650
8106B27B13371584DB56C0B1A191AE795A2B9CE6617EFD2A3> |-
/parenleft <1C60D8A8C9B08A958B2129D6E9761120E2D623F206A8BB61D8ED
90A20EE239C62172B553BFF416342D6CD99C95C515CA225C40039DBAF08CE4F0
55B08F39C15D29C99EF3EDD066CCCEF8932365A3BB1620FA5F0BCE8AF21A5BDE
C0FFD55FA45F247FC811007CB408F0DCDD3AE01E3246> |-
/parenright <1C60D8A8C9B08A958B2129D6E9761120E2D623F206A8A207F03
DEA8F466C0D4F860EDF515D421F89285FC2D8EC76F5E903EDE1B5CFFAEC5DEA9
22C7FC4A51953A99A5FB1F96793348D816F60492670058F4DEA6D328AB20FBAD
B3C1B57A79D8CCD13A3C6D068BAD5F09F347ED0C895> |-
/plus <1C60D8A8C9B08A9461828376290042B3B0012119E49A5F8A40FFB07EC
16079327C8839C8F2280897EA08CCF42D3B4E2B36A495896A102B0E0B676D7CD
E615B4B502BC24C313F43E124C5C3EF4728FA76AB60F029D0136D86C00EF66A5
8511B752E> |-
/comma <1C60D8A8C9B08A9570810981675918D0BCF1CD202F5F15202B7A7698
DF02C61BB3071F67A562DD96D0521F578EC9F57BF5A71BF023ACCD67B8727CFD
38538E62ACB3D55D0B01252803DA68060E5342CFD41A7D> |-
/hyphen <1C60D8A8C9B08A959E2F69652E8B76AC2AC5B4F1FA8662A86AEED57
846929C2FBC07360B> |-
/period <1C60D8A8C9B08A9570810981675968F2C907C696DFE9BE69433F613
9DF6C45B8165ACC43B6E0B309859F778ABCF0> |-
/one <1C60D8A8C9B7A73DC579B9CE13A4EA8C203AFC890ABD6F58341B006CF1
BDD8FED3A7238E01F751FEAC75885229C293891E5636AD630D9C884528B6FEF0
0728A740ED77D054B4743ECA5E3947520FEF6B23D548765D11> |-
/two <1C60D8A8C9B7A73DC50B0411757B441481CCF7EF812EEB9B3F6A08293A
A33E44598842821CBFE74832C3A2FC51890F3A66AFDE8EA8269173784AF985B0
8CD4044AADA37EBF8296E8DBBCEABE3042A3995F6A3A8DE32D90D624CEDF4C1B
CFEECD943884DD6052923FAC92315AE2977DECA1B6F479ADBDA41B10FDF2F38D
2B74CBF99D8D6FF4> |-
/three <1C60D8A8C9B7A73D3B2B97DEB4C7BDB68E0D63865C8BF294429AD1BA
AE59A25299F9306A9E28AA5C0C0AF9F97F56096DB0FD0EC440ACCE834B0BA539
2FD94D026768A961AA5D1A88FAE30F2B2033E77AFAB55B0B9C8092CD226DD9EF
EEAAF5CD5AE79D6DDEC4C37DC43DE3B85DD2A2EC4DC0C9F349D5E8F9F615782E
DC8C53805553FD3C0007C1818BF3D99AB659A079ED36132BBDC613CA63D7A0FE
429706DBC6BA998CE56A89C002758EF37F90A390F83B3DFE49D312FA66FDF2F1
6212D1503559B35FC2DB8BD5A49535> |-
/four <1C60D8A8C9B7A73DC579B9C1587087D4749982A674065F9D4190A646C
4B6AEC0EE9FA16CBD7A614FBA5C7797971DF7C6EA57394603F00B98324AF84E1
D747CBDA8BF6ACE99B270F3634D0598A7799230B2FA53F37697C8FB04996EB79
CA1E39DB1488D8A5A85F57D049C7AE31C6F8A6F15F2EE8FAE7CD4D80767B9> |-
/colon <1C60D8A8C9B08A9570810981675968F2C9119AD767573D3896DCDEF9
DA5F5F8912E04C94872E9ED59B26AA7979866D70736E39162F6D45AC4E5BC3A4
24B2E5A438DB713C33C0D2FE26717D> |-
/equal <1C60D8A8C9B08A946182837629008D945C50B3BD77B79680F3B07BDA
6301D2521ADF665EADEA779B8650AC6CDB556621631497A3BE00C67036F6EB06
05A36A2C0EE306396247E4A79F8EFAE500D78B59605F041F11> |-
/A <1C60D8A8C9B6E3FA234780E51B74F22595A687FBF09EF454D03FB6CE0741
835DFEA276F2BD9DA1E567C1E2AA272C9AF9AA6DE082183B6B06B110AD19A95E
B7E4DF541495BB98EE61CCB080A42D64DF1FC55075E90898D74F5BD66A3B7E79
6EB7D1A2531A03B3A15C447C7878675F786C2958D8D170FECAAEB79653062A89
C24C3F187B500D1CE71547CC2DD4654566FBE73FC2C8B09F> |-
/B <1C60D8A8C9B08A945A1AB9ADE1431F477760039895429B9BEADD61922CFC
184419BAEF0F9B56C23FC5661D652FB46838C6961959B988108B7BE7927DB7D1
13140FAE852560AD0321B29F8DDAF47C42DE855BFCE5E894359EC68F12B5A5EF
91D5C9A819F5353B8A7ECCA93AD7565B0CB87EA5B54A18A4872BB4B57604690E
4A511AD187CB4431D0387A106BD295650A020AB1BDC8890F221B49C542C90C76
C5207D49FCDC51B6E2E50707> |-
/C <1C60D8A8C9B08A9454CA4C75C5C983901A105955FD02AB95A1D9A8A1EF86
541AF97FFF68AEDD6EF3F9788853DEF093D0FBD78A3FC5DB04802F61AEF127B4
D274CEA5A0495BD438B2F75833238070F9A0DEDDCFDFABEF5BEDD017B6BBEB22
A7AE0ECB6D46586699459E2B529F0C643928AD0C60B989B7B119C20E74352A5B
2677AF404D34EE8C876EF19CEC> |-
/D <1C60D8A8C9B08A9464DE8546F88D2A05AE66A80CFAB072F6DD7E68AFC04F
8CB1FADB5E26854F1AB31DBD2A5DF3CA3DD1B59308732B5F717D99BE176292FB
4B61473C545010195B72D8BD51A37A97972F71DA29D05B719122162A62E85384
B5893DABEC3DD4C6F100837213E0F5892BD442264F7EBD017CA7B57BEF07B0D0
16> |-
/F <1C60D8A8C9B08A95E211B68BD74B7CA2EA30EA4FC2444F1F126966AA7729
7BA7EB9B6F06068DCAA13C02B3588F5A46379A5072E7E2DBF343C097B55CA4D5
88C6753F362DD28478A1BC56804A66D1A6D1CB247FEE04B2647D343D14D14B66
B993C73F534C4128A2626BB2404D5D4FD30D29B727A906D4DCB574AC37C31D5E
5DAFB5704A4D0DA0711E1E> |-
/I <1C60D8A8C9B08A9591900960B3FA4612DFF926AB21A530E1912F33677612
AC06B324D812E42049FF4946BE5E0FFA24FA0C62F2839FF2110EEC7EE0A42476
46E6F699D4C8BECE1825B3A661611E4D55F40F2E64FACB836D4D0C9780F60650
FBF10E0D42> |-
/M <1C60D8A8C9B08A94284A0D047609A407E661A852E250B140B4157477FB2A
AE2E22210B2D780B692B0718211E5BD86C3DCF8087849BEE2B9F6D1D8621E40C
8FBE892AC1B23002BF18819E26C6741335DF8DA8AC82506D7051C0505D48DDFA
17EE84A06E07C05EBAC6174D600BACE071866247BE6C83F4CF28F6D6EE6A6CF8
A788C4FFFDBDCA978C2B0B201753D21CB7AF0542C690ECE8E7EDBE1B1FB29939
734E35E0ECCA8BA7FAEB58AC205A8A82A94C960A65> |-
/N <1C60D8A8C9B6E3FA234780EB1A04772A480C0BA74E47A01736C3330B79F9
4973DD24567A876D5331B1C1E5BDF74D24451B47112EB46B9EF65275AA4A1B84
3B86074DE54D20B17279B8B61F620808991404B9C81BB570221FC9ADD03DB794
BF42287F0E41BBE081B607E124D3995DAA3B69C88F88634917B7C5B3ECB04ABA
359AB76EF6C57846C442789B4408741761D97ABFED4F6595> |-
/O <1C60D8A8C9B08A946182837629000F56F09865179A66BE0CDE81459AF148
646A0C8953F25CD2632360B9585500530A45DCFC4514524F032073F394096348
EB9A110A91C0796AACEBDA9B5DDF5D03A70D245BC8BE0023531BFCA33B863C7F
245C98276C1AB30E6CF100> |-
/R <1C60D8A8C9B08A9451E2C198C46CF0D9EABFA9FD85792390C749BB6A88FA
7917DCB59892FD0C5009977DF79610519F2C9B4981160954D87B28067B64902F
CA672A1EA4467509C61E197E33F24FCA5EFBDFB729B55B5C4117ECDB5BECF27E
38689E84ACC3DB0FC92B91213DD4A7E85FA5734C4E13F3F79A0D32FDD8C93C62
AE6FCB0157C6098018B88A9792212F13C7D0A1033F2D5084E094BAD54582913E
E91D18A8548EFC0A88E1E44D93AF30413B31D6EB8A83F584066D1B1BAAEDC943
46D88042D1DFD12BF62633AA55A8138483062D74A9EFC7B33F2C50BB370D726B
76FB1D1FC63806D916CC235BF380> |-
/S <1C60D8A8C9B08A95C5897169EED99899F86A6DCF3CD291B001131D3BCB45
BF71748507542417352D5B30F63C60EB90DCF55005F88E95175B21D3219CD9E9
2E89E417B177D285600845553F66626D2225552D23A7697637BDCEEECAEA18AB
42A896E96FF5B3536CC368A5F7504B6C75D962A4B5F9534F79AC78DC99848461
42257A40DE257430C92806EBA73FF7D93DF0A6C207299E2D17F4071F9096D016
163F4D3EC1889ADA266D3682F2D99904573A5022A10E61069737F2D55F919F95
A33DB6DD2667321E4727855B58DBF4B1E5A294928E6CEABFBD34F296C1B758> |-
/T <1C60D8A8C9B08A9454CA4C75C5C97DCE7AB32777FAAECD12647866E7CB3F
CCDC541E37F2225E520DEDE695980D4012AD5B972BDABC7E7E5410E71AC63692
4E778B3131B6C4D1E76F8C4592AC311A2107F53DC1850538C9E487E6D5DBDFE8
027D7126BA9ED8B24E7379B57E474ACD298BF6B3700CC970D80111DD98EFC872
C24D0DA3C75DDDFD177C6D15> |-
/U <1C60D8A8C9B6E3FADD42AB2F9476BCEA084D1DF05959BFBD4842DBC964DC
B6D0983EB799CC8E9224C92BB6727696E1A89D45CE93DEE00384B973684479A0
B993B2D9C6C0A2AB61FE4FA10EC4C1C1052FAEB5DEFBF43031503D55B8FDF985
110C8D46F3C8553B8DC21E71453D00BFC15C0ADE3E30761C704531B8CEFBA6C0
768198D5D439F4284E7EA4> |-
/V <1C60D8A8C9B6E3FADD48816EB8424E8F57A41D8613F7E968C9BB1B02E143
FC7795C1D8E1E37AD719890D7D53E909D22C88A07AEFAFF169ACC297D24BF513
3224E2C95DFEADE8DFAF1A90741C19BB36E6F63644F0671C897D60E3A5D8FC19
B0E99BCFFB27E0637D9B26D4542E1B5687A32DF3215C09807526F293DDFD910A
C7449B1657> |-
/W <1C60D8A8C9B08A94DF93CFE877B47057C7AA7A39F5E120783EC688EC89C1
8D88E4CFACCAF32BE3FB943A3FA817A1C0529930AB0065CCAE1705346D415CAF
6F3BE8B28DBD2FE903E61186A32EDF38B838858E46745C2B7FA48B8E6E0D0986
BD7A8BA149207F3F0EA77A4EFE06A7122E8FC6C2B04A0B03DD31C256ACF417D3
9DB720EA63717B8AF030369F0ACE1BFC1BDA8084F86023424DB31D0A5F8EC215
16A92BBE98292BD36BE0960649A591F01066473D657A65D807C4E00EF2369AF8
93D97C00CCFC22CA894227F9117CFE788197C57F5A> |-
/bracketleft <1C60D8A8C9B08A95708109816759180BF1DB309B19B6ED9132
1AEA14D2F111E25129A9F55A9BBE788FBBDFF0F6C2244EC994> |-
/bracketright <1C60D8A8C9B08A95708109816759180BF1DB309B19B6ED900
1F8A271BD99A5836DA462259FB45E4CA899E39083E4FD8D8818> |-
/a <1C60D8A8C9B7A73DCB03313BCF7BA903D75A87DEC6EB34306A2C875A7B9D
6F03FA56EC184A666A965328412CD76CCEF3CAD69BC525A6A87F1F2D19F5D1B7
FD73AE7371FEED4E7F3CC2802C465D966135A2EE9CF8A0BF2840255B111E8037
10168818EEA9C2DFE9C99A20ABC767161183EAE437218D2E1239DA58B1500E1F
7F2D27496F0873D02EC47EEDEB84F4B0D78003FE0EDD73F083F9C52A46ED942D
3466EB983C6AA2296E8F2602B3A2BC810F850571C10A31EC74CF8C0EACAB287D
E5031078E0A963D32061> |-
/b <1C60D8A8C9B08A95C5897169EED96D271CC0A201580A85BBB6CFE03702C9
389AEE25CE69D1BDDECD4E28232C32A3113C892241798575F645E97E1FEF4D17
BABACA9B1400EB966B8CBA5BFC74A4181A1A52C4AC1E4D4BCB3BEFBF05CAB342
4B8B71500585C2C89CD37B890F00AF434789553E13269B7993EDDE63F9B6DB1C
CC49FF90A25496B9C07E5617BD7387C1694D4EBB8E59CF0CEF85691D4C91D3CD
1D33AB05DBBDE11A3BE1086B97B8CBA534FBFB> |-
/c <1C60D8A8C9B08A95B1F07368C45D8D2AF4BC563DEDE799FE18B66F38FD9D
86FB33EF8157737910C2A21CF1859082F165505E98A2D559D2B21F8D988656D0
8136253C2962AD8B7BF2A4CE3B3D77FFEE3AC8C805C2D68655124FEAC62FFFA4
B2E84874A6B6FEF5E31C416CAF5B3B1B491C61B5BE3DD5423D78BF> |-
/d <1C60D8A8C9B08A95C5897169EED96D33CB6A9013DDE3D04C2845E595598C
4E4627D0E1F97AFD1FA3154224DA0D119EDECEF82924766CE4492626DF7B3B07
C4245B263AA58C37772C982C7955B9EED30A1A264318D030C3D295AD4CC9C21E
7AC9D2948AC9CD001C0EF80B50DF932CF6EE69C321627BC51A66341B5399D1E7
8024F824DB5DEE83140E59FB88138D6F0F5D2F350BA93460F2F700A9AE6D35AB
E4DB962D8E6D84D6D606A800DD98F8807C3555FEEB> |-
/e <1C60D8A8C9B08A95B1F07368C45D8D2AF4BC97E4CB216B20786BB8409E5C
B08921F2042A459BE0DE80ADD86BD8D3FC85885973F3B8E71B750A7BBBCB2EC2
7654BABC4A421F19CAF38DA67236E15B4E8454D787305B09443F6B2507420195
7C1B86920E2C7CED0E614A34A438ED72C4B057D323DD16C0BE898DF1> |-
/f <1C60D8A8C9B08A956BA65798425CE9B0A78F07A04AF2F8524751F181F94C
EF756ACD6AB92BD091D7482415CDE9144C26B1697F8DF70FCF1DEFD4FA16FBE3
9206B1378E548C93AC587B3EF0B1ED3ACC74CAAD2CEA03512A889B4BA237C2E5
79B0E01D3D82622F69FB50659184006104BE20E13DAFC7793B241C1FD1A3880C
4AA41E91E3F86F715551> |-
/g <1C60D8A8C9B7A73DB58EA28807584EB19BC6EA1448A12312E623B90358A1
6C40D52FF50AB2BCF83396829D3E501BD0EAB8595D9693E632ABAF05A4D1FBD5
E9FB32E59BDDF670BD3805B1A8647E1D2641030D018FCD259301AC116F3DEE87
AA68CECE526FB7B8BC0206EAEFB580DA05969530F8D40CD15579447988D4CF07
5C24F15E32C0A9AC369D08351B0D49CAFF731E593F6C55EE74B16DE9D9A4B199
3D1CF0FF1D3A57A52A0C64F106D414FF112A5DA34DEE3AB850B6A4492C25D3F0
9EFC86EFE140D828B1F4BAE5664F14014926ED1A5AFBCC814A3428F143CF5FB2
88702BF23054721A3BAA8027EF0D34A7A361A40A12717277178C5820C35A1131
71DEF9DBB455B7A9D7BB98406120BD93C5B4D04664B09F3E37553C20D6> |-
/h <1C60D8A8C9B08A95C5897169EED9664BED359D179BDDBB0B44F78A354068
F1882593A360E640ED3246F83F38F17203BDBBCE194B9E0A6BE002DEEC6E590D
34E67EDA7804A1C1CA9840B3036AA2F9D110358C769BBBA6E4ABF35AA04B72BD
94DD37985D5F60B66C4561BE8C71200493330FB300D08910FDC33541EB4ED02B
C0E5DA36A3AFFA9C2A4E001E9049F0E519949606FF0894B2E73F51ED> |-
/i <1C60D8A8C9B08A9570810981675968AD25F24D2B3EAE33A4AEDADBE9B65D
A53E9F2E54B16133284CA9914BED3880C793207FBDC7926300AD07E6E54407B5
1EA082FB5EE3816A6A23A8296A947037E49B372BD5DFBDAE3E0626953F75EA84
BE757683B949F1DE2291C5796E30589D0B63B15E0D5680411C> |-
/k <1C60D8A8C9B08A95D222871B45C8170346D4B18ED19B2E2E03D20F864B5D
C5BD82CE186E8865448F19B50359E04C51718F8BDF55D412398F4EF83C05419A
DE886E1536E26F7FC0E53312F110D79646DAD9F1D10B32AFE3698557277E72D5
7B4C7DAD8FF58DCEB52B83B453E4BE2D48D6882B0AECFDF4A8BCF747376E22D9
81F8E1C7CD6E92891501D7EE1AA17A160448D2B40E0899A7693FEF353371FE21
8D3D2DA9622BE1E9110437FDF2C62C6B642301FAF5AD> |-
/l <1C60D8A8C9B08A9570810981675968AD25F317189905083B97CD6CD1B880
05B79B666989E13C0F8D0889AD0162C7E87274D188EBBD1A911FDD0B6E360AA1
C515725198B9106B157680FC> |-
/m <1C60D8A8C9B08A940B724A74A01E6B7E417A0EEA9CCF58837F16A4309279
D4C1CC08359D1FA7FD10E0AFA90B9132C47CDD4E6827D8017CAF4E5B65090CE2
B069620DC38FECF904BAC042B28FA35A5D6632CC2899B92571CA76E097477A12
37436144BDBB6157A5C5B473CDBDE040AFDE31D37159E83AC75CF12EA5793A01
76A3A422381930CC3B1A17BCD95B6EBD3104CC40253F80174C89524325EFE206
A7879C7C9E8C1F8E9C0ECBB2F9FBA1A090EF980204254E4E57D08097CBAA9E99
7A6E9DDAB21EC6126AA86AEA3B08AD43F991C523777A8E82724E5CA12D46D05C
7B51942202D1FD96F0> |-
/n <1C60D8A8C9B08A95C5897169EED9664BED359D179BD38846B55E34D4CAA6
E85E9CF3F20D5FF6B35F1C9AAE2A542B7B24E087B6004A4C7219997095CC0DD0
7A15DB83B5FEAD13F209441FFD364AD3DBF6E16129F3599BACA005A523490ABC
41E4DF320ACE384037EE1D352E3FAD8A9E2CECBD75A999F7B655F4FFBFAC6FFF
84029A8DF710DBB0D7CD4C1D20367E79BC4E312103DCC482005590EA2F1652EA
57C34D10CC78642AFD> |-
/o <1C60D8A8C9B7A73DCEB07E09D16841D605E4F67059E6B258F546B80703E4
CDAF20027B900118209D5372F965F2045D50C02A29110A048C891DEBA3210CDF
C5CDE2309C0CDE0E4855E9F6D8954C4C68826A14AD2E4C6227A036D85D304D6A
96FEAA92DEC3CD1B9F4AD57B5F1EBAB070FE911461A7D5B958F5> |-
/p <1C60D8A8C9B08A95C5897169EED91609D9E4D5F91353A54E37DF51998183
52315911AF5324EFF8F803A0D7623A2DDCB047188B5B8F28AB77A5ED34430D99
57B9E0225FBFAE612AB3A16746E264A6930D63A3F157DEFA872D2CA520250AA3
380B48623F26CA3F7D040CB163CC4C6240013209FBA4AD816878F179C8F27320
EBC05CF6C42FFA533A0E8716E243D2941CFE755ACC6E312A0F393F2C290E0F1A
CE85DBC680C6195A83A8DF92> |-
/q <1C60D8A8C9B08A95D222871B45C8677AD60861C3F92152D679EC046FD508
04EE7440261F7F760EFE5BDA37735333B634AEF0E39D128EC81BD50CEED93A00
645B5D6515E247CEC7B0C61191F67893C528A900762C59FAEA845D61ACA5F7E7
B106031460E4734AA4EE85618EEC80B1ED1E754561578DABED479BE37358B263
04EF9BF65844BFE482C31643A7466E43F6E32A0E02E6EBB6652EB71BB9780CA6
2F7BC7305363> |-
/r <1C60D8A8C9B08A9584DCB847BA986212E50A1268FF1FD1FC6504D9F4D673
BD97E004E27192E1359AD741527FE014B82A8709E1D277CF1F73EB8831CADE61
1D9AD525BE07EEB6589229F52FE652CA10A278AC096BF0A2B010C8B215B1ACA0
BBB8EF8E3C77EF77F60B5CDD1035D115BEF1087A4AEB28A5F886037DA56DEC62
DBB1D4F1AE123A1AD0E8FD48681467> |-
/s <1C60D8A8C9B08A9586D4F7B21AA9B0967A13D9D7A42FE340F518B826828C
B1C2BB6756CD4C9284475BF78FAB574767246E1F9CBC21AACF1F3C97D1790131
F28F8DFADB3AAE0AA727045B30CDDB07BDF05EDA5C24C0AFE386D470551D7E8E
D902488F32C5E29D2F3E7F01605EE454D8B7A57FD0F16F8D3A10D6235D828477
DAAA15E6231D70C2BB9D9C0718FB249BC89490F9614317D9D2089D530687FFE9
B32E2EABFBD5A30223E1691D4FE59FFF3C416D75396DC2C2F68135236C16492B
80BA292D01981169C65CE545147B052951BDA4BD86> |-
/t <1C60D8A8C9B08A958B2129D6E9766AD6B3247B9CBDFB0724765D43ED23A7
B2BC7B24077C209594776C48799589E3DF7269407A6893D4C106057122D99E3F
649ACAFBE1812EEAA6C4DCDDD716BEB7694626BFFCAE715C15EF0FD8CE9F6FE4
E96B03> |-
/u <1C60D8A8C9B08A95C5897169EED96D33CB6A8CCD6F539BADC574F30FA019
2FAAA0351E8C93175F4B6BE4D2DCA8A13E4F01BEC5788441B5C71C1247369B6B
73137454B1C207EA4F43D533FE87512BAD8DD4F3DBBECD9A7A1CE3F33A4D3F31
6952FDB339B4B6A937009D6EC9821D8553981B7D8AABC3E750369071> |-
/v <1C60D8A8C9B08A95D222871B45C81C126204E8A3F3EFC2EBF937B1E5F2B8
737EDCCFF78DB8693FA0E7B559CFAC0A233112105FC1A8807ADD3013D4AE86C4
38318F1223CADD606642DF7E9A8EE9BE743E975DA759D856D52F7E927FE33606
3979ED38AB2E1EA4CB4F371A1EB04E6C5B864C9DB5271435AB2DE7D9DE15A6B1
D9E3FD555F015DADE467> |-
/w <1C60D8A8C9B08A9454CA4C75C5C9761F27DFD501BA4813FE991E533E1CD1
E174DB2ECA59D495EC56B0C1FD43D089BD170DD220487C38F20C192FAA7E2E88
3AD5437BC552CE37BD6C6BBA40409BE02939A8B895FF98709899D61A578F68A8
22D6CFB7A000AD2B69212700685F8E729740E6656D3B8D43A0C52B18628B0EFF
5F05D1944E33A86827C6670A3438CE653DA430AB3E54D22481FDFA780C4812C2
F3255AA0E07A5FC796A8653D62150A6CD8B7FE4B68F43CAA66CB6512EB54E359
E67F4D5FAA2BB87B8812835557ADA47955DD5F> |-
/x <1C60D8A8C9B08A95D222871B45C8170346D4B3692E8D5307651DE3271DD6
AF0FFCDE284DD9CDD3B987BD9A4951E635C7A5CDCF53A699D8D2BA39BF571FED
C61B4760FA01C102B3CF6C44B24A57107DFFEFB711E00B7E6B8A7F332F9AC2C5
3243312E3CD55C94054BCA0B5D37362E138F5DD97019783B5271FD96258D5354
389532FB5D3FC50CB007DF880768FCF0AAEC6D6F5D8AB1559D6270DF0761EAD0
57A9F39E9A718AA16D8D8ECA90D61565C41A9B86CA057EC652FEE1927FFE969C
A046D06A10E75C83320EEEAB290370B870EF0E26D64C8EE9F9FD2B5549> |-
/y <1C60D8A8C9B08A95D222871B45C8674D920EF37C9F679699CE0B0FB82274
530CA6994E4FADB5C701717EBB278510CEF9D9EF1CB9FAAD7A4852BC3264781D
C6E288589EC6BAAB146DF34989FBC4BF92E31D5C616C1050CCC8D58166B328D1
E315EF5F39AF721DC6173775DFB26E6B6D40709A2BB053DECCFFF00649FC51FF
5F341744BBA1E71297E598A51054A43B9F951D7105485742D0A3BB595676EC69
1F5215F9D0DE2FC2C87BF5CCF8146FF6F88E> |-
/z <1C60D8A8C9B08A95B1F07368C45D864DF4474A20871FC664B8852059094E
95B1AD892B88EC35B7805C7F08622DA0E6CE40252085D0FCEAC9B69DEE7AC3FB
4801FCBDCE2F88570AA73B253F1D5D5B25E723A6A6E28A8B6198E25FE08D9384
A6F44E1422CD02B5> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVY+CMR10 /PFJBAA+CMR10 findfont ct_VMDictPut
/JXZOVY+CMR10*1 
[11{/.notdef}rp /ff /fi 27{/.notdef}rp /parenleft /parenright /.notdef /plus 
/comma /hyphen /period 2{/.notdef}rp /one /two /three /four 
5{/.notdef}rp /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /B /C 
/D /.notdef /F 2{/.notdef}rp /I 3{/.notdef}rp /M /N 
/O 2{/.notdef}rp /R /S /T /U /V /W 
3{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /q /r /s 
/t /u /v /w /x /y /z 133{/.notdef}rp]
JXZOVY+CMR10 nf
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
106.557 139.436 mo
(Figure3:Visualizationoftheurn-drawingschemefor)
[6.5036 2.76762 4.9813 5.53525 3.90228 7.74489 4.98131 7.20097 7.47195 2.76762 3.92918 5.53526 
4.98131 2.76761 2.76764 4.42734 4.98129 3.87448 2.76761 4.98131 8.8528 4.98129 6.36215 3.87447 
5.53525 7.75487 5.53525 3.90228 5.52527 3.33047 5.5253 3.90228 4.71231 7.19498 2.76761 5.53525 
8.29886 3.9292 4.14838 5.53528 4.42734 8.30182 7.75485 3.04459 4.98129 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: ENXAAA+CMMI10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ENXAAA+CMMI10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /alpha put
dup 14 /delta put
dup 58 /period put
dup 59 /comma put
dup 61 /slash put
dup 62 /greater put
dup 68 /D put
dup 80 /P put
dup 81 /Q put
dup 88 /X put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 113 /q put
dup 114 /r put
dup 117 /u put
dup 122 /z put
def
/FontBBox {-32 -250 1048 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 442 453 466] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [31] def
/StdVW [72] def
/StemSnapH [25 31] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
18 dict dup begin
/alpha <1C60D8A8C9B08A950410310524622FDC055E7B1779BB715AB8B7F3B2
0EF8CE7FD918D87AE6E82B3F60A4BB84684D90A850DC4AE2F657CD8E9CCB6837
2845A0BBBEA4569AA7262FD8ABB1368605693DD0FB29B248EFB9A5D08C920C46
998146F851FC5D386FD77D0F17BF2271F2448DEAF72EB2E601D7C68D51FF675D
2D5E4272B793DB317A859E4EF166816BB5C5C768CBEC2917C9F1D726D1D49A83
E61B77BFC914E3538D5DE0AB9DFF17C4D177262F17> |-
/delta <1C60D8A8C9B08A95B1F07368C45D7269781E781CCC13C0A133FD1D91
48BDBCCA985454A9A4C1243EEEA9E5059E9C84EFE78736AC0C01C8AFC8B3EF45
3E41058731ACAC8E3708AA29CA2B619335778119E005699EE08BEA49AC1BE1D3
281E71BC6C706329231DC803F144C14F5BE2957831AF8CC11D4A4DF44D0F0424
5457CCDC1865BEF34AB2A83193F2326C6CF9A1D48CDF39436CBCB41824895BC0
58> |-
/period <1C60D8A8C9B08A9570810981675968F2C907C696DFE9BE69433F613
9DF6C45B8165ACC43B6E0B309859F778ABCF0> |-
/comma <1C60D8A8C9B08A9570810981675918D0BCF1CD202F5F15202B7A6E1C
EF0947ED02AAA4C366CA78E08C39B6DD0700901548AC0500952501F57D43D699
1493A7332E9D6FB3B92D3B17F7AFEDFB43B1F0997B51EC481BBA2E83EB27> |-
/slash <1C60D8A8C9B7A73DB56225352A24C6E389DE2B55CA07FB5710C6DCAE
04F94BC5CAA5785E17ED28271B55834262FD3846E502CB37AB886C6947131546
D475C5E688F02E31C309> |-
/greater <1C60D8A8C9B08A946182837629001EAC54FD1281F4A18BF467EE8B
FE80C74F8AEF47C33290889532931BC2B0E7AF9BFF656759ACFDEB3C59475C85
B40C66CDE6BF435CFE39A5EFBF07BF10FFC0CB2B03B5392FD998D9DB0CA603C2
FF474CC767313D72> |-
/D <1C60D8A8C9B08A940DFCCE923E8E99B0DE594BB0556C2DF6F1C5170DCF1C
33BEEDEEF37CF3D80E507FDC8E7E37423D705C2247E0E0A8FE10C0FDF20FDA64
D06D687048CC7664230FBBE9054D83AA4EED1AFC0154695CE06B18069C8088CF
8B732AFC5C9DB618A11098144276B3E70C07DDD78A033517353032B46C8BA498
D296CBDD2D491D25FAD18588F46A09093E88D536ADF4E252BCCACAD5CCDADD5A
FB43D1C2> |-
/P <1C60D8A8C9B677ECB1F5884EF202194D27AFDA20C9C5AF9717AEDDA8FACC
FA5CE5F06E7E735F3308B4CA613864C8BB9E998C2D16EBC620C6B43596E1DD40
839888CA51D52E708072E18AA08B28E3CB1E6EF21FAD99F857CC70EE52D6669F
D4FEF6D378C3644D9B3C83FB9CAAC301898C0568C7EDDC149173AA0D66326455
24A8E317AEDEA6E137E747B687221C612ED78EEB9D5BC26FBD4832935A8A744A
79B07DF310B6BFAA137B534BCCDB0286BC5B1A9F8DB00E7C57> |-
/Q <1C60D8A8C9B08A947AB7D3ED59501221308E57E33CAC3A52A22F39008EAB
9E27249EF22C483EDADFC54FA3D0F25A360625FFD3C8D34193D50A1EEF254A38
B6869128D0F8C6A2D68541A1B2FA2AAEE86588D5693079E9289932DE41D9DB82
F396CFABF648D2D871BE84B85E79015F543EDB72A0AEEBD29AB9B3021F4D1326
FD5BEE982FD6225E0AC41051F7F2FAEA6DACEF4EDEA8FC3AE4B0A16D268017F3
1355E0A7F18C07F2A7FEF32EE696BCD22AFACA96ADF8A306CA404C4C97912D2F
60A5F01EC942D13D82B5B629913749432485FBB2A8A3DF6E3959B78E1AC0534C
C960C79442A886> |-
/X <1C60D8A8C9B08A940D0B235317E910C4E520AE0EAD089E5EA45AAEFD9916
BA68992473BF411A91FC94EC432AF8D53B096E15DB5FD4F7F74AB4F7801898DB
632DDE88D09966E39E3CEF5917637245B1E09C5857D10C6EC2C3B72C44156B22
7947D2C2BAD174D396BBE53553C66510F41FAC76CD58165CC75DD8722E65FD42
8D2AFDDF6DF6BC5C2C63E8AB41323AC9A76D2739893F6401AE8CE50C05E8C70E
77CF6487AF1DA2C7000289E3D653D3787AC4978703AB3C6FBD1F3D909D4EF8A1
2855297A5F9083614E9C43A89F548F0712B48E556E9FEF189D9C6A70021E4EBF
53EAF77F4039506D9FCE722142D585A7463C9EB85BE70DA040E7BB7882A3ABF3
6EAD6E18463FDF95C255C8498855B33CA34FA7CF2D5FD50AF7BCAFE713C873E6
A7CD92AB6C145BA49B6F7763645819BAD2FEC5D156C1F779> |-
/i <1C60D8A8C9B08A959A731E0C497E4A92ECA7E1F9E8F27B95417557B68F87
3C7421EB2FEEE517FC7439284378BBF3ADDCB73BA44A09F971EA54D0742BA8E6
E7D163B9F048777BA2BAC0DF08FFCA0A02E69EB8CCA5A05D76188823DFDB0F10
2FD5B2004BF0359C21E04A38EA6E3BF721237E98B66F7D3C7171EB484B24CF2E
F1E8FAFEF505A11765C6DCFE3B2F13B0C3B87D0934CEFFB60BB3C84DA0FACC1B
8F5C53F864542A29453ECC16B47856C772CF90> |-
/k <1C60D8A8C9B08A950870E36747CCD2F069BAB4078E293FC46118DBB0FF50
21FD267E305A93E3B9EEC42C57CCDC98E9085508A0279B5E924DC8D8249FB392
C042269C59395DE18C56A360550D8C0ED9C3AFC2FDA4AE58AD909C542F1D56B1
61C5179601DBF5C94444DD0B9F055BE088FB6B642BE14831A86C5BEEF0E256B3
9D4AC46C4ED9DF4A354293CDCB8A1813369714C569D8175330F277A54A760D07
A53A3C00B10B1764A5E232EA1C68F5C304B41316F75BD759DC633B0BA29C870B
363D372EA12A78A4D533B5A688CD4860D786992FBDB0833174D4125943DE5B62
FF7B77A96423BE665CBFC96F04F996C6434785D817FA8F95D8BFEC21E11687C7
716A7F64FE23864587A3> |-
/n <1C60D8A8C9B08A95F6672DA0769C65052F6FD555EA9904981F5C5011D740
0A5082B35BECB587DFD6DA7F0BCE52C1D53643C9E5AE1EE7B3F76FF1421B27ED
DE10BCF56E3F98B875933C40A0EC29291E4FA9CC100C10654480D1C5949D7B3B
834EB7CA145C0AD116D2C53ADB026026333E417BD5F646F1A1550FAA50540606
93ABC51D8FFA7F7CF5FBD69164919B519F5CB3072B10F398518E5CC1B3B04E05
3B4794BC00534E2F40A979D7BE44E289EF0DC9F2A34D86ADD625206A1D58B4DA
8C2F407798FFD1DBD3E91F50E0A8469210388B32F7CE9E57D8CB65A5304A2570> |-
/q <1C60D8A8C9B08A95B25AADE07872936873F15BC637AB9FAE860A495364CB
E24AED381E47326FC805BED7EA5492CCD73F0A1FCC71E7FB0AE39D1B23506018
4BB567E42F56313EE417C8CEC733823094B9D5FA7D5AE1E3C8D6EE5766960764
77DB9F4A008572796140EDA04FAF291509535D2A45848AE4B63F0F0B7D7D418E
18879132B305CF717DA36F21B0799382F70512F20A4528CA1A2ACC55A158ED52
6AF8E29CD7950ABD1F5425715BF27997C61FC3A0734599C5> |-
/r <1C60D8A8C9B08A95AC58E8D2403E8A48F1C03E9027F61BFB867347129654
7AF094AE9279E9361ABCB6F7761430FE2191CFA12CE2676C3F982E04B59EBD91
111145EA4DFF8343541166B1B6544592B781FA2C28B3B81B222F2C5AFEDBED03
0CC370AA25DEF1C935D4D714315BA75AF844DF398FE40F58CCBA91B2DD6A07FD
949AABF37AE2BE6856318D80D84DE7E25F235626AAE961E57A73144F96042573
ECE214AA6784C481420B569D> |-
/u <1C60D8A8C9B08A95C36E4BF20596AFCFF530436408BF7BD885B9A2FED5E6
AE738659B3A6B131915301D18F38E79526ABC395721081579A82A8EBEFDFEFBF
36C43ECCA41BA6CCFC6B5F6B0C4BF7CD5BD76D8C83F0D9756C21687D21454FA2
62D6AC21A944F9FB7ECA74FD9E9956D48677D6F9529CB904DA2EE9CA6199377E
326F2C9CE5CC32403F12A4E707D48E0496E2FAEED927948FF141F635C5F47578
85E7E4CEE4956633528582ED94A58D7E5A51FDBCA53078012202F2F05FCAC38E
A2747C9C8960AFB37669E5976A66941FC883E68452C855F57C> |-
/z <1C60D8A8C9B08A95A9502A13409262602E087A07B86282409C496255E152
F668643D04D4102FEB310D33DDFBC107CAAA8DE1B648AAD82057EDDFDAC07D62
456CA3C1E49161BA49DF3074E4F2ED47DDBEFE1D8A5A2222D791EC335788A871
AA8842709CF4ABB22D4E78DA494334A7F5EE98899930042F1164C8410D71B095
FD2178A2138CBCC4B11E7BCBFA5B4E0D96B03990E26B292783D783A5E074179F
62C1B91F1613C4324FE2C54F2F956A35AC66E1DB2D4F89A35B4807A032786859
1443750B81E52F0D261213D9D410F8A6ABFCB88EF322E0D0A237EBF03AD9A181
18A5B6C0> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOVZ+CMMI10 /ENXAAA+CMMI10 findfont ct_VMDictPut
/JXZOVZ+CMMI10*1 
[11{/.notdef}rp /alpha 2{/.notdef}rp /delta 43{/.notdef}rp /period /comma /.notdef 
/slash /greater 5{/.notdef}rp /D 11{/.notdef}rp /P /Q 6{/.notdef}rp 
/X 16{/.notdef}rp /i /.notdef /k 2{/.notdef}rp /n 2{/.notdef}rp 
/q /r 2{/.notdef}rp /u 4{/.notdef}rp /z 133{/.notdef}rp]
JXZOVZ+CMMI10 nf
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
344.36 139.436 mo
(Dir)
[8.52695 3.4321 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
361.089 139.436 mo
(\([211]\),discussedinSection2.1.)
[3.87445 2.76764 7.19299 7.19299 4.98129 2.76764 3.87445 6.09515 5.53525 2.76761 3.9292 4.42734 
5.53525 3.9292 3.9292 4.42734 8.85278 2.76764 8.85281 5.53525 4.42734 4.42734 3.87448 2.76761 
4.98132 8.86273 4.98132 2.76761 4.98129 0 ]xsh
72 168.473 mo
(ofthesamecolor.Asweiteratethisproceduremoreandmoretimes,theproportionsofballsofeachcolor)
[4.9813 6.39204 3.87446 5.53526 7.77478 3.92918 4.98131 8.3018 7.77478 4.42735 4.98129 2.76764 
4.98129 3.90228 7.27072 7.47195 7.27661 6.91602 7.7748 2.76762 3.87447 4.42735 3.90228 4.98129 
3.87447 7.77478 3.87447 5.53525 2.76762 7.27663 5.53526 3.90228 5.26024 4.42735 4.42735 5.53525 
5.53525 3.90228 7.77478 8.30182 4.98132 3.90228 7.77478 4.98126 5.53528 8.88269 8.30182 4.98129 
3.90228 7.77478 3.87445 2.76764 8.30182 4.42734 3.9292 6.11505 3.87445 5.53528 7.77478 5.53525 
3.90228 4.98129 5.81421 4.98129 3.90228 3.87445 2.76764 4.98129 5.53525 7.27661 4.98129 6.39203 
5.53525 4.98129 2.76764 2.76764 7.27658 4.98132 6.392 4.42737 4.98129 4.14841 8.88263 4.42737 
4.98132 2.76758 4.98132 0 ]xsh
72 180.428 mo
(willconvergetoapmfthatisasamplefromthedistributionDir\()
[7.19498 2.76762 2.76762 6.08517 4.42735 4.9813 5.26627 4.97932 4.42735 3.90228 4.9813 7.7449 
3.87447 8.29884 8.30881 5.53525 8.30182 6.36215 3.87445 5.53525 4.98131 7.192 2.76764 7.25668 
8.29886 3.92918 4.98129 8.30182 5.53525 2.76762 7.7449 3.0446 3.90228 4.98128 11.6293 3.87445 
5.53528 7.74487 5.53528 2.76761 3.92917 3.87448 3.90228 2.76761 5.53528 5.53522 3.87448 2.76761 
4.98132 8.85278 7.61044 2.76764 3.90228 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
358.565 180.428 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
364.975 180.428 mo
(\).)
[3.87445 0 ]xsh
86.944 192.383 mo
(Mathematically,we\014rstgenerateasequenceofballswithcolors\()
[9.13274 4.9813 3.87447 5.53525 4.42735 8.30182 4.98129 3.87447 2.76762 4.42735 4.98129 2.76764 
2.76761 4.4314 6.08516 6.91603 7.75485 5.53525 3.90228 3.92918 7.19202 4.98131 4.42734 5.53525 
4.42735 3.90228 4.98129 3.87447 7.7449 8.30881 3.92918 4.42735 5.25827 5.53525 4.42734 5.53528 
4.42734 7.7449 4.98129 6.36215 5.53525 4.98129 2.76764 2.76761 7.25668 7.19501 2.76761 3.87448 
8.85278 4.42734 4.98129 2.76764 4.98129 3.90228 7.24673 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
374.505 192.383 mo
(X)sh
true set_gvm
%ADOBeginSubsetFont: VYJAAA+CMR7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /VYJAAA+CMR7 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 43 /plus put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 61 /equal put
def
/FontBBox {-27 -250 1122 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 683 703 431 446 664 674] def
/OtherBlues [-205 -194] def
/BlueScale 0.04379 def
/StdHW [36] def
/StdVW [79] def
/StemSnapH [28 36] def
/StemSnapV [79 95] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/plus <1C60D8A8C9B08A9418E0DF008700B730D649D50F0D58B6F6DD9B50F63
60492BD3BF2241D85E5E08C45E094E3794B39CC0200DA4DA0DBFC53992B23FF4
3DAF5065165F50BAA62A1FA47C9171A913B91051DFF516E5D7719BE92E5CDB7D
42A06A4656B> |-
/zero <1C60D8A8C9B08A95C25148D4A67F69E30A5E2E68739C66430CE9C80B1
17D356E6B049D46F4B92CAA553A9B134551915D583004A2E168290E2EA7A1D2E
BEEF2F6191D2DECAFE6B7FEE755131DAD42C252CF3B9D1F495CD04CA729594BC
959DCCEFD3CEBDA487CE7F4CB3AF00007678C40E3EBD5D978707EE8CD3F292AE
B3E78ECCEF035CFEC> |-
/one <1C60D8A8C9B08A95C25148D4A67F9511413D11105417B954A52A260BA5
871A06DFB8D8919F004ECADDCCFBF12243241C909C4118AA85F2539B7DC39D45
82A350A3CD25605077D4A323A8EBE0C72B60A7367C8A601B524B06B54D65D101
B8> |-
/two <1C60D8A8C9B08A95C25148D4A67F955E56DED8709BEAC975B0F2E8A32A
514F6D9222A5E47F7F9AE809FC929439005D711A5946815CD69262A805D0F899
C8EBB5027F0DDD5B81DF529E7E3811173669493CAEFC29805ADB063CD3E32E39
72B91F3A4784DBF342B608A84378E8760E2174C16BC88D5442E7B57E279222AA
7C3147D75D44707368> |-
/three <1C60D8A8C9B08A95C25148D4A67F69EFB9DDFA5ECA5AE37566D87066
172F8CABE2B2CB84CA762EB5E603C8A9A699CCCFA6A0578E3DA76E6C9E7B5A84
45F01D818A380DD4AC46AFDB5422B8800FEF2E8AFDA86EDD8199C34D64992E4F
43992CF1D54B07E3F575480A9A0B868375A4E2A9893BE0AEBB713690AB6C5B93
E6D8D619357F90F56F58A8525CC0A1BD91DA9365507B440F549B60D4E7E5CBB3
769D4C82F061F9E20A25AD23418551374D804A6B25C8CE003D> |-
/equal <1C60D8A8C9B08A9418E0DF008700BB7C94DBF811A5AF73C0C9094F76
2FBF4F0E406E5FA7B582E8085DDA8B77CE8DC831505094BFCBC50BFFD2D35F65
8DEA594EC9E889C56C365D24583F9945AA2ECC13C02415B8B3> |-
/.notdef <1C60D8A8C9B08A958AA685092D4752> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOWA+CMR7 /VYJAAA+CMR7 findfont ct_VMDictPut
/JXZOWA+CMR7*1 
[43{/.notdef}rp /plus 4{/.notdef}rp /zero /one /two /three 9{/.notdef}rp 
/equal 194{/.notdef}rp]
JXZOWA+CMR7 nf
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
382.759 193.878 mo
(1)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
387.228 192.383 mo
(;X)
[4.43137 0 ]xsh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
399.91 193.878 mo
(2)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
404.379 192.383 mo
(;:::)
[4.43137 4.42142 4.4314 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
420.43 192.383 mo
(\)asfollows:)
[7.19202 4.98129 7.25668 3.04462 4.98129 2.76764 2.76761 4.70236 7.19498 3.92917 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: IBKBAA+CMBX10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /IBKBAA+CMBX10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 58 /colon put
dup 66 /B put
dup 73 /I put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 112 /p put
dup 115 /s put
dup 116 /t put
def
/FontBBox {-301 -250 1164 946} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 0 686 697 444 453 655 676] def
/OtherBlues [-201 -194] def
/BlueScale 0.04379 def
/StdHW [47] def
/StdVW [114] def
/StemSnapH [40 47] def
/StemSnapV [114 142] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
16 dict dup begin
/period <1C60D8A8C9B08A9560D4C2F3A74D92838E83B7DC14B89478B799496
0CFDC6D2144A34A20CA36052335682902BE7739DD> |-
/one <1C60D8A8C9B7FCB6AF8364FFDD07AFC90369AA09A92DA6A5FA1F27B147
3229121209969E0325A5375000F01DC5F64BC963E21B3BDF52473FC214BF8832
F90F8117074A5E7534B453F93CF3A66D18273E9726D0A516F1AEB2FB2E> |-
/two <1C60D8A8C9B7FCB6AFCECEBCE3C644D61BF80000A7C384C11F8205E5F4
EA22B1F87E7A5F44BD17A6CF109FE3AE9F709DB8358F13296E50DD9E329B12B6
2BE9C6512386E96E53EC60D92469DE71E7B48CB1868A87C7273B968AB345F370
A417DA2B11E60D38F3166D980E52D10C3DB1EB074C4E9FB27FFFD375F4B1AFB8
A82D569603EAE115AA23BDBA> |-
/colon <1C60D8A8C9B08A9560D4C2F3A74D92838E839CD10B5F2E89DEFFDE1A
C7B613A4FD845CCA9FC62F87825C132DFC991C37EE277DB4A45132955C172F95
186C5797B64B0868EC1CADE0DAFD3719564A> |-
/B <1C60D8A8C9B08A9471BAD5272C9E7E6EB07D09B6B4988F230D202CB35C48
DF80240AB4529B1AD946E2519B3F9BB5DE8DFCA1C81968784B411F7F16F7E1A9
D8E23C04B83CDE68B586734B1F94A3466EC1CD3AD9606A145B6E208D62266F6F
77CF9E2F8FCCDEBE8957AE0C3D1ACAF4AE72661F45819CF3AFE19DEB1CE109EE
5DDA47D72C1769435E3117BA430742B378E571CF6D430277EF52A2176F32FB99
7FC600907168A2946C4C> |-
/I <1C60D8A8C9B08A95B62FEF2B15E3EFD000A4F3FD7D09E30BB1973BD9055B
3AA60F74D931AE8A3A2CC649CD925320241D67627933E41E8FBF610C4B3846FB
E1F2710D26A6F54D6D737BB47BFEB39BE40FCB40B5F4> |-
/S <1C60D8A8C9B08A95E5CBCB515510AA0625088F9599A7043FF1D3049F5FA8
456DA3999252F1010015FC3398F03DAF50CC87EDAE118F47C35A8947F9CA41E7
3E935DBC9F060E992FB8CCF79E5BB5BD4515656D0F72FEFA9A9B217FB1C04E0A
D5C8499DE57AC390E067230C60CCBBBEE52F346B5E4F9227D38A653DCF84CE0C
926A9B12D0F46A8442ECAFA542E23F49462C9F57A1E02423F9856F2EBA039C9D
460497AE1092F041D8579498BDA9C1EBC2926EB94462448950E8BB40709060BE
94890930DE70AADA9ADB9F7AD803BC1C2F69079C6E51F8> |-
/a <1C60D8A8C9B08A95C60527548E754D765DB4EDA6BA0D2CC6D8A620394D95
5731400D0093175DD4FDCB6F936DAB2E93BD9C1B54BF99F619E92F88F8093B57
6575F38778E5971C238BB03705C8902A6FCFED1FF202619A2D8A4C3FD818942E
E7E0400EE37C1268C755A54355454E010823DC11303C9CDCFFF1370DF47DDE8E
0505D81ACB493683AAFD9A5B8B94F66FF9ECA66884B26F31C72D900D51753830
4DA83D95E97AC104F2FDC53254E575E01E9C7E8025E9> |-
/c <1C60D8A8C9B08A95DBED6976208F60F2310390AAF124EAA4581F4F487CED
CEE3CA14BFC3065A6FE6ABBFDC639458E8C312AA39693F6B3DAE87C446B0319C
D0923A24F435BD3539A2AFA41A509953E706070D67C20CD7BEC3EA013E9219DB
9A60F668737BED9FA131E6A23E2BFC2B1E7B0317C371B488EA74CA6E> |-
/d <1C60D8A8C9B08A95E5CBCB515510A1C1813129980C781B5428CBB25C67CC
DC52940BF0C1305B56D2C3CC86238808B00266AD865987A6B9F196EA289C0F98
71A33FAF2286BCCD306D6507B044BDF9DCC4F3B80894682A801755F731B17E9D
829B5D562B454A9C59E272627254120FF07AB977C1DBFC7D9D44F8BC0A5CE323
AC7930F87A2F0C0F72810860D4088FEC5D521358FCF960D28B0AA5A72A45BE21
BAC494B3> |-
/e <1C60D8A8C9B08A95D1DE8AA71D3914AC9DDC5BFDDE55301EE17DAE184B08
E53C36FBF9A44FDF3309DBE08895DBFECCF103737D7326528346FD01CD1D9FC3
874638E8C50ADE3B494897353EB3188B512405DD1BA5DA59E8C179230F7C8D15
AFCEA2228DAC03C77D614B36A41126CE831B41CDF160A67B175BB36C52353A72
5460F4256C> |-
/i <1C60D8A8C9B08A9560D4C2F3A74D92CE39CCD31B31259F7AEFD031A58831
B571C841E0136D10024EE2DD1AD2E3360D2309F9F321AD6D54682C9AA0537A81
01D580386AD2DCA0A7052F8B37637F4FD33680FADEDC669BC7E5D9EBF1E1DD4C
25DB61CF6B56B045016A365FD6FAFA0816F527A8AB8877> |-
/p <1C60D8A8C9B08A95E5CBCB515510D179DF8830C0FE0DAA36CAE496232DD9
320181C9A6995F2F56738BBF8E876E059181F7267BA24B17B3CA87D87E4B23BA
F64D83B8F1942D5A555716383D03D1E996EA761CCC3457E6DCE95A266BC026B1
61A395908CBA36068AEB0B46640F5357856F7C874758E5202A7EDF96B9238439
C4643262691DD589E117FD724FC17DA066E62232D0B4F0D60AE667A93AB94DCC
D6D6B167EE290F42F5EC6B83F3A4714E2D69E6> |-
/s <1C60D8A8C9B08A95AD02A60F56C9F20045DD480B06A02EE70DA0161AE8B6
CCADB7B811C8C4C6B3BA616AB3A0F1786DDAEA0A735FBB7FDC60DE25731C55F7
15C309995C9E50057A129D6BE1BA1874B5947C490157FFB70D4531AEC6FD31AC
BB81A0AEBBB115E29EBA5BAB5526F95B457672892E8F3BBFD2528A620F1D4FF4
51BA6D73E180279956A252BA25A642C0575706989E23F3651E112365A21699BC
D47799CBD3E17811910A1B5B186572218A0FAB55667392A6040739C53D742D3D
740FEE418C3EED6FB55A0B618AC42A> |-
/t <1C60D8A8C9B08A95B289C730516FE0D4538DFB1DC5F03AB2A5BEF8745C1E
35FCB76478399DDF840FECC5C8BC224E97E749A67D1075F82DCF09295ED81077
EA65279BE6F78FD796F07930E30317901988D07E2D4BCA052A3BE91AD76108> |-
/.notdef <1C60D8A8C9B08A95899606B6B060A7> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOWB+CMBX10 /IBKBAA+CMBX10 findfont ct_VMDictPut
/JXZOWB+CMBX10*1 
[46{/.notdef}rp /period 2{/.notdef}rp /one /two 7{/.notdef}rp /colon 7{/.notdef}rp 
/B 6{/.notdef}rp /I 9{/.notdef}rp /S 13{/.notdef}rp /a /.notdef 
/c /d /e 3{/.notdef}rp /i 6{/.notdef}rp /p 2{/.notdef}rp 
/s /t 139{/.notdef}rp]
JXZOWB+CMBX10 nf
JXZOWB+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 212.309 mo
(Step1:)
[6.36511 4.45532 5.25128 10.1808 5.72846 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
112.148 212.309 mo
(Setacounter)
[5.53525 4.42735 7.71007 8.82686 4.42735 4.98129 5.53525 5.2563 3.87447 4.42735 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
174.892 212.309 mo
(n)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
184.504 212.309 mo
(=1.Draw)
[11.3853 4.98131 8.74518 7.61044 3.90228 4.70235 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
236.87 212.309 mo
(X)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
245.124 213.803 mo
(1)sh
true set_gvm
%ADOBeginSubsetFont: KSWAAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /KSWAAA+CMSY10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 20 /lessequal put
dup 21 /greaterequal put
dup 24 /similar put
dup 33 /arrowright put
dup 49 /infinity put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
def
/FontBBox {-29 -960 1116 775} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705] def
/OtherBlues [-124 -119] def
/BlueScale 0.04379 def
/StdHW [40] def
/StdVW [85] def
/StemSnapH [40 55] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/lessequal <1C60D8A8C9B08A9461828376290081FDEE89FFCA15C371D7ADA3
F7F5C66FBB84879BB2F7B5B0417B8EE93403DE3CF9D7B9D542E1042F2EAE0870
6519B0E8EC276B42B5D5FFA860C8A5FD2EE0BE6B6FDFBA4201FF8237D0198589
A32B081CB95EE751B5CB494C0E9A3A8BDCBE7CF2D1F9B474EE9111F62BB70F0B
FFAB131216A59CF3AC8A> |-
/greaterequal <1C60D8A8C9B08A9461828376290081FDEE89FFCA15C371D7A
DA3F7F5C66FB4205DA2D3B4A244B4AA69B65BF3ED88CD94580A72A7A9E9BA6FB
94400CC73E9C5589571049888D35390EC0D4C134D43E3491B6BA10C65598F238
31A29AB5B1BF73536FB4D67B81158EDFB970EE9E45E7112A124419584A6C54F3
BE78870B41E0A8EECB5BF00> |-
/similar <1C60D8A8C9B08A946182837629008D942C9C6EF320F37C8A8C5429
9E8DD1B0875301FA43552CA514F2078FAFDD62F3467F8B7507E16E052EEFD284
3A498009CBFD91C47BB208EAF33DD879FFEECB0E6C1502AC163D4C66B261CBC1
94BE4B022B67D7AD95434D7C337B7F7A44> |-
/arrowright <1C60D8A8C9B5EE3129034F81B0973ADB6C0EA75D868228300EB
0DEDB6E2E49FB270D5FAC36E7BCE05074F264ADDEB09D5CF1405DCC0877AFF6E
3BD284D644035E676F4264A27AF789628DA789812A47E739051CBE60B7135FF7
DF83688C25C27EF4DE51444CFE6> |-
/infinity <1C60D8A8C9B5EE317A5F5893EE8EE787BD513A8696A76D73F30BB
31E7B8C4085F7A3BE137442B21E2DB607226D5DCDE353CA0626B8AA584CE1D8B
A5B83261000B954D727C572546E64A1424DCCEF0B3222656EC0DE511E24FD9D4
237721AFB878F60A62E573904B05B53845D9B74330392BB33990B94EDE420470
6D86430CB0A6C166BDC6623ACC2D089983075956FD661570E4D888BE6D1E7765
1799F26C3E9DF7F6AD39EB5F874EECA75C01A3AE8ABBBA095> |-
/braceleft <1C60D8A8C9B7A73DB562253524F5E14A30E2D0BF696ED1EC1832
95A6D99B3BA8FB24DB64474803A26F8962BAE1A2CA5312A983CA8F54B6A2CCE1
BDDA3BE7A71DC65187F905467F2B3DD6E2C46A0678FF636FF8C95A24B30A38BB
558B9114956B55462DFF6E91F237BBD08C7678143FE55B3326F60760923AC3FB
F2607F3A9D9831610688B18ABB03677BA0E9C91ED23BA198C76AB28BE6B2198F
782BEFB9FDC108557F68DBA2CFBE> |-
/braceright <1C60D8A8C9B7A73DB562253524F77EAA0C9D86D36E2A3E5029B
19678C1ADFB7D768C22FC42830CD4BFE33F922A0B35D4B8100996306D034A2AF
376DF52CDC59CEF40F1ADEE3D98D4B2E93796959422FDF4D3C93728708B2A090
9A3A4C863D92FDB9C8A8464E686F14A89B4451B451585AA4EDD696CE8BA342FC
161136031CEC1B831969CCB78C8B2D64DB2426CAEBE5228216AB6FB7F309CADE
26F419F1E2D30640CA1596947438C> |-
/bar <1C60D8A8C9B08A95708109816759180BE2C00E10A5903CE58B7DCAAF4A
44845FD3A70C28E4FAD0EA592930363E80B631EEC36264E9DB0D8F> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOWC+CMSY10 /KSWAAA+CMSY10 findfont ct_VMDictPut
/JXZOWC+CMSY10*1 
[20{/.notdef}rp /lessequal /greaterequal 2{/.notdef}rp /similar 8{/.notdef}rp /arrowright 15{/.notdef}rp 
/infinity 52{/.notdef}rp /braceleft /braceright 2{/.notdef}rp /bar 149{/.notdef}rp]
JXZOWC+CMSY10 nf
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
253.225 212.309 mo
(\030)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
264.606 212.309 mo
(\013=\013)
[6.41287 4.98129 0 ]xsh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
282.371 213.803 mo
(0)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
286.84 212.309 mo
(.\(Notethat)
[8.75516 3.87445 7.47195 4.98129 3.87448 8.26294 3.87445 5.53525 4.98132 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
346.167 212.309 mo
(\013=\013)
[6.41287 4.98129 0 ]xsh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
363.931 213.803 mo
(0)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
372.24 212.309 mo
(isanon-negativevectorwhoseentries)
[2.76764 7.76477 8.82687 5.53525 4.98129 5.53525 3.32053 5.53525 4.42734 4.98132 4.98129 3.87445 
2.76764 4.97931 8.26297 4.98926 4.42737 4.42734 3.87448 4.98129 7.73788 7.19495 5.53528 4.98129 
3.92917 8.27295 4.42731 5.25635 3.87445 3.90228 2.76758 4.42737 0 ]xsh
96.907 224.264 mo
(sumto1,soitisapmf.\))
[3.92919 5.53525 11.6194 3.87447 8.3088 4.98131 6.08517 3.92918 8.29884 2.76762 7.20198 2.76762 
7.24673 8.29884 5.53525 8.30182 3.0446 2.76762 0 ]xsh
JXZOWB+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
72 244.189 mo
(Step2:)
[6.36511 4.45532 5.25128 10.1808 5.72846 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
112.148 244.189 mo
(Updatethecounterto)
[7.47195 5.81421 5.53526 4.98129 3.87447 8.08362 3.87447 5.53525 8.08362 4.42735 4.98131 5.53525 
5.25629 3.87448 4.42734 7.55856 3.87445 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
213.972 244.189 mo
(n)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
222.389 244.189 mo
(+1.Draw)
[10.1898 4.98131 8.19724 7.61044 3.90227 4.70236 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
272.824 244.189 mo
(X)sh
true set_gvm
%ADOBeginSubsetFont: EFWAAA+CMMI7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /EFWAAA+CMMI7 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 81 /Q put
dup 88 /X put
dup 100 /d put
dup 105 /i put
dup 107 /k put
dup 110 /n put
def
/FontBBox {0 -250 1171 750} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0 683 703 431 441 451 463] def
/OtherBlues [-204 -194] def
/BlueScale 0.04379 def
/StdHW [32] def
/StdVW [81] def
/StemSnapH [32 36] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
7 dict dup begin
/Q <1C60D8A8C9B08A9411BE63E8450FF674261DF3BF561E79918FEEE2A35559
CBF17B11C12274C2CF0CE80FA63963137D95B319BEB07547621606DE62E66A2C
ACD18EE5CD777ECD011AD5A7C1102A73C66B45C8B4F2ED49E4B21A16A059B43E
62065E21ACBD630E50F7804B9815CFEF181EEA7B921E179EDC40F4D1694DAAEA
3C16CD6C0723CC87E3E923E7D133821DF4589C8BBF995CAABB158EC8987FFD0C
C79AEB3038668F0DC490072C8E2DCB03659AA72130E0ADAE25EC62530AA31440
64FF355999B849DFF357F84B71EEEE5A6F742983EA580A9A9F64CE6DDA7E8681> |-
/X <1C60D8A8C9B08A9423A7339911B812BEACC54268771C017B5131CCB990A3
E5056D3A8F50E2958F6CD87C3F982B04F84C417336A0DE6106193C5292F75E54
A46B9B6255F30F13DEBD78B47DC5F9E8F5459A1D435C5B17C82F188F02DDD6C8
4299846A2BD28F62D9EEF84E7B79D458B37366E35EE807B438099AB0FF14C7E9
5F592A9A79791CF4141F32ECDF15E6DF7B80706EE4B66DA799D24CA467E34BD3
7D9A398D6C936646E63B28ED4C63A3AF122010D59C7E7E58A95A25A34C2587E9
461C3E52C893A2EFDBF9E363B5B1F950E70F848C425E9D4C26966D79580275D5
20D88A74365DC4DFDF6940D8D4B19D54C75FF218A220D8F669EC09C66D5DA542
5C3FF4BAD6F9A29BC96AA0B6EF985200AA95DA41AACE558BF229230EED06600D
1C8EF38B8A667012D85E62806BFF53625BA04C6F80A54C8609C2CE4E3BEDCFD0
307AA07A034BC0C92FD0C209EACC9011A7DBB8F3> |-
/d <1C60D8A8C9B08A95F43E9117975A79E3A774043EB2FD7B0D214F673074A3
FD692B798505A483DA6AF11CD09DD03586B53EC973217618961BD610F78CF335
8574B752C78D2FC5A483B2200B0F18954EDFD34780C4823619AFDCB48C168375
85738D58118C1AFB4BE38ECFDB949CCA8F0B953C876539926D0535F4AE4D8197
0A31EA88DF5C151F114FFB521771D78C1501984CEB60164AF92D5BA48491E15B
4B7D10EF175F56EECB79F2A87C7D6ED4DE7D0AF515D0F410AA500B2D52205A37
C0746559DA200053FCE08D596B7C9D5A72A43DCC5FC7> |-
/i <1C60D8A8C9B08A95815A5B227B870FFFF4C4C0B4F8778048834443BFCAD6
B993EDD195DC06703CEA0DE031068A057848E5B5DED1133A0A8079C5E208E9DE
E4B78459A9167CC6EE455BFB1096DC5790B66EB4889F8492E36379969C9A84E3
508BBE89B995851364166046AE348187165B183267917A2B944E4D5A171FE0A1
71814BE20051DD45E2BA864A9940A362E73075986328AA3660DC7C3B40F26477
32F933A170C61C13A84CF06AE8B2A1FC77DDE376> |-
/k <1C60D8A8C9B08A95F13CFD4AE5481A495AB70D13FEE18A0798EDDC2E7C63
34127F8A806EDED4BBD5547357D7EB00F33BD2C069570FF0D4A13A81AD9D6959
70BC29BFA4188B5FF35D2BC1544DA379B086D189EE573517DEAC4B2C2F81F49B
32EB8FBE535876A55C16AFEE44363D63BB06BCC79E1169844F14FCF810E9F148
4C89E125DAE17DA075513A6BAF9F20F95C106D20DCB73381CD64FE6FA7B0BAF1
292CBF9A73942771A419A120A4ABB69193B5F60470712C8D37EFEE28EF6C4C59
4AF2604BBE515C8B33707EFB728EF05B365722CE143DB22C8A0F0E74C0B1DAFD
B8E9680AC391B02F07F707BCEEDD261D04A87013BBF0B97824E7A128ED480C24> |-
/n <1C60D8A8C9B08A945DCD93A6413263FE38546F0BE7E2F98E1145B7983B9B
1641ED5A9E669CE8FF00045A66F2E8A5A8B9E7D60D82ABF4948F1327937BE622
C783C4E7C26B88976244CD15079A5AF26552DD95CA66525D6E81AC8A7513A21B
1A16EF6E13DE9282B643596306165629EA7530D13241AD067BE2D4868C0012D9
65E0AA809E30E91B4C6E1AA5448F58235BE43BDD9BCDA3A4C757AF0F6AF6AC47
0C2D575118E707A7BABC9EE6F5693979D0E8C6BD83FE647F79E3AFE7ED707E97
27645B55B107A5681EEC3EDA96B1FCBE90B8D85B3D9ECC091BDE1FD1206913F0
D0CC4261F1E325> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOWD+CMMI7 /EFWAAA+CMMI7 findfont ct_VMDictPut
/JXZOWD+CMMI7*1 
[81{/.notdef}rp /Q 6{/.notdef}rp /X 11{/.notdef}rp /d 4{/.notdef}rp /i 
/.notdef /k 2{/.notdef}rp /n 145{/.notdef}rp]
JXZOWD+CMMI7 nf
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
281.078 245.684 mo
(n)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
286.003 245.684 mo
(+1)
[6.11603 0 ]xsh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
299.914 244.189 mo
(j)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
306.007 244.189 mo
(X)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
314.26 245.684 mo
(1)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
318.73 244.189 mo
(;X)
[4.43137 0 ]xsh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
331.411 245.684 mo
(2)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
335.881 244.189 mo
(;:::;X)
[4.43137 4.42142 4.4314 4.43137 4.42142 0 ]xsh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
366.274 245.684 mo
(n)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
375.022 244.189 mo
(\030)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
386.096 244.189 mo
(\013)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
392.469 245.684 mo
(n)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
397.892 244.189 mo
(=\013)
[4.98129 0 ]xsh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
409.247 245.684 mo
(n)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
414.172 245.684 mo
(0)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
418.641 244.189 mo
(,where)
[6.5036 7.19498 5.53525 4.42734 3.90228 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
454.292 244.189 mo
(\013)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
460.665 245.684 mo
(n)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
469.413 244.189 mo
(=)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
480.487 244.189 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
489.335 244.189 mo
(+)sh
true set_gvm
%ADOBeginSubsetFont: FAUBAA+CMEX10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /FAUBAA+CMEX10 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 16 /parenleftBig put
dup 80 /summationtext put
def
/FontBBox {-24 -2960 1454 772} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-20 0] def
/OtherBlues [-1159 -1139] def
/BlueScale 0.04796 def
/StdHW [47] def
/StdVW [47] def
/StemSnapH [40 47] def
/StemSnapV [40 47] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
3 dict dup begin
/parenleftBig <1C60D8A8C9B08A95F50B1739DB35E3B3A37680C3D9D8DAC79
E9926148F3650D6E2975ED0FFD12A564171EE26EBD94A64E6F9559784CDF81D6
1F4B5958F3145CEF1341B6B7E78AD7FC2DEF5D894568A6354261A9075A6402D4
21C49960DB718861DE94B37C352A43A08674E3C40FA2D37B9CC928AB017FCFAB
01580E20FA6EC3D598448CC8F82629E696C20E6A9E8495B3CA98C3722B1770BE
F> |-
/summationtext <1C60D8A8C9B08A94D23A6AA35126F81064EA3BBD3C652E69
0CA3B67504E0960005DA1F91D91A5FD954AD3579BAC8B8CF7CC53F0F44836A82
02B829B33B2BC9796DB34CBF72417984AE189707E420DD8DB84C80F9D686A50B
1A923FFBAEDECB3B744D8037D2BE7E532A4185732D6941B09736F4AC18616FE6
0CD0D1> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOWE+CMEX10 /FAUBAA+CMEX10 findfont ct_VMDictPut
/JXZOWE+CMEX10*1 
[16{/.notdef}rp /parenleftBig 63{/.notdef}rp /summationtext 175{/.notdef}rp]
JXZOWE+CMEX10 nf
JXZOWE+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
499.52 236.717 mo
(P)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
510.037 239.18 mo
(n)sh
510.037 247.178 mo
(i)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
512.855 247.178 mo
(=1)
[6.11603 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
525.101 244.189 mo
(\016)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
529.529 245.683 mo
(X)sh
true set_gvm
%ADOBeginSubsetFont: FCKBAA+CMMI5 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /FCKBAA+CMMI5 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.04 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
def
/FontBBox {37 -250 1349 750} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 442 453 464] def
/OtherBlues [-205 -191] def
/BlueScale 0.044 def
/StdHW [36] def
/StdVW [90] def
/StemSnapH [36 44] def
/StemSnapV [90] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/i <1C60D8A8C9B08A95CC5F16549F8F830E4147E0D831452679BFF9FF5D2FBE
04C02481BA9E8D7A881F9958E6799117778A1EE00377B0FF268D1297FEFC4AE1
D34762DBE8017E4D14A2D7029B84A8B416F619969E900AAA6A0D0D1264083BA8
F1C9B2D060F05BBB44BE75B2F91D620934D33B8C1FB6CF37E53311599EAE018D
11DD6E8B5D2F151768691DB07D8D33561D7F56745C6438F2CA6D94C84E5DCA19
9BADC8B2337492810A73C5FDB6FF6B5D4931ECAADD478D15B9DABB85F2F61219
C1> |-
/.notdef <1C60D8A8C9B08A959E2F69652E8B8F> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOWF+CMMI5 /FCKBAA+CMMI5 findfont ct_VMDictPut
/JXZOWF+CMMI5*1 
[105{/.notdef}rp /i 150{/.notdef}rp]
JXZOWF+CMMI5 nf
JXZOWF+CMMI5*1 [4.9813 0 0 -4.9813 0 0 ]msf
536.062 246.68 mo
(i)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
96.9068 256.144 mo
(and)
[4.9813 5.53525 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
116.278 256.144 mo
(\013)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
122.652 257.639 mo
(n)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
127.576 257.639 mo
(0)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
135.367 256.144 mo
(isthesumoftheentriesof)
[2.76762 7.24673 3.87447 5.53525 7.75485 3.9292 5.53525 11.6194 4.98131 6.36214 3.87447 5.53525 
7.75485 4.42735 5.2563 3.87445 3.90228 2.76764 4.42734 7.24673 4.98131 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
255.389 256.144 mo
(\013)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
261.762 257.639 mo
(n)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
267.185 256.144 mo
(.Repeatthisstepanin\014nitenumberoftimes.)
[7.19101 7.33347 4.42737 5.81418 4.42737 4.98129 7.20197 3.87448 5.53525 2.76761 7.24673 3.9292 
3.87448 4.42734 8.85278 4.98129 8.86276 2.76764 5.53525 5.52527 5.53525 2.76764 3.87445 7.75485 
5.25629 5.53528 8.02286 5.81418 4.42737 7.21982 4.98129 6.37213 3.87445 2.76764 8.30179 4.42734 
3.9292 0 ]xsh
71.9998 276.07 mo
(Onceyouhave\014nishedStep2,calculatetheproportionsofthedi\013erentcolors:let)
[7.74892 5.53526 4.42735 6.81837 4.97932 4.98131 7.92627 5.53525 4.70235 4.97932 6.81837 5.53525 
5.53525 2.76764 3.92917 5.53526 4.42735 7.92627 5.53525 3.87445 4.42737 7.92627 4.98129 5.33798 
4.43732 4.98129 2.75766 4.43732 5.53525 2.75766 4.98131 3.87447 6.81837 3.87447 5.53525 6.81836 
5.53528 3.90228 4.98126 5.81421 4.98132 3.90228 3.87445 2.76764 4.98126 5.53528 6.32019 4.98132 
5.43561 3.87445 5.53528 6.81836 5.5253 2.76761 5.81119 4.43729 3.90228 4.42737 5.25629 6.26547 
4.42737 4.98129 2.76764 4.98129 3.90228 3.92917 6.72278 2.76764 4.42734 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
423.808 276.07 mo
(Q)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
431.684 277.564 mo
(n)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
439.874 276.07 mo
(=\()
[10.5185 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
454.265 276.07 mo
(Q)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
462.141 277.564 mo
(n)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
467.066 277.564 mo
(1)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
471.535 276.07 mo
(;Q)
[4.43137 0 ]xsh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
483.839 277.564 mo
(n)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
488.764 277.564 mo
(2)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
493.233 276.07 mo
(;:::;Q)
[4.43137 4.42142 4.4314 4.43137 4.42145 0 ]xsh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
523.248 277.564 mo
(nk)
[4.92493 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
533.075 276.07 mo
(\),)
[3.87445 0 ]xsh
71.9998 288.025 mo
(where)
[7.19498 5.53525 4.42735 3.90228 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
101.446 288.025 mo
(Q)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
109.322 289.519 mo
(ni)
[4.92495 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
121.522 288.025 mo
(istheproportionofballsofcolor)
[2.76762 7.88435 3.87447 5.53525 8.39246 5.53525 3.89233 4.98129 5.81421 4.98129 3.90228 3.87447 
2.76762 4.98129 9.4904 4.98131 7.0097 5.53525 4.98131 2.76762 2.76762 7.88435 4.98129 6.99976 
4.42734 4.98132 2.76761 4.98129 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
273.125 288.025 mo
(i)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
280.515 288.025 mo
(after)
[4.98129 3.04462 3.87445 4.42734 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
304.703 288.025 mo
(n)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
314.641 288.025 mo
(ballsareintheurn.Then,)
[5.53525 4.98129 2.76764 2.76761 7.88437 4.98129 3.90228 8.39246 2.76761 9.49042 3.87445 5.53528 
8.38248 5.53525 3.90228 5.53525 9.10385 7.19498 5.53525 4.42734 5.53525 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
439.56 288.025 mo
(Q)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
447.436 289.519 mo
(n)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
456.688 288.025 mo
(!)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
466.651 289.519 mo
(d)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
475.126 288.025 mo
(Q)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
486.831 288.025 mo
(\030)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
498.409 288.025 mo
(Dir\()
[7.61044 2.76761 3.90231 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
516.563 288.025 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
522.973 288.025 mo
(\)as)
[7.82959 4.98132 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
71.9998 299.98 mo
(n)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
81.3848 299.98 mo
(!1)
[13.3698 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
104.716 299.98 mo
(,where)
[6.56338 7.19497 5.53526 4.42735 3.90228 0 ]xsh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
140.475 299.98 mo
(!)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
150.438 301.474 mo
(d)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
158.787 299.98 mo
(denotesconvergenceindistribution.Thatis,)
[5.53525 4.42735 5.53525 4.98131 3.87445 4.42735 7.63528 4.42734 4.98129 5.25632 4.97931 4.42735 
3.90228 4.98131 4.42734 5.53525 4.42735 8.13344 2.76762 9.24132 5.53528 2.76761 3.9292 3.87445 
3.90228 2.76764 5.53525 5.53525 3.87448 2.76761 4.98129 5.53525 8.33673 7.19498 5.53525 4.98129 
7.58057 2.76761 3.92917 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
360.59 299.98 mo
(P)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
368.37 299.98 mo
(\()sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
372.245 299.98 mo
(Q)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
380.121 301.474 mo
(n)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
385.045 301.474 mo
(1)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
392.92 299.98 mo
(\024)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
404.075 299.98 mo
(z)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
408.708 301.474 mo
(1)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
413.177 299.98 mo
(;Q)
[4.43137 0 ]xsh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
425.481 301.474 mo
(n)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
430.406 301.474 mo
(2)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
438.281 299.98 mo
(\024)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
449.435 299.98 mo
(z)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
454.068 301.474 mo
(2)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
458.538 299.98 mo
(;:::;Q)
[4.43137 4.42142 4.4314 4.43137 4.42142 0 ]xsh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
488.553 301.474 mo
(nk)
[4.92496 0 ]xsh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
501.785 299.98 mo
(\024)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
512.939 299.98 mo
(z)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
517.572 301.474 mo
(k)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
522.474 299.98 mo
(\))sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
529.754 299.98 mo
(!)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
71.9998 311.935 mo
(P)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
79.7798 311.935 mo
(\()sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
83.6538 311.935 mo
(Q)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
91.5298 313.43 mo
(1)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
98.7668 311.935 mo
(\024)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
109.283 311.935 mo
(z)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
113.916 313.43 mo
(1)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
118.386 311.935 mo
(;Q)
[4.43138 0 ]xsh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
130.689 313.43 mo
(2)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
137.926 311.935 mo
(\024)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
148.442 311.935 mo
(z)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
153.075 313.43 mo
(2)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
157.545 311.935 mo
(;:::;Q)
[4.43138 4.42142 4.43138 4.43138 4.42142 0 ]xsh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
187.56 313.43 mo
(k)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
195.229 311.935 mo
(\024)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
205.745 311.935 mo
(z)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
210.378 313.43 mo
(k)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
215.28 311.935 mo
(\)as)
[7.192 4.98131 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
234.707 311.935 mo
(n)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
243.454 311.935 mo
(!1)
[12.7322 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
269.468 311.935 mo
(forall\()
[3.04459 4.98132 7.21982 4.98129 2.76764 6.09512 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
302.428 311.935 mo
(z)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
307.061 313.43 mo
(1)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
311.53 311.935 mo
(;z)
[4.43137 0 ]xsh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
320.591 313.43 mo
(2)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
325.06 311.935 mo
(;:::;z)
[4.43137 4.42142 4.4314 4.43137 4.42142 0 ]xsh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
351.833 313.43 mo
(k)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
356.734 311.935 mo
(\).)
[3.87445 0 ]xsh
86.9438 323.89 mo
(NotethatthisdoesNOTmeanthatinthelimitasthenumberofballsintheurngoestoin\014nitythe)
[7.47195 4.9813 3.87447 8.18324 3.87447 5.53525 4.98131 7.63036 3.87447 5.53525 2.76762 7.67513 
5.53525 5.26025 4.42734 7.68509 7.47195 7.74893 10.9509 8.30182 4.42734 4.98131 9.29115 3.87445 
5.53526 4.98129 7.63036 2.76764 9.28119 3.87445 5.53525 8.18326 2.76764 2.76761 8.30182 2.76761 
7.63037 4.98132 7.68509 3.87448 5.53522 8.18329 5.25629 5.53525 8.02286 5.81421 4.42734 7.6582 
4.98129 6.80051 5.53525 4.98129 2.76764 2.76761 7.67514 2.76764 9.29114 3.87445 5.53525 8.18326 
5.53525 3.90228 9.29114 4.98129 5.26025 4.42734 7.68509 3.87448 8.7272 2.76764 5.53525 5.53525 
5.53525 2.76764 3.59552 9.01416 3.87445 5.53522 0 ]xsh
71.9998 335.845 mo
(probabilityofdrawingballsofeachcolorisgivenbythepmf)
[5.53525 3.90228 4.9813 5.53526 4.98129 5.53526 2.76762 2.76762 2.76763 3.5955 8.57582 4.98131 
6.3721 5.53525 3.90228 4.70236 7.19496 2.76762 5.53525 8.29886 5.53525 4.98129 2.76764 2.76761 
7.24673 4.98131 6.3721 4.42735 4.98131 4.14839 8.8528 4.42735 4.98129 2.76762 4.98131 7.22978 
2.76762 7.24673 4.98129 2.76764 4.97931 4.42737 8.86273 5.25632 8.57584 3.87445 5.53525 7.7449 
5.53525 8.30182 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
340.909 335.845 mo
(\013=\013)
[6.41287 4.98129 0 ]xsh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
358.673 337.34 mo
(0)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
363.143 335.845 mo
(.)sh
86.9438 347.801 mo
(Instead,asymptotically,theprobabilityofdrawingballsofeachcolorisgivenbyapmfthatisarealization)
[3.59749 5.53525 3.92919 3.87446 4.42735 4.9813 5.53525 5.32801 4.98131 3.92918 5.25829 8.3018 
5.53525 3.87447 4.98129 3.87447 2.76762 4.42735 4.98131 2.76761 2.76764 4.43137 5.32802 3.87447 
5.53525 6.79845 5.53525 3.90228 4.98131 5.53525 4.98129 5.53525 2.76764 2.76762 2.76761 3.59552 
7.62938 4.98129 5.41571 5.53525 3.90228 4.71231 7.19498 2.76761 5.53528 7.35239 5.53525 4.98132 
2.76761 2.76761 6.30029 4.98132 5.41571 4.42734 4.98129 4.14841 7.90637 4.42734 4.98129 2.76764 
4.98129 6.27338 2.76764 6.31024 4.98132 2.76761 4.97934 4.42734 7.90634 5.25629 7.62936 7.35239 
5.53528 8.30179 5.42566 3.87445 5.5253 4.98129 6.25552 2.76761 6.30029 7.35239 3.90228 4.42734 
4.98129 2.76764 2.76764 4.42737 4.98126 3.87445 2.76764 4.98126 0 ]xsh
71.9998 359.756 mo
(ofthedistributionDir\()
[4.9813 7.30859 3.87446 5.53526 8.69134 5.53525 2.76763 3.92919 3.87446 3.90228 2.76762 5.53526 
5.53525 3.87445 2.76764 4.98129 9.79926 7.61044 2.76761 3.90228 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
175.812 359.756 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
182.222 359.756 mo
(\).ThusasymptoticallywehaveasamplefromDir\()
[3.87447 10.0204 7.19498 5.26627 5.53525 8.19318 4.98131 3.92918 5.25827 8.30182 5.53525 3.87447 
4.98131 3.87445 2.76764 4.42734 4.98129 2.76764 2.76761 9.52228 6.91602 8.69135 5.53525 4.70236 
4.97931 8.69135 9.2453 3.92917 4.98129 8.31177 5.5253 2.76761 8.70132 3.03464 3.90228 4.98132 
12.5658 7.61041 2.76764 3.90228 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
415.897 359.756 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
422.307 359.756 mo
(\).Theproofreliesonthe)
[3.87445 10.0204 7.19498 5.53525 8.69135 5.53525 3.90228 5.26025 4.98129 7.30859 3.90228 4.42734 
2.76764 2.76761 4.42734 8.19318 4.98132 9.79926 3.87445 5.53522 0 ]xsh
71.9998 371.711 mo
(MartingaleConvergenceTheorem,whichisbeyondthescopeofthistutorial.)
[9.13274 4.9813 3.90228 3.87446 2.76763 5.53525 4.9813 4.9813 2.76762 7.7449 7.19498 4.98131 
5.25629 4.98929 4.42735 3.90227 4.98131 4.42735 5.53525 4.42734 7.7449 7.19498 5.53525 4.42735 
4.98129 3.90228 4.42735 8.30182 6.08517 7.20493 5.5253 2.76762 4.15836 8.8528 2.76761 7.24677 
5.81418 4.42734 4.97934 4.98129 5.53528 8.86273 3.87445 5.53528 7.74487 3.9292 4.42737 4.98129 
5.81418 7.7449 4.98129 6.36215 3.87448 5.53525 2.76761 7.25671 3.87445 5.53525 3.87448 4.98129 
3.90228 2.76761 4.98132 2.76761 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: MGFAAA+CMBX12 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /MGFAAA+CMBX12 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Bold) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 50 /two put
dup 65 /A put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
def
/FontBBox {-53 -251 1139 750} def
end
systemdict begin
dup /Private
14 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-12 0 686 698 444 453 656 676] def
/OtherBlues [-201 -194] def
/BlueScale 0.04379 def
/StdHW [43] def
/StdVW [109] def
/StemSnapH [34 43] def
/StemSnapV [109 132] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
20 dict dup begin
/hyphen <1C60D8A8C9B724821A39B73B927F75636483A197F6862C210595DCB
E4806> |-
/period <1C60D8A8C9B08A9510AF83E41B62DF56EC4CFCC10B5D08F3166B3E3
5D556C765276098DA359B59EC54208F110E2D8E9B> |-
/two <1C60D8A8C9B08A95090CFBBDE9156CF1A318C969817CD137DA15349469
FAD9F0156B384713555B8B9568411CA51F295CDF7F564EB2444EF01CC00DD0B1
E135E4F6EA9DC43330D83B8D731872BB725F35D613F3915A1D35D2C84ECF287D
BAB74B2642E06043B6557ED6CFF443106E94B89C375DB00F3CB12562B1AC4C79
5D1972FD6FA68C7DBF9F993DE6A4B6E90B51> |-
/A <1C60D8A8C9B08A9405FB902C5448EC400F3A39EEDF25F38648D7B7DD5A10
4F2071608766EEAF9A4B5A57A9536D9B6E0FD33FC08CADDB6DC48AFC1E142A73
13A082EBDD68E76D7747A5DE010B6341FE9E842F59E0BE24A20DC6912991B19E
D8AC69F65FAA386AFD85F88C0C6E1F7271E4E701554D88777A77ABC2933C4A38
CEC4F59F7E3F0B5C7E2278D09C1332A9C154B2AE> |-
/S <1C60D8A8C9B66482349528B2BBEBE35114D552D47D09F4073F9AA17F7774
3651C7BC1A1375D5197DE27A8A1B4F256DC0AF277B71EBF3982F0A182AA6E844
28A60B999055086B0FFE3EF2EEAF5F2E4103901AE07C2445DEAE5CD221EC0118
CD4F077B9FE101AAE117AC5DFF99CC1F987EA39FD8688F98A68CF00E834D454B
0F9BB5F65636C26F36D5A970298B721CBF9B4F1B03089EA8459B383D6543F29B
1C1DDC72AB28032B46B76E80B09F47A8815390CA9C551B93D09CA9C8518B46B0
65> |-
/T <1C60D8A8C9B08A947F2091C927A88D2A69E0B328E3F1749E65A50561B381
925E14A4323867E92519809CE7F39479EC7F1E37CB65B646B1F33018F996024E
8D0817FB7A89EACBE8FA1709CB106A85D4B7F278AF517054F637F9DEA1C2BD9B
160B> |-
/a <1C60D8A8C9B08A95C96620E75CABF74F978CA2083A0E64E7B605A7B53E80
C841A98D0F5DC74E6980E271ECB991704655DA7533A9678C7B601DD9AFF9F0B5
5B8F2310676B06D4E103EA132EA8DF00118F36AC458030C4B22511FCC27ED37B
2522DC131404E8F1B92E472ECDE868C4113F63E23030EB50CE1D3F1E61A1ADFC
80F06C7220BA23B1B4859EF23C222EB8DECA149AC3AB7333565C> |-
/b <1C60D8A8C9B66482CEFC1B8CCAA8ECB70A481DCB896BF86DE7E70B3C0C83
BA4BF555E7ACE0713ACDA6B10E8210385EA5DA1909A5AD87948540B2F14CE75D
9D98E2A83D4DFA904A2E539698D9F70B5F91099018AFAE5DDDFB4D8F33490304
7F74E14DA6BF5F3EFE9E5DC56375D6E088B9E5AAE0CE75517C9C287D09BE> |-
/c <1C60D8A8C9B7A73DCB069ABECD090F087035A2A0FC01212EFB86AC561D5C
B6571789CE0BEAEA2F7B26FC529CAC24A656A010EDD71F116CA10366A6F904D8
9D4F72110DC94560AD6AC90211DEB124421E894F1C23353FF2F3FE94854F2AD3
2D861EEABFDF9F2A661ABAD6EEF77F1829D78E959A8ECBA2EE89B8> |-
/e <1C60D8A8C9B08A95D42639199D9EF7781EC08E4E816F8C01341CD39DED15
81B58F10F8B9809089AFD5BA961C8F241C6D593373BAE54AF35D168CD4288167
64619F4A06513D7599239329620FCD0A2E881C26ED12D0DDC39B1FDA22C88BA1
20BD2DE6E2AC92DA838C859BADA0B4F209F20AC375BC67478336EEDC606242C2
35EB6D36> |-
/g <1C60D8A8C9B08A95090CFBBDE9151CD9A545C89D314E9D050C555FD62D57
9AAE105F11FC2C727164E90ABE19532D00D316143102E4A890B5B5D361FABB84
82D45DAF10CB4C27D869CEE9C9731F07B272DFC98ABC4ABC8E8F0423A3F62D16
ADAA34F9E2ECF874E586D459354A5AE8A35B1F93962B774A1B9D857B8B4C112C
DDCB612A9B14F8315535978C8CEEB0DD2475C27B98A166F85D02C1883412CFAC
772246D532880B8E1871F06D566868F9C7ADF097A9B6C23A55708C853E8F37D5
DD2981A3787C678901459106C13781AC065FFC17B2F7A89466C9890ABC8F424B
DF2F11C2B2D2BDE80F3EA639D17DAB448B168EA166> |-
/h <1C60D8A8C9B66482C0B06145CAB2A509108880297DE1AC3AF647F612B069
24FD7EBA415A61C4D2267393176AC8E17E469557E93424EC4BDDC205BB67185C
6DE17CBEC5474B24F6EF3D295C69CE49FB495A45A549E5CD596A7AF2337ADC4C
2DB6D33D2D4934C7B453B941AF19917472E39C2958DE93EDC98A2EBE2712726F
027F1A> |-
/i <1C60D8A8C9B08A9510AF83E41B62DF17FA6FFE42F43376AE7BE1350B76EF
B2B6E33635361CC21375F62385DBDB7EBB7043AF905FC576B3C541E87687F88D
5B9B56E600C6B87959B73CD0DC5D7DD5A3815DFC2C291252971755BDBF864A12
41D26021> |-
/k <1C60D8A8C9B08A95FBF70C17B7E5F98FDA11A12F620D1D29C99B38528D17
AFEF3C2355568D192D7E207C43BBE1DA4BF96F745F202A748AD7F2A9E11F52C8
A676F4F5793992396B1DA7F7CA71DD37510410CEA2F568E5AEDF2435FC63E71E
8B42A2BB9CD6F7E7E11D97C7DC81D5C471EF2A31D8E579003C70B04D1865027F
426E0623F986886C70FA906C8F5E356D3FC631EA4FA7B4FF884415A5A5F0931A
26EB2B0F832D80501059E7AA5A55D7F7A34B365ECE> |-
/n <1C60D8A8C9B66482C0B06145CAB2A50769325C1784AEB8C412F792549A05
9C436DA61F5EDB218A3269205FCEDD453F91E2876424303EEA35BCFDAAD1C07A
66181A2BC3F81924B54937BFFAAA1AACCF7F7A8721B07B81B95D8EACBD8E2182
474B0B3390E40EBC1AAADE1EE783CB98FCE1CE66C7C5B8867D602FCD827DB8> |-
/o <1C60D8A8C9B08A95090CFBBDE9156259107B60BFA8D5BDFFD48CBAB94AA6
886E557FE78496F1CF7D063C3B5E0FC3D0E733FBAD6424D33BC76A0A63969450
1A2F4DC674F83F022AFE19FDBE579861790C9D569B79436347175AEC2987E649
9A25E2BA101D19CA5683EACFDBBF2D61F720C2> |-
/p <1C60D8A8C9B66482B07643C41869C63A3CA7FC1EC17173E15F45A372F39C
DB8097391D86A793A69DC84E9647F3F0290802BAC4F29862B34C720EF7E8AE5F
DD48ECBA7066A95E78E9FB9D730DFBB07F219B3809371BA65E942763F9244B08
22868AECBA0D442AFD27B9F3936E0FC4B21A87F029FBC9967B6A97DAA2E4C705
2E23E8BDEF4468> |-
/r <1C60D8A8C9B08A95AFB286DB4B4ACF2D4077830A7048D8B1ECA1B86AB050
1BA7D5F0CF33CFBA5216ADACDDF32507902CC859729D4970123450A0A0E30E75
A74F99D6FAB59B1C9F5C5009AB8914A408FF0BFFB7A872A6600D0DE128906E91
2244C121E030ED36F02E0619037BC9A601A590> |-
/t <1C60D8A8C9B08A950D39B484C8B6266357FB741549CEA596AB7A985B99E3
8919DF4DD35A9AC9A12E6885F854F06FBFCD2DA89F967FFC95C13F9A3BE55BAA
372D8C1F6C43B438CCC88F163563CE0916DDCFA85BEBC45D79AE2FB5BE3F8A> |-
/.notdef <1C60D8A8C9B72482E3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOWG+CMBX12 /MGFAAA+CMBX12 findfont ct_VMDictPut
/JXZOWG+CMBX12*1 
[45{/.notdef}rp /hyphen /period 3{/.notdef}rp /two 14{/.notdef}rp /A 17{/.notdef}rp 
/S /T 12{/.notdef}rp /a /b /c /.notdef /e 
/.notdef /g /h /i /.notdef /k 2{/.notdef}rp /n 
/o /p /.notdef /r /.notdef /t 139{/.notdef}rp]
JXZOWG+CMBX12 nf
JXZOWG+CMBX12*1 [11.9552 0 0 -11.9552 0 0 ]msf
71.9998 399.599 mo
(2.2TheStick-breakingApproach)
[6.7248 3.736 20.1744 9.35368 7.472 10.6199 7.47202 5.23039 3.73601 5.60698 7.09895 4.48318 
7.47202 5.49344 6.13669 6.53836 7.09894 3.73601 7.472 11.208 10.156 7.472 7.472 5.49345 
6.72479 6.53839 5.60696 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
71.9998 417.989 mo
(Thestick-breakingapproachtogeneratingarandomvectorwithaDir\()
[7.19498 5.53525 8.21313 3.92919 3.87447 2.76762 4.15836 5.25827 3.32051 5.53525 3.90228 4.42735 
4.98129 5.25827 2.76764 5.53525 8.76709 4.98129 5.53525 5.53525 3.90228 4.98131 4.98131 4.14838 
9.33102 3.87445 8.76709 4.98131 4.42735 5.53525 4.42734 3.90228 4.98129 3.87447 2.76762 5.53525 
8.76709 8.77704 3.90228 4.98132 5.53522 5.53528 4.98129 12.0876 4.97934 4.42734 4.42734 3.87448 
4.98129 7.69803 7.19498 2.76764 3.87445 9.32104 8.76706 7.61044 2.76764 3.90228 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
388.936 417.989 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
395.346 417.989 mo
(\)distributioninvolvesiteratively)
[7.66025 5.53525 2.76764 3.92917 3.87448 3.90228 2.76761 5.53525 5.53528 3.87445 2.76764 4.98129 
9.33099 2.76761 5.25632 4.97931 4.98129 2.76764 4.97931 4.42737 7.72495 2.76761 3.87448 4.42734 
3.90228 4.98132 3.87445 2.76764 4.97931 4.42731 2.76764 0 ]xsh
71.9998 429.944 mo
(breakingastickoflength1into)
[5.53525 3.90228 4.42735 4.9813 5.25827 2.76763 5.53525 9.21541 9.21541 3.92918 3.87447 2.76762 
4.14841 9.49237 4.98129 7.27872 2.76762 4.42735 5.53525 4.98129 3.87447 9.75938 9.21542 2.76762 
5.25629 3.87447 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
220.986 429.944 mo
(k)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
230.719 429.944 mo
(piecesinsuchawaythatthelengthsofthe)
[5.53525 2.76762 4.42735 4.42735 4.42735 8.1633 2.76761 9.76935 3.9292 5.53525 4.14841 9.76935 
9.21542 6.91602 4.70233 9.49237 3.87448 5.53525 4.98129 8.10858 3.87445 5.53525 8.66147 2.76761 
4.42737 5.53525 4.98129 3.87445 5.53528 8.15332 4.98129 7.27872 3.87445 5.53525 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
432.89 429.944 mo
(k)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
442.623 429.944 mo
(piecesfollowaDir\()
[5.53525 2.76764 4.42734 4.42734 4.42737 8.1633 3.04459 4.98129 2.76764 2.76761 4.70236 11.4291 
9.21542 7.61041 2.76764 3.90228 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
529.432 429.944 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
535.842 429.944 mo
(\))sh
71.9997 441.899 mo
(distribution.Figure4illustratesthisprocesswithsimulationresults.Wewillassumethatweknowhowto)
[5.53525 2.76762 3.92919 3.87447 3.90228 2.76763 5.53525 5.53526 3.87446 2.76763 4.98129 5.53525 
7.27072 6.5036 2.76762 4.98131 5.53525 3.90227 7.7748 8.32874 2.76762 2.76764 2.76761 5.53525 
3.9292 3.87447 3.90227 4.98131 3.87447 4.42735 7.27663 3.87447 5.53525 2.76762 7.27663 5.53525 
3.90228 5.26025 4.42734 4.42735 3.9292 7.27664 7.19495 2.76764 3.87445 8.88269 3.9292 2.76764 
8.02283 5.53528 2.76761 4.98129 3.87445 2.76764 4.98129 8.88269 3.90228 4.42737 3.92917 5.53525 
2.76764 3.87445 3.9292 7.27072 9.41269 7.77478 7.19498 2.76761 2.76764 6.11505 4.98129 3.92917 
3.9292 5.53525 8.30182 7.77478 3.87445 5.53525 4.98129 7.22189 6.91602 7.77478 5.25827 5.53525 
4.70233 10.5424 5.53525 4.70233 10.5424 3.87451 0 ]xsh
71.9997 453.854 mo
(generaterandomvariablesfromtheBetadistribution.Inthecasewhere)
[4.9813 4.42735 5.53526 4.42735 3.90228 4.9813 3.87446 7.31651 3.90228 4.9813 5.53525 5.53525 
4.98131 11.191 4.70038 4.98129 3.90228 2.76762 4.98131 5.53525 2.76762 4.42735 6.81833 3.04462 
3.90228 4.98129 11.191 3.87447 5.53525 7.30653 7.06645 4.42734 3.87447 7.86049 5.53525 2.76761 
3.9292 3.87445 3.90228 2.76764 5.53525 5.53525 3.87445 2.76764 4.98132 5.53522 7.05157 3.59747 
8.42444 3.87445 5.53525 7.3165 4.42737 4.98129 3.9292 7.3165 7.19498 5.53525 4.42734 3.90228 
0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
387.349 453.854 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
396.647 453.854 mo
(haslength2,simulatingfromthe)
[5.53525 4.98129 6.81836 2.76761 4.42737 5.53525 4.98129 3.87445 8.42441 4.98132 5.73645 3.9292 
2.76764 8.02286 5.53525 2.76764 4.98129 3.87445 2.76764 5.53525 7.87045 3.04459 3.90228 4.98132 
11.191 3.87445 5.53522 0 ]xsh
71.9997 465.809 mo
(DirichletisequivalenttosimulatingfromtheBetadistribution,sohenceforthinthissection,wewillassume)
[7.61044 2.76763 3.90228 2.76763 4.14839 5.53526 2.76762 4.42735 6.82339 2.76762 6.87812 4.42735 
5.25829 5.53525 2.76762 4.71033 4.98131 2.76762 4.42735 5.25629 6.82339 3.87447 7.93022 3.9292 
2.76761 8.02287 5.53525 2.76762 4.98129 3.87447 2.76762 5.53526 7.93022 3.0446 3.90228 4.98129 
11.2607 3.87447 5.5253 7.38626 7.05646 4.42737 3.87445 7.93024 5.53525 2.76761 3.9292 3.87445 
3.90228 2.76764 5.53525 5.53525 3.87448 2.76761 4.98129 5.53525 5.78629 3.9292 7.93024 5.53525 
4.42734 5.53525 4.42737 4.42734 3.04462 4.98129 3.90228 3.87448 8.48419 2.76761 8.48419 3.87448 
5.53525 2.76761 6.87814 3.9292 4.43729 4.42737 3.87445 2.76764 4.98129 5.5253 5.79626 6.91602 
7.37628 7.19498 2.76764 2.76761 5.71658 4.98126 3.93921 3.9292 5.53522 8.30182 0 ]xsh
71.9997 477.765 mo
(that)
[3.87447 5.53525 4.9813 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
93.5857 477.765 mo
(k)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
101.853 477.765 mo
(\025)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
112.369 477.765 mo
(3.)
[4.9813 0 ]xsh
JXZOWB+CMBX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
71.9997 503.661 mo
(2.2.1BasicIdea)
[5.72846 3.18203 5.72846 3.18202 17.1855 8.1504 5.56915 4.51902 3.18203 8.90749 4.34465 6.36511 
5.25128 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
71.9997 522.05 mo
(Foreaseofexposition,wewill\014rstassumethat)
[5.6767 4.9813 6.8811 4.42735 4.9813 3.92918 7.40617 4.9813 6.03338 4.42735 5.25827 5.80424 
4.98129 3.9292 2.76762 3.87447 2.76762 4.98131 5.53525 5.81616 6.92599 7.40616 7.19498 2.76762 
2.76762 5.74644 5.53525 3.90228 3.92918 6.85329 4.98129 3.9292 3.93913 5.5253 8.31177 7.40619 
3.87445 5.53522 4.98132 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
279.808 522.05 mo
(k)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
288.075 522.05 mo
(=3,andthengeneralizetheprocedureto)
[10.5185 4.98129 5.81619 4.98129 5.53525 8.51407 3.87448 5.53525 4.42734 8.51407 4.98129 4.42737 
5.53525 4.42734 3.90228 4.98132 2.76761 2.76761 4.42737 7.41614 3.87445 5.53525 7.40616 5.53528 
3.90228 5.26025 4.42731 4.42737 5.53525 5.53525 3.90228 7.40619 3.87445 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
470.991 522.05 mo
(k>)
[8.26495 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
489.774 522.05 mo
(3.Overthe)
[4.98129 7.08145 7.7489 4.97934 4.42737 6.89105 3.87445 5.53522 0 ]xsh
71.9997 534.005 mo
(courseofthestick-breakingprocess,wewillbekeepingtrackofasetofintermediatevalues)
[4.42735 4.98129 5.53526 3.90228 3.92918 7.73493 4.98131 6.34222 3.87446 5.53526 7.72497 3.92918 
3.87447 2.76762 4.15837 5.25827 3.32051 5.53525 3.90228 4.42735 4.98129 5.25827 2.76764 5.53525 
8.27893 5.53523 3.90228 5.26025 4.42735 4.42735 3.92918 3.92918 6.07523 6.91602 7.72496 7.19498 
2.76761 2.76764 6.07523 5.81418 7.72498 4.97934 4.42734 4.42737 5.53522 2.76764 5.53525 8.28891 
3.87445 3.90228 4.98129 4.14841 8.55588 4.98129 6.3522 8.27893 3.92917 4.42737 7.18204 4.98129 
6.34222 2.76764 5.25626 3.87448 4.42734 3.90228 8.30182 4.42734 5.53525 2.76764 4.98129 3.87448 
7.73492 4.70038 4.98129 2.76764 5.53525 4.42734 0 ]xsh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
474.829 534.005 mo
(f)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
479.81 534.005 mo
(u)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
485.514 535.499 mo
(i)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
488.83 534.005 mo
(g)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
493.812 534.005 mo
(,whichwe)
[6.0752 7.19498 5.53528 2.76758 4.14844 8.83289 6.92596 0 ]xsh
71.9997 545.96 mo
(usetoultimatelycalculatetherealization)
[5.53525 3.92919 8.12347 3.87446 8.67743 5.53525 2.76762 3.87447 2.76762 8.30182 4.98129 3.87447 
4.42734 2.76764 8.95439 4.42735 4.98129 2.76764 4.42734 5.53525 2.76764 4.98129 3.87447 8.12347 
3.87447 5.53525 8.13344 3.8923 4.43732 4.98131 2.76762 2.76762 4.42734 4.98131 3.87445 2.76762 
4.98131 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
258.926 545.96 mo
(q)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
263.731 545.96 mo
(.Tobegin,wegenerate)
[8.32675 6.35812 8.68738 5.80426 4.42734 4.98129 2.76764 5.53525 6.56339 6.91602 8.12347 4.98129 
4.42734 5.53528 4.42734 3.90228 4.98129 3.87445 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
372.478 545.96 mo
(Q)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
380.354 547.455 mo
(1)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
388.52 545.96 mo
(fromBeta\()
[3.04459 3.90228 4.98132 11.9979 7.05649 4.42734 3.87448 4.98129 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
436.662 545.96 mo
(\013)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
443.035 547.455 mo
(1)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
447.505 545.96 mo
(;\013)
[4.43137 0 ]xsh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
458.305 547.455 mo
(2)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
465.239 545.96 mo
(+)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
475.453 545.96 mo
(\013)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
481.826 547.455 mo
(3)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
486.295 545.96 mo
(\)andset)
[7.57059 4.98129 5.53525 9.23138 3.9292 4.42737 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
529.544 545.96 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
535.247 547.455 mo
(1)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
71.9996 560.904 mo
(equaltoitsvalue:)
[4.42735 5.25827 5.53525 4.98131 6.45378 3.87447 8.66746 2.76763 3.87446 7.61535 4.70038 4.98129 
2.76762 5.53526 4.42734 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
155.798 560.904 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
161.501 562.399 mo
(1)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
169.347 560.904 mo
(=)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
180.472 560.904 mo
(q)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
184.919 562.399 mo
(1)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
189.389 560.904 mo
(.Then,generate)
[8.28691 7.19496 5.53526 4.42734 5.53526 6.55341 4.98129 4.42735 5.53526 4.42734 3.90228 4.98129 
3.87448 0 ]xsh
JXZOWE+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
267.162 549.846 mo
(\020)sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
279.406 556.46 mo
(Q)sh
true set_gvm
%ADOBeginSubsetFont: ZADBAA+CMR5 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ZADBAA+CMR5 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle 0 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
def
/FontBBox {-341 -250 1304 965} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 0 683 705 431 448 666 677] def
/OtherBlues [-206 -194] def
/BlueScale 0.04379 def
/StdHW [44] def
/StdVW [89] def
/StemSnapH [33 44] def
/StemSnapV [89 106] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/two <1C60D8A8C9B08A944780CF6FFA0091DADD0BD901580171BF747556CDEA
8646BB69A866DF795259DEEB9E5E77B1B01244D743626D8A1F7F18B4D03F81EE
93005F9BC8867D1DE18A6AE54BEBE63F827DF8437307DAEAE35A1F897BBB98E2
923604CC19630187583823DF2C6414AE67551CCB1146D9EE78F8C9D4002E82AB
3DE2C954E2EC218737BCCF048934351C> |-
/.notdef <1C60D8A8C9B08A95A487F5C1974C33> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOWH+CMR5 /ZADBAA+CMR5 findfont ct_VMDictPut
/JXZOWH+CMR5*1 
[50{/.notdef}rp /two 205{/.notdef}rp]
JXZOWH+CMR5 nf
JXZOWH+CMR5*1 [4.9813 0 0 -4.9813 0 0 ]msf
285.681 557.456 mo
(2)sh
.398 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
274.307 558.413 mo
294.667 558.413 li
@
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
274.307 564.34 mo
(1)sh
true set_gvm
%ADOBeginSubsetFont: NRSAAA+CMSY7 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /NRSAAA+CMSY7 def
/FontInfo 7 dict dup begin
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /minus put
def
/FontBBox {-15 -951 1252 782} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-23 0 683 708] def
/OtherBlues [-127 -117] def
/BlueScale 0.039625 def
/StdHW [49] def
/StdVW [93] def
/StemSnapH [49 61] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/minus <1C60D8A8C9B08A94125A6B4F8A6523779DE8BDC276F89F5DC341F7EF
FF93EE02783776BF3EA256D68859F44A4D3C744BD732A126A7> |-
/.notdef <1C60D8A8C9C4A637> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/JXZOWI+CMSY7 /NRSAAA+CMSY7 findfont ct_VMDictPut
/JXZOWI+CMSY7*1 
[32{/.notdef}rp /minus 223{/.notdef}rp]
JXZOWI+CMSY7 nf
JXZOWI+CMSY7*1 [6.9738 0 0 -6.9738 0 0 ]msf
278.279 564.34 mo
( )sh
JXZOWD+CMMI7*1 [6.9738 0 0 -6.9738 0 0 ]msf
284.505 564.34 mo
(Q)sh
true set_gvm
%ADOBeginSubsetFont: ZADBAA+CMR5 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
JXZOWH+CMR5 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B08A944780CF6FFA0091862149843C515DE8EC68761B0030
58401353872A686F1726CB8E095B01BD73E22499BE97FC3931F1C9C0AD8085EE
D8536AC53E6C5B57A275805F17202B88AA7492975E5DE5356696C3BB23263E74
969E02AC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JXZOWH+CMR5 /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
reset_gvm
/JXZOWH+CMR5*1 
[49{/.notdef}rp /one /two 205{/.notdef}rp]
JXZOWH+CMR5 nf
JXZOWH+CMR5*1 [4.9813 0 0 -4.9813 0 0 ]msf
290.779 565.336 mo
(1)sh
true set_gvm
%ADOBeginSubsetFont: KSWAAA+CMSY10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
JXZOWC+CMSY10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/minus <1C60D8A8C9B08A946182837629008DF7702985522C1BEB432204C2EF
9CAB07AB654895DD8804EF7ED97DE3E2616CBB2FB21BE3D9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JXZOWC+CMSY10 /Encoding get
dup 32 /minus put
pop
%ADOEndSubsetFont
reset_gvm
/JXZOWC+CMSY10*1 
[20{/.notdef}rp /lessequal /greaterequal 2{/.notdef}rp /similar 7{/.notdef}rp /minus /arrowright 
15{/.notdef}rp /infinity 52{/.notdef}rp /braceleft /braceright 2{/.notdef}rp /bar 149{/.notdef}rp]
JXZOWC+CMSY10 nf
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
298.631 560.904 mo
(j)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
304.165 560.904 mo
(Q)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
312.041 562.399 mo
(1)sh
true set_gvm
%ADOBeginSubsetFont: FAUBAA+CMEX10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
JXZOWE+CMEX10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenrightBig <1C60D8A8C9B08A95F50B1739DB35E3B3A37680C3D9D8DAC7
9E395E5B42CB134B15FB00DE4838C63BE8AE2D99B9CBA59BE6EB69634F7D5AD4
57198A4CBF00E984F5EB810FC0CAAE609F8794621CD70F9F635F1AAA3047307B
CF49DA3D9BBCDA98F22DB432429FEEBD4EBB902650CC79B28680931C076D60D3
31EC05CED082DBFDACC6E298A4206AE02205BA534A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JXZOWE+CMEX10 /Encoding get
dup 17 /parenrightBig put
pop
%ADOEndSubsetFont
reset_gvm
/JXZOWE+CMEX10*1 
[16{/.notdef}rp /parenleftBig /parenrightBig 62{/.notdef}rp /summationtext 175{/.notdef}rp]
JXZOWE+CMEX10 nf
JXZOWE+CMEX10*1 [9.9626 0 0 -9.9626 0 0 ]msf
316.511 549.846 mo
(\021)sh
true set_gvm
%ADOBeginSubsetFont: PFJBAA+CMR10 AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2017 Adobe System Incorporated. All rights reserved.
systemdict begin
JXZOVY+CMR10 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7A73D3B2D32309B1F5D5A32FC3614834F8BC61B6EB92C1
2484BD76628737DA40CF9DA1C97CCDAFB1D1B732C642F74A7C41B7D3AC6DAF8D
1E760692B6EBD2417EF1893A4AA0B1CF049D4C54D830CEC073A9153D451FAD42
892B0930AEE4FE18588336BFDAD60D8A4F4CFFED76F103FB9BBD8A33EFBA3F18
232B88D88FE54E17260FA3E2CC29DEC0CB72B88DC816FF5> |-
/six <1C60D8A8C9B7A73D3B2B97FE394CF5175EFEC06CD8F59A375E41591273
E0C059123310EC79AE072F532A0C9DF11EDCF7D4B9D83F0A2FCBB058CCF95C0F
F8BAD8605C0C2E8D60E28BE3D0E0DD42D8AAC3094E7159CC3989179C22CC5AA3
B3825C4ED9C5A83B733BA4666CE2A2B0097F22D25C776953D494478010B9DD2B
957D6BF7D7A87CBAE6ACDB0F5D283FB8F9162F4638E98F510D9821787A5D0E83
5BEB255F8F8C0C281516F7A946A0E0B79E8072185D1B76EC3B7739FCD106> |-
/nine <1C60D8A8C9B7A73D3B2B97B3700AD7AED0795D43DB5ABA64A35CE8EC8
55A5CBF20AE28D441242F899F7C2493AF719033D6B385FC121C95EE56A8AC87E
982F921115084DE39E9BA3D7A44F69554488D091CCA5CE48FA54B9DEDF323B60
58F2C417BA9D8B1544EFE093FFB579140C54032384DB55AB4741347233EB3F08
89C3AE9CB54BFC5722CB20FE6EB0FE3ABCFEDABDC9E7A6133126A6F51B867889
0B35A22591676E962B03C898FE88F279F8C6D3B01F6391B6E2BA953568B49F4B
099> |-
/E <1C60D8A8C9B08A94478101EE5603CAF9EA65B0A05B8389D7C1CF5C51F1F7
4696C0CEF5645C7B6A40F500D79FE10E9FE662B3E9326A3808402CE1090D692C
4ED68EDB8B4431B5FCC4F04AE568DED0677392BD79B1264E9F3418193C5B917C
B34635B006E80D355A74C6CE78F0EF1B944BBA6609A53532C815AD3A66B5B7FC
E4313375B43F59207B03> |-
systemdict /gcheck known {setglobal} if end {end} if
end
JXZOVY+CMR10 /Encoding get
dup 48 /zero put
dup 54 /six put
dup 57 /nine put
dup 69 /E put
pop
%ADOEndSubsetFont
reset_gvm
/JXZOVY+CMR10*1 
[11{/.notdef}rp /ff /fi 27{/.notdef}rp /parenleft /parenright /.notdef /plus 
/comma /hyphen /period /.notdef /zero /one /two /three 
/four /.notdef /six 2{/.notdef}rp /nine /colon 2{/.notdef}rp /equal 
3{/.notdef}rp /A /B /C /D /E /F 2{/.notdef}rp 
/I 3{/.notdef}rp /M /N /O 2{/.notdef}rp /R /S 
/T /U /V /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 
3{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/x /y /z 133{/.notdef}rp]
JXZOVY+CMR10 nf
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
326.147 560.904 mo
(fromBeta\()
[3.04459 3.90228 4.98132 11.988 7.05649 4.42734 3.87445 4.98129 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
374.278 560.904 mo
(\013)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
380.651 562.399 mo
(2)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
385.12 560.904 mo
(;\013)
[4.43137 0 ]xsh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
395.921 562.399 mo
(3)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
400.391 560.904 mo
(\).Denotetheresultby)
[3.87445 8.28693 7.61044 4.42734 5.53525 4.98129 3.87448 8.11349 3.87448 5.53522 8.11353 3.90228 
4.43732 3.9292 5.53525 2.75766 7.57059 5.25629 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
506.948 560.904 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
512.651 562.399 mo
(2)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
517.12 560.904 mo
(,and)
[6.54346 4.98126 5.53528 0 ]xsh
71.9999 575.848 mo
(set)
[3.92919 4.42735 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
87.8789 575.848 mo
(q)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
92.3269 577.343 mo
(2)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
100.107 575.848 mo
(=\(1)
[11.0565 3.87446 0 ]xsh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
122.454 575.848 mo
( )sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
132.635 575.848 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
138.338 577.343 mo
(1)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
142.807 575.848 mo
(\))sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
146.681 575.848 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
152.385 577.343 mo
(2)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
156.854 575.848 mo
(.Theresultingvector)
[8.17732 7.19496 5.53526 8.07365 3.90228 4.42735 3.92918 5.53525 2.76762 3.87447 2.76762 5.53526 
8.62759 4.97934 4.42734 4.42735 3.87447 4.98129 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
257.443 575.848 mo
(u)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
266.457 575.848 mo
(=\()
[11.0565 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
281.391 575.848 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
287.095 577.343 mo
(1)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
291.564 575.848 mo
(;)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
295.992 575.848 mo
(\(1)
[3.87445 0 ]xsh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
307.279 575.848 mo
( )sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
317.459 575.848 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
323.162 577.343 mo
(1)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
327.632 575.848 mo
(\))sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
331.506 575.848 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
337.209 577.343 mo
(2)sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
341.679 575.848 mo
(;)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
346.106 575.848 mo
(1)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
353.519 575.848 mo
( )sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
363.699 575.848 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
369.403 577.343 mo
(1)sh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
376.303 575.848 mo
( )sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
386.484 575.848 mo
(\(1)
[3.87445 0 ]xsh
JXZOWC+CMSY10*1 [9.9626 0 0 -9.9626 0 0 ]msf
397.771 575.848 mo
( )sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
407.951 575.848 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
413.654 577.343 mo
(1)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
418.123 575.848 mo
(\))sh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
421.998 575.848 mo
(u)sh
JXZOWA+CMR7*1 [6.9738 0 0 -6.9738 0 0 ]msf
427.701 577.343 mo
(2)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
432.17 575.848 mo
(\)comesfromaDirichlet)
[7.52078 4.42734 4.98129 8.30182 4.42734 7.5755 3.04462 3.90228 4.98129 11.9481 8.63757 7.61044 
2.76764 3.89233 2.76758 4.15839 5.53522 2.76764 4.42737 0 ]xsh
71.9998 587.803 mo
(distributionwithparametervector)
[5.53525 2.76762 3.92919 3.87447 3.90228 2.76763 5.53525 5.53526 3.87446 2.76763 4.98129 8.60373 
7.19498 2.76762 3.87447 8.61369 5.5253 4.98129 3.90228 4.98129 8.30182 4.43732 3.87445 4.42737 
6.97075 4.97932 4.42735 4.42734 3.87447 4.98131 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
225.593 587.803 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
232.003 587.803 mo
(.Thisprocedurecanbeconceptualizedasbreakingo\013piecesofastick)
[7.11131 7.19498 5.53525 2.76762 7.00764 5.5253 3.90225 5.26025 4.42737 4.42734 5.53525 5.53525 
3.90228 7.5058 4.42734 4.98129 8.60376 5.81418 7.49582 4.42737 4.98129 5.53525 4.42737 4.42734 
5.53525 3.87445 5.53528 4.98126 2.76764 2.76764 4.42734 4.42734 8.61371 4.98132 6.99765 5.53525 
3.90228 4.42737 4.98129 5.25827 2.76764 5.53522 8.0498 4.98132 8.88959 5.53525 2.76761 4.42737 
4.42737 4.42731 6.99768 4.98132 6.12305 8.04974 3.9292 3.87451 2.76758 4.14844 0 ]xsh
71.9998 599.759 mo
(oflengthoneinarandomwaysuchthatthelengthsofthe)
[4.9813 6.36214 2.76762 4.42735 5.53525 4.9813 3.87446 8.86276 4.9813 5.53526 7.74489 2.76762 
8.85281 8.30879 3.89232 4.98129 5.53525 5.53525 4.98131 11.6293 6.91602 4.70236 8.58577 3.9292 
5.53525 4.14839 8.8528 3.87448 5.53525 4.98129 7.19202 3.87447 5.53525 7.75485 2.76764 4.42734 
5.53525 4.98129 3.87448 5.53522 7.24677 4.98129 6.36215 3.87445 5.53528 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
332.828 599.759 mo
(k)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
341.649 599.759 mo
(piecesfollowaDir\()
[5.53525 2.76764 4.42734 4.42734 4.42737 7.24673 3.04459 4.98129 2.76764 2.76764 4.71231 10.5125 
8.29886 7.61041 2.76764 3.90228 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
425.723 599.759 mo
(\013)sh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
432.133 599.759 mo
(\)distribution.)
[7.19202 5.53525 2.76761 3.9292 3.87445 3.90228 2.76764 5.53525 5.53525 3.87445 2.76764 4.98129 
5.53525 0 ]xsh
86.9439 611.714 mo
(Now,let)
[7.47195 4.70235 7.19497 6.09513 2.76763 4.42735 0 ]xsh
JXZOVZ+CMMI10*1 [9.9626 0 0 -9.9626 0 0 ]msf
126.795 611.714 mo
(k>)
[8.26497 0 ]xsh
JXZOVY+CMR10*1 [9.9626 0 0 -9.9626 0 0 ]msf
145.578 611.714 mo
(3.)
[4.98129 0 ]xsh
75.3209 643.164 mo
(UWEETR-2010-0006)
[7.47195 10.2396 6.78057 6.78058 7.19498 7.33347 3.32051 4.98129 4.98131 4.98129 4.98131 3.3205 
4.98131 4.98131 4.98129 0 ]xsh
534.735 643.164 mo
(9)sh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 /2 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.29 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
